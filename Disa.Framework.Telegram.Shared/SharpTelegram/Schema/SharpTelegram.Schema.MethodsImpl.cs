
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the SharpTL compiler (https://github.com/Taggersoft/SharpTL).
//     Generated at 08/28/2017 08:37:23
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable 1591
// ReSharper disable UnusedMember.Global
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable ClassNeverInstantiated.Global
// ReSharper disable InconsistentNaming
namespace SharpTelegram.Schema
{
    using System.Threading.Tasks;
    using IRemoteProcedureCaller = SharpMTProto.IRemoteProcedureCaller;

    public partial class TelegramAsyncMethods : ITelegramAsyncMethods
    {
        private readonly IRemoteProcedureCaller _remoteProcedureCaller;

        public TelegramAsyncMethods(IRemoteProcedureCaller remoteProcedureCaller)
        {
            _remoteProcedureCaller = remoteProcedureCaller;
            SetupRemoteProcedureCaller(remoteProcedureCaller);
        }

        partial void SetupRemoteProcedureCaller(IRemoteProcedureCaller remoteProcedureCaller);

        public Task<System.Object> InvokeAfterMsgAsync(InvokeAfterMsgArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Object>(args);
        }

        public Task<System.Object> InvokeAfterMsgsAsync(InvokeAfterMsgsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Object>(args);
        }

        public Task<IAuthCheckedPhone> AuthCheckPhoneAsync(AuthCheckPhoneArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthCheckedPhone>(args);
        }

        public Task<IAuthSentCode> AuthSendCodeAsync(AuthSendCodeArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthSentCode>(args);
        }

        public Task<IAuthAuthorization> AuthSignUpAsync(AuthSignUpArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthAuthorization>(args);
        }

        public Task<IAuthAuthorization> AuthSignInAsync(AuthSignInArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthAuthorization>(args);
        }

        public Task<System.Boolean> AuthLogOutAsync(AuthLogOutArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> AuthResetAuthorizationsAsync(AuthResetAuthorizationsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> AuthSendInvitesAsync(AuthSendInvitesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IAuthExportedAuthorization> AuthExportAuthorizationAsync(AuthExportAuthorizationArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthExportedAuthorization>(args);
        }

        public Task<IAuthAuthorization> AuthImportAuthorizationAsync(AuthImportAuthorizationArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthAuthorization>(args);
        }

        public Task<System.Boolean> AuthBindTempAuthKeyAsync(AuthBindTempAuthKeyArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> AccountRegisterDeviceAsync(AccountRegisterDeviceArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> AccountUnregisterDeviceAsync(AccountUnregisterDeviceArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> AccountUpdateNotifySettingsAsync(AccountUpdateNotifySettingsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IPeerNotifySettings> AccountGetNotifySettingsAsync(AccountGetNotifySettingsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPeerNotifySettings>(args);
        }

        public Task<System.Boolean> AccountResetNotifySettingsAsync(AccountResetNotifySettingsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUser> AccountUpdateProfileAsync(AccountUpdateProfileArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUser>(args);
        }

        public Task<System.Boolean> AccountUpdateStatusAsync(AccountUpdateStatusArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Collections.Generic.List<IWallPaper>> AccountGetWallPapersAsync(AccountGetWallPapersArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<IWallPaper>>(args);
        }

        public Task<System.Boolean> AccountReportPeerAsync(AccountReportPeerArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Collections.Generic.List<IUser>> UsersGetUsersAsync(UsersGetUsersArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<IUser>>(args);
        }

        public Task<IUserFull> UsersGetFullUserAsync(UsersGetFullUserArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUserFull>(args);
        }

        public Task<System.Collections.Generic.List<IContactStatus>> ContactsGetStatusesAsync(ContactsGetStatusesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<IContactStatus>>(args);
        }

        public Task<IContactsContacts> ContactsGetContactsAsync(ContactsGetContactsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IContactsContacts>(args);
        }

        public Task<IContactsImportedContacts> ContactsImportContactsAsync(ContactsImportContactsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IContactsImportedContacts>(args);
        }

        public Task<IContactsLink> ContactsDeleteContactAsync(ContactsDeleteContactArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IContactsLink>(args);
        }

        public Task<System.Boolean> ContactsDeleteContactsAsync(ContactsDeleteContactsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> ContactsBlockAsync(ContactsBlockArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> ContactsUnblockAsync(ContactsUnblockArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IContactsBlocked> ContactsGetBlockedAsync(ContactsGetBlockedArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IContactsBlocked>(args);
        }

        public Task<System.Collections.Generic.List<System.UInt32>> ContactsExportCardAsync(ContactsExportCardArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<System.UInt32>>(args);
        }

        public Task<IUser> ContactsImportCardAsync(ContactsImportCardArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUser>(args);
        }

        public Task<IMessagesMessages> MessagesGetMessagesAsync(MessagesGetMessagesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesMessages>(args);
        }

        public Task<IMessagesDialogs> MessagesGetDialogsAsync(MessagesGetDialogsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesDialogs>(args);
        }

        public Task<IMessagesMessages> MessagesGetHistoryAsync(MessagesGetHistoryArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesMessages>(args);
        }

        public Task<IMessagesMessages> MessagesSearchAsync(MessagesSearchArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesMessages>(args);
        }

        public Task<IMessagesAffectedMessages> MessagesReadHistoryAsync(MessagesReadHistoryArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesAffectedMessages>(args);
        }

        public Task<IMessagesAffectedHistory> MessagesDeleteHistoryAsync(MessagesDeleteHistoryArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesAffectedHistory>(args);
        }

        public Task<IMessagesAffectedMessages> MessagesDeleteMessagesAsync(MessagesDeleteMessagesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesAffectedMessages>(args);
        }

        public Task<System.Collections.Generic.List<IReceivedNotifyMessage>> MessagesReceivedMessagesAsync(MessagesReceivedMessagesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<IReceivedNotifyMessage>>(args);
        }

        public Task<System.Boolean> MessagesSetTypingAsync(MessagesSetTypingArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUpdates> MessagesSendMessageAsync(MessagesSendMessageArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> MessagesSendMediaAsync(MessagesSendMediaArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> MessagesForwardMessagesAsync(MessagesForwardMessagesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<System.Boolean> MessagesReportSpamAsync(MessagesReportSpamArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> MessagesHideReportSpamAsync(MessagesHideReportSpamArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IPeerSettings> MessagesGetPeerSettingsAsync(MessagesGetPeerSettingsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPeerSettings>(args);
        }

        public Task<IMessagesChats> MessagesGetChatsAsync(MessagesGetChatsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesChats>(args);
        }

        public Task<IMessagesChatFull> MessagesGetFullChatAsync(MessagesGetFullChatArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesChatFull>(args);
        }

        public Task<IUpdates> MessagesEditChatTitleAsync(MessagesEditChatTitleArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> MessagesEditChatPhotoAsync(MessagesEditChatPhotoArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> MessagesAddChatUserAsync(MessagesAddChatUserArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> MessagesDeleteChatUserAsync(MessagesDeleteChatUserArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> MessagesCreateChatAsync(MessagesCreateChatArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdatesState> UpdatesGetStateAsync(UpdatesGetStateArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdatesState>(args);
        }

        public Task<IUpdatesDifference> UpdatesGetDifferenceAsync(UpdatesGetDifferenceArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdatesDifference>(args);
        }

        public Task<IUserProfilePhoto> PhotosUpdateProfilePhotoAsync(PhotosUpdateProfilePhotoArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUserProfilePhoto>(args);
        }

        public Task<IPhotosPhoto> PhotosUploadProfilePhotoAsync(PhotosUploadProfilePhotoArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPhotosPhoto>(args);
        }

        public Task<System.Collections.Generic.List<System.UInt64>> PhotosDeletePhotosAsync(PhotosDeletePhotosArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<System.UInt64>>(args);
        }

        public Task<System.Boolean> UploadSaveFilePartAsync(UploadSaveFilePartArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUploadFile> UploadGetFileAsync(UploadGetFileArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUploadFile>(args);
        }

        public Task<IConfig> HelpGetConfigAsync(HelpGetConfigArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IConfig>(args);
        }

        public Task<INearestDc> HelpGetNearestDcAsync(HelpGetNearestDcArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<INearestDc>(args);
        }

        public Task<IHelpAppUpdate> HelpGetAppUpdateAsync(HelpGetAppUpdateArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IHelpAppUpdate>(args);
        }

        public Task<System.Boolean> HelpSaveAppLogAsync(HelpSaveAppLogArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IHelpInviteText> HelpGetInviteTextAsync(HelpGetInviteTextArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IHelpInviteText>(args);
        }

        public Task<IPhotosPhotos> PhotosGetUserPhotosAsync(PhotosGetUserPhotosArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPhotosPhotos>(args);
        }

        public Task<IUpdates> MessagesForwardMessageAsync(MessagesForwardMessageArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IMessagesDhConfig> MessagesGetDhConfigAsync(MessagesGetDhConfigArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesDhConfig>(args);
        }

        public Task<IEncryptedChat> MessagesRequestEncryptionAsync(MessagesRequestEncryptionArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IEncryptedChat>(args);
        }

        public Task<IEncryptedChat> MessagesAcceptEncryptionAsync(MessagesAcceptEncryptionArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IEncryptedChat>(args);
        }

        public Task<System.Boolean> MessagesDiscardEncryptionAsync(MessagesDiscardEncryptionArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> MessagesSetEncryptedTypingAsync(MessagesSetEncryptedTypingArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> MessagesReadEncryptedHistoryAsync(MessagesReadEncryptedHistoryArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesSentEncryptedMessage> MessagesSendEncryptedAsync(MessagesSendEncryptedArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesSentEncryptedMessage>(args);
        }

        public Task<IMessagesSentEncryptedMessage> MessagesSendEncryptedFileAsync(MessagesSendEncryptedFileArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesSentEncryptedMessage>(args);
        }

        public Task<IMessagesSentEncryptedMessage> MessagesSendEncryptedServiceAsync(MessagesSendEncryptedServiceArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesSentEncryptedMessage>(args);
        }

        public Task<System.Collections.Generic.List<System.UInt64>> MessagesReceivedQueueAsync(MessagesReceivedQueueArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<System.UInt64>>(args);
        }

        public Task<System.Boolean> MessagesReportEncryptedSpamAsync(MessagesReportEncryptedSpamArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> UploadSaveBigFilePartAsync(UploadSaveBigFilePartArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Object> InitConnectionAsync(InitConnectionArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Object>(args);
        }

        public Task<IHelpSupport> HelpGetSupportAsync(HelpGetSupportArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IHelpSupport>(args);
        }

        public Task<IMessagesAffectedMessages> MessagesReadMessageContentsAsync(MessagesReadMessageContentsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesAffectedMessages>(args);
        }

        public Task<System.Boolean> AccountCheckUsernameAsync(AccountCheckUsernameArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUser> AccountUpdateUsernameAsync(AccountUpdateUsernameArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUser>(args);
        }

        public Task<IContactsFound> ContactsSearchAsync(ContactsSearchArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IContactsFound>(args);
        }

        public Task<IAccountPrivacyRules> AccountGetPrivacyAsync(AccountGetPrivacyArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAccountPrivacyRules>(args);
        }

        public Task<IAccountPrivacyRules> AccountSetPrivacyAsync(AccountSetPrivacyArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAccountPrivacyRules>(args);
        }

        public Task<System.Boolean> AccountDeleteAccountAsync(AccountDeleteAccountArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IAccountDaysTTL> AccountGetAccountTTLAsync(AccountGetAccountTTLArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAccountDaysTTL>(args);
        }

        public Task<System.Boolean> AccountSetAccountTTLAsync(AccountSetAccountTTLArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Object> InvokeWithLayerAsync(InvokeWithLayerArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Object>(args);
        }

        public Task<IContactsResolvedPeer> ContactsResolveUsernameAsync(ContactsResolveUsernameArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IContactsResolvedPeer>(args);
        }

        public Task<IAuthSentCode> AccountSendChangePhoneCodeAsync(AccountSendChangePhoneCodeArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthSentCode>(args);
        }

        public Task<IUser> AccountChangePhoneAsync(AccountChangePhoneArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUser>(args);
        }

        public Task<IMessagesAllStickers> MessagesGetAllStickersAsync(MessagesGetAllStickersArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesAllStickers>(args);
        }

        public Task<System.Boolean> AccountUpdateDeviceLockedAsync(AccountUpdateDeviceLockedArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IAuthAuthorization> AuthImportBotAuthorizationAsync(AuthImportBotAuthorizationArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthAuthorization>(args);
        }

        public Task<IMessageMedia> MessagesGetWebPagePreviewAsync(MessagesGetWebPagePreviewArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessageMedia>(args);
        }

        public Task<IAccountAuthorizations> AccountGetAuthorizationsAsync(AccountGetAuthorizationsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAccountAuthorizations>(args);
        }

        public Task<System.Boolean> AccountResetAuthorizationAsync(AccountResetAuthorizationArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IAccountPassword> AccountGetPasswordAsync(AccountGetPasswordArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAccountPassword>(args);
        }

        public Task<IAccountPasswordSettings> AccountGetPasswordSettingsAsync(AccountGetPasswordSettingsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAccountPasswordSettings>(args);
        }

        public Task<System.Boolean> AccountUpdatePasswordSettingsAsync(AccountUpdatePasswordSettingsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IAuthAuthorization> AuthCheckPasswordAsync(AuthCheckPasswordArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthAuthorization>(args);
        }

        public Task<IAuthPasswordRecovery> AuthRequestPasswordRecoveryAsync(AuthRequestPasswordRecoveryArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthPasswordRecovery>(args);
        }

        public Task<IAuthAuthorization> AuthRecoverPasswordAsync(AuthRecoverPasswordArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthAuthorization>(args);
        }

        public Task<System.Object> InvokeWithoutUpdatesAsync(InvokeWithoutUpdatesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Object>(args);
        }

        public Task<IExportedChatInvite> MessagesExportChatInviteAsync(MessagesExportChatInviteArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IExportedChatInvite>(args);
        }

        public Task<IChatInvite> MessagesCheckChatInviteAsync(MessagesCheckChatInviteArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IChatInvite>(args);
        }

        public Task<IUpdates> MessagesImportChatInviteAsync(MessagesImportChatInviteArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IMessagesStickerSet> MessagesGetStickerSetAsync(MessagesGetStickerSetArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesStickerSet>(args);
        }

        public Task<IMessagesStickerSetInstallResult> MessagesInstallStickerSetAsync(MessagesInstallStickerSetArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesStickerSetInstallResult>(args);
        }

        public Task<System.Boolean> MessagesUninstallStickerSetAsync(MessagesUninstallStickerSetArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUpdates> MessagesStartBotAsync(MessagesStartBotArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> HelpGetAppChangelogAsync(HelpGetAppChangelogArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<System.Collections.Generic.List<System.UInt32>> MessagesGetMessagesViewsAsync(MessagesGetMessagesViewsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<System.UInt32>>(args);
        }

        public Task<System.Boolean> ChannelsReadHistoryAsync(ChannelsReadHistoryArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesAffectedMessages> ChannelsDeleteMessagesAsync(ChannelsDeleteMessagesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesAffectedMessages>(args);
        }

        public Task<IMessagesAffectedHistory> ChannelsDeleteUserHistoryAsync(ChannelsDeleteUserHistoryArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesAffectedHistory>(args);
        }

        public Task<System.Boolean> ChannelsReportSpamAsync(ChannelsReportSpamArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesMessages> ChannelsGetMessagesAsync(ChannelsGetMessagesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesMessages>(args);
        }

        public Task<IChannelsChannelParticipants> ChannelsGetParticipantsAsync(ChannelsGetParticipantsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IChannelsChannelParticipants>(args);
        }

        public Task<IChannelsChannelParticipant> ChannelsGetParticipantAsync(ChannelsGetParticipantArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IChannelsChannelParticipant>(args);
        }

        public Task<IMessagesChats> ChannelsGetChannelsAsync(ChannelsGetChannelsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesChats>(args);
        }

        public Task<IMessagesChatFull> ChannelsGetFullChannelAsync(ChannelsGetFullChannelArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesChatFull>(args);
        }

        public Task<IUpdates> ChannelsCreateChannelAsync(ChannelsCreateChannelArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<System.Boolean> ChannelsEditAboutAsync(ChannelsEditAboutArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUpdates> ChannelsEditAdminAsync(ChannelsEditAdminArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> ChannelsEditTitleAsync(ChannelsEditTitleArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> ChannelsEditPhotoAsync(ChannelsEditPhotoArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<System.Boolean> ChannelsCheckUsernameAsync(ChannelsCheckUsernameArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> ChannelsUpdateUsernameAsync(ChannelsUpdateUsernameArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUpdates> ChannelsJoinChannelAsync(ChannelsJoinChannelArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> ChannelsLeaveChannelAsync(ChannelsLeaveChannelArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> ChannelsInviteToChannelAsync(ChannelsInviteToChannelArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> ChannelsKickFromChannelAsync(ChannelsKickFromChannelArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IExportedChatInvite> ChannelsExportInviteAsync(ChannelsExportInviteArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IExportedChatInvite>(args);
        }

        public Task<IUpdates> ChannelsDeleteChannelAsync(ChannelsDeleteChannelArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdatesChannelDifference> UpdatesGetChannelDifferenceAsync(UpdatesGetChannelDifferenceArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdatesChannelDifference>(args);
        }

        public Task<IUpdates> MessagesToggleChatAdminsAsync(MessagesToggleChatAdminsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<System.Boolean> MessagesEditChatAdminAsync(MessagesEditChatAdminArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUpdates> MessagesMigrateChatAsync(MessagesMigrateChatArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IMessagesMessages> MessagesSearchGlobalAsync(MessagesSearchGlobalArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesMessages>(args);
        }

        public Task<IHelpTermsOfService> HelpGetTermsOfServiceAsync(HelpGetTermsOfServiceArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IHelpTermsOfService>(args);
        }

        public Task<System.Boolean> MessagesReorderStickerSetsAsync(MessagesReorderStickerSetsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IDocument> MessagesGetDocumentByHashAsync(MessagesGetDocumentByHashArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IDocument>(args);
        }

        public Task<IMessagesFoundGifs> MessagesSearchGifsAsync(MessagesSearchGifsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesFoundGifs>(args);
        }

        public Task<IMessagesSavedGifs> MessagesGetSavedGifsAsync(MessagesGetSavedGifsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesSavedGifs>(args);
        }

        public Task<System.Boolean> MessagesSaveGifAsync(MessagesSaveGifArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesBotResults> MessagesGetInlineBotResultsAsync(MessagesGetInlineBotResultsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesBotResults>(args);
        }

        public Task<System.Boolean> MessagesSetInlineBotResultsAsync(MessagesSetInlineBotResultsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUpdates> MessagesSendInlineBotResultAsync(MessagesSendInlineBotResultArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> ChannelsToggleInvitesAsync(ChannelsToggleInvitesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IExportedMessageLink> ChannelsExportMessageLinkAsync(ChannelsExportMessageLinkArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IExportedMessageLink>(args);
        }

        public Task<IUpdates> ChannelsToggleSignaturesAsync(ChannelsToggleSignaturesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> ChannelsUpdatePinnedMessageAsync(ChannelsUpdatePinnedMessageArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IAuthSentCode> AuthResendCodeAsync(AuthResendCodeArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthSentCode>(args);
        }

        public Task<System.Boolean> AuthCancelCodeAsync(AuthCancelCodeArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesMessageEditData> MessagesGetMessageEditDataAsync(MessagesGetMessageEditDataArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesMessageEditData>(args);
        }

        public Task<IUpdates> MessagesEditMessageAsync(MessagesEditMessageArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<System.Boolean> MessagesEditInlineBotMessageAsync(MessagesEditInlineBotMessageArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesBotCallbackAnswer> MessagesGetBotCallbackAnswerAsync(MessagesGetBotCallbackAnswerArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesBotCallbackAnswer>(args);
        }

        public Task<System.Boolean> MessagesSetBotCallbackAnswerAsync(MessagesSetBotCallbackAnswerArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IContactsTopPeers> ContactsGetTopPeersAsync(ContactsGetTopPeersArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IContactsTopPeers>(args);
        }

        public Task<System.Boolean> ContactsResetTopPeerRatingAsync(ContactsResetTopPeerRatingArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesPeerDialogs> MessagesGetPeerDialogsAsync(MessagesGetPeerDialogsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesPeerDialogs>(args);
        }

        public Task<System.Boolean> MessagesSaveDraftAsync(MessagesSaveDraftArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUpdates> MessagesGetAllDraftsAsync(MessagesGetAllDraftsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IMessagesFeaturedStickers> MessagesGetFeaturedStickersAsync(MessagesGetFeaturedStickersArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesFeaturedStickers>(args);
        }

        public Task<System.Boolean> MessagesReadFeaturedStickersAsync(MessagesReadFeaturedStickersArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesRecentStickers> MessagesGetRecentStickersAsync(MessagesGetRecentStickersArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesRecentStickers>(args);
        }

        public Task<System.Boolean> MessagesSaveRecentStickerAsync(MessagesSaveRecentStickerArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> MessagesClearRecentStickersAsync(MessagesClearRecentStickersArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesArchivedStickers> MessagesGetArchivedStickersAsync(MessagesGetArchivedStickersArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesArchivedStickers>(args);
        }

        public Task<IAuthSentCode> AccountSendConfirmPhoneCodeAsync(AccountSendConfirmPhoneCodeArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthSentCode>(args);
        }

        public Task<System.Boolean> AccountConfirmPhoneAsync(AccountConfirmPhoneArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesChats> ChannelsGetAdminedPublicChannelsAsync(ChannelsGetAdminedPublicChannelsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesChats>(args);
        }

        public Task<IMessagesAllStickers> MessagesGetMaskStickersAsync(MessagesGetMaskStickersArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesAllStickers>(args);
        }

        public Task<System.Collections.Generic.List<IStickerSetCovered>> MessagesGetAttachedStickersAsync(MessagesGetAttachedStickersArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<IStickerSetCovered>>(args);
        }

        public Task<System.Boolean> AuthDropTempAuthKeysAsync(AuthDropTempAuthKeysArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUpdates> MessagesSetGameScoreAsync(MessagesSetGameScoreArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<System.Boolean> MessagesSetInlineGameScoreAsync(MessagesSetInlineGameScoreArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesHighScores> MessagesGetGameHighScoresAsync(MessagesGetGameHighScoresArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesHighScores>(args);
        }

        public Task<IMessagesHighScores> MessagesGetInlineGameHighScoresAsync(MessagesGetInlineGameHighScoresArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesHighScores>(args);
        }

        public Task<IMessagesChats> MessagesGetCommonChatsAsync(MessagesGetCommonChatsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesChats>(args);
        }

        public Task<IMessagesChats> MessagesGetAllChatsAsync(MessagesGetAllChatsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesChats>(args);
        }

        public Task<System.Boolean> HelpSetBotUpdatesStatusAsync(HelpSetBotUpdatesStatusArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IWebPage> MessagesGetWebPageAsync(MessagesGetWebPageArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IWebPage>(args);
        }

        public Task<System.Boolean> MessagesToggleDialogPinAsync(MessagesToggleDialogPinArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> MessagesReorderPinnedDialogsAsync(MessagesReorderPinnedDialogsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesPeerDialogs> MessagesGetPinnedDialogsAsync(MessagesGetPinnedDialogsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesPeerDialogs>(args);
        }

        public Task<IDataJSON> BotsSendCustomRequestAsync(BotsSendCustomRequestArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IDataJSON>(args);
        }

        public Task<System.Boolean> BotsAnswerWebhookJSONQueryAsync(BotsAnswerWebhookJSONQueryArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUploadWebFile> UploadGetWebFileAsync(UploadGetWebFileArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUploadWebFile>(args);
        }

        public Task<IPaymentsPaymentForm> PaymentsGetPaymentFormAsync(PaymentsGetPaymentFormArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPaymentsPaymentForm>(args);
        }

        public Task<IPaymentsPaymentReceipt> PaymentsGetPaymentReceiptAsync(PaymentsGetPaymentReceiptArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPaymentsPaymentReceipt>(args);
        }

        public Task<IPaymentsValidatedRequestedInfo> PaymentsValidateRequestedInfoAsync(PaymentsValidateRequestedInfoArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPaymentsValidatedRequestedInfo>(args);
        }

        public Task<IPaymentsPaymentResult> PaymentsSendPaymentFormAsync(PaymentsSendPaymentFormArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPaymentsPaymentResult>(args);
        }

        public Task<IAccountTmpPassword> AccountGetTmpPasswordAsync(AccountGetTmpPasswordArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAccountTmpPassword>(args);
        }

        public Task<IPaymentsSavedInfo> PaymentsGetSavedInfoAsync(PaymentsGetSavedInfoArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPaymentsSavedInfo>(args);
        }

        public Task<System.Boolean> PaymentsClearSavedInfoAsync(PaymentsClearSavedInfoArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> MessagesSetBotShippingResultsAsync(MessagesSetBotShippingResultsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> MessagesSetBotPrecheckoutResultsAsync(MessagesSetBotPrecheckoutResultsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesStickerSet> StickersCreateStickerSetAsync(StickersCreateStickerSetArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesStickerSet>(args);
        }

        public Task<System.Boolean> StickersRemoveStickerFromSetAsync(StickersRemoveStickerFromSetArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> StickersChangeStickerPositionAsync(StickersChangeStickerPositionArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesStickerSet> StickersAddStickerToSetAsync(StickersAddStickerToSetArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesStickerSet>(args);
        }

        public Task<IMessageMedia> MessagesUploadMediaAsync(MessagesUploadMediaArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessageMedia>(args);
        }

        public Task<IDataJSON> PhoneGetCallConfigAsync(PhoneGetCallConfigArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IDataJSON>(args);
        }

        public Task<IPhonePhoneCall> PhoneRequestCallAsync(PhoneRequestCallArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPhonePhoneCall>(args);
        }

        public Task<IPhonePhoneCall> PhoneAcceptCallAsync(PhoneAcceptCallArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPhonePhoneCall>(args);
        }

        public Task<IPhonePhoneCall> PhoneConfirmCallAsync(PhoneConfirmCallArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPhonePhoneCall>(args);
        }

        public Task<System.Boolean> PhoneReceivedCallAsync(PhoneReceivedCallArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUpdates> PhoneDiscardCallAsync(PhoneDiscardCallArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<IUpdates> PhoneSetCallRatingAsync(PhoneSetCallRatingArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdates>(args);
        }

        public Task<System.Boolean> PhoneSaveCallDebugAsync(PhoneSaveCallDebugArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUploadCdnFile> UploadGetCdnFileAsync(UploadGetCdnFileArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUploadCdnFile>(args);
        }

        public Task<System.Boolean> UploadReuploadCdnFileAsync(UploadReuploadCdnFileArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<ICdnConfig> HelpGetCdnConfigAsync(HelpGetCdnConfigArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<ICdnConfig>(args);
        }

    }
}
#pragma warning restore 1591
