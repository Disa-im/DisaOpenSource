
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the SharpTL compiler (https://github.com/Taggersoft/SharpTL).
//     Generated at 11/20/2014 16:49:14
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System.Threading.Tasks;
using SharpMTProto;

#pragma warning disable 1591
// ReSharper disable UnusedMember.Global
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable ClassNeverInstantiated.Global
// ReSharper disable InconsistentNaming
namespace SharpTelegram.Schema.Layer18
{
    public partial class TelegramAsyncMethods : ITelegramAsyncMethods
    {
        private readonly IRemoteProcedureCaller _remoteProcedureCaller;

        public TelegramAsyncMethods(IRemoteProcedureCaller remoteProcedureCaller)
        {
            _remoteProcedureCaller = remoteProcedureCaller;
            SetupRemoteProcedureCaller(remoteProcedureCaller);
        }

        partial void SetupRemoteProcedureCaller(IRemoteProcedureCaller remoteProcedureCaller);

        public Task<System.Object> InvokeAfterMsgAsync(InvokeAfterMsgArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Object>(args);
        }

        public Task<System.Object> InvokeAfterMsgsAsync(InvokeAfterMsgsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Object>(args);
        }

        public Task<IAuthCheckedPhone> AuthCheckPhoneAsync(AuthCheckPhoneArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthCheckedPhone>(args);
        }

        public Task<IAuthSentCode> AuthSendCodeAsync(AuthSendCodeArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthSentCode>(args);
        }

        public Task<System.Boolean> AuthSendCallAsync(AuthSendCallArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IAuthAuthorization> AuthSignUpAsync(AuthSignUpArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthAuthorization>(args);
        }

        public Task<IAuthAuthorization> AuthSignInAsync(AuthSignInArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthAuthorization>(args);
        }

        public Task<System.Boolean> AuthLogOutAsync(AuthLogOutArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> AuthResetAuthorizationsAsync(AuthResetAuthorizationsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> AuthSendInvitesAsync(AuthSendInvitesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IAuthExportedAuthorization> AuthExportAuthorizationAsync(AuthExportAuthorizationArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthExportedAuthorization>(args);
        }

        public Task<IAuthAuthorization> AuthImportAuthorizationAsync(AuthImportAuthorizationArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IAuthAuthorization>(args);
        }

        public Task<System.Boolean> AuthBindTempAuthKeyAsync(AuthBindTempAuthKeyArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> AccountRegisterDeviceAsync(AccountRegisterDeviceArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> AccountUnregisterDeviceAsync(AccountUnregisterDeviceArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> AccountUpdateNotifySettingsAsync(AccountUpdateNotifySettingsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IPeerNotifySettings> AccountGetNotifySettingsAsync(AccountGetNotifySettingsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPeerNotifySettings>(args);
        }

        public Task<System.Boolean> AccountResetNotifySettingsAsync(AccountResetNotifySettingsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUser> AccountUpdateProfileAsync(AccountUpdateProfileArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUser>(args);
        }

        public Task<System.Boolean> AccountUpdateStatusAsync(AccountUpdateStatusArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Collections.Generic.List<IWallPaper>> AccountGetWallPapersAsync(AccountGetWallPapersArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<IWallPaper>>(args);
        }

        public Task<System.Collections.Generic.List<IUser>> UsersGetUsersAsync(UsersGetUsersArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<IUser>>(args);
        }

        public Task<IUserFull> UsersGetFullUserAsync(UsersGetFullUserArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUserFull>(args);
        }

        public Task<System.Collections.Generic.List<IContactStatus>> ContactsGetStatusesAsync(ContactsGetStatusesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<IContactStatus>>(args);
        }

        public Task<IContactsContacts> ContactsGetContactsAsync(ContactsGetContactsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IContactsContacts>(args);
        }

        public Task<IContactsImportedContacts> ContactsImportContactsAsync(ContactsImportContactsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IContactsImportedContacts>(args);
        }

        public Task<IContactsSuggested> ContactsGetSuggestedAsync(ContactsGetSuggestedArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IContactsSuggested>(args);
        }

        public Task<IContactsLink> ContactsDeleteContactAsync(ContactsDeleteContactArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IContactsLink>(args);
        }

        public Task<System.Boolean> ContactsDeleteContactsAsync(ContactsDeleteContactsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> ContactsBlockAsync(ContactsBlockArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> ContactsUnblockAsync(ContactsUnblockArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IContactsBlocked> ContactsGetBlockedAsync(ContactsGetBlockedArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IContactsBlocked>(args);
        }

        public Task<System.Collections.Generic.List<System.UInt32>> ContactsExportCardAsync(ContactsExportCardArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<System.UInt32>>(args);
        }

        public Task<IUser> ContactsImportCardAsync(ContactsImportCardArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUser>(args);
        }

        public Task<IMessagesMessages> MessagesGetMessagesAsync(MessagesGetMessagesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesMessages>(args);
        }

        public Task<IMessagesDialogs> MessagesGetDialogsAsync(MessagesGetDialogsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesDialogs>(args);
        }

        public Task<IMessagesMessages> MessagesGetHistoryAsync(MessagesGetHistoryArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesMessages>(args);
        }

        public Task<IMessagesMessages> MessagesSearchAsync(MessagesSearchArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesMessages>(args);
        }

        public Task<IMessagesAffectedHistory> MessagesReadHistoryAsync(MessagesReadHistoryArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesAffectedHistory>(args);
        }

        public Task<IMessagesAffectedHistory> MessagesDeleteHistoryAsync(MessagesDeleteHistoryArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesAffectedHistory>(args);
        }

        public Task<System.Collections.Generic.List<System.UInt32>> MessagesDeleteMessagesAsync(MessagesDeleteMessagesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<System.UInt32>>(args);
        }

        public Task<System.Collections.Generic.List<System.UInt32>> MessagesRestoreMessagesAsync(MessagesRestoreMessagesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<System.UInt32>>(args);
        }

        public Task<System.Collections.Generic.List<System.UInt32>> MessagesReceivedMessagesAsync(MessagesReceivedMessagesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<System.UInt32>>(args);
        }

        public Task<System.Boolean> MessagesSetTypingAsync(MessagesSetTypingArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesSentMessage> MessagesSendMessageAsync(MessagesSendMessageArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesSentMessage>(args);
        }

        public Task<IMessagesStatedMessage> MessagesSendMediaAsync(MessagesSendMediaArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesStatedMessage>(args);
        }

        public Task<IMessagesStatedMessages> MessagesForwardMessagesAsync(MessagesForwardMessagesArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesStatedMessages>(args);
        }

        public Task<IMessagesChats> MessagesGetChatsAsync(MessagesGetChatsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesChats>(args);
        }

        public Task<IMessagesChatFull> MessagesGetFullChatAsync(MessagesGetFullChatArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesChatFull>(args);
        }

        public Task<IMessagesStatedMessage> MessagesEditChatTitleAsync(MessagesEditChatTitleArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesStatedMessage>(args);
        }

        public Task<IMessagesStatedMessage> MessagesEditChatPhotoAsync(MessagesEditChatPhotoArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesStatedMessage>(args);
        }

        public Task<IMessagesStatedMessage> MessagesAddChatUserAsync(MessagesAddChatUserArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesStatedMessage>(args);
        }

        public Task<IMessagesStatedMessage> MessagesDeleteChatUserAsync(MessagesDeleteChatUserArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesStatedMessage>(args);
        }

        public Task<IMessagesStatedMessage> MessagesCreateChatAsync(MessagesCreateChatArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesStatedMessage>(args);
        }

        public Task<IUpdatesState> UpdatesGetStateAsync(UpdatesGetStateArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdatesState>(args);
        }

        public Task<IUpdatesDifference> UpdatesGetDifferenceAsync(UpdatesGetDifferenceArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUpdatesDifference>(args);
        }

        public Task<IUserProfilePhoto> PhotosUpdateProfilePhotoAsync(PhotosUpdateProfilePhotoArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUserProfilePhoto>(args);
        }

        public Task<IPhotosPhoto> PhotosUploadProfilePhotoAsync(PhotosUploadProfilePhotoArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPhotosPhoto>(args);
        }

        public Task<System.Boolean> UploadSaveFilePartAsync(UploadSaveFilePartArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUploadFile> UploadGetFileAsync(UploadGetFileArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUploadFile>(args);
        }

        public Task<IConfig> HelpGetConfigAsync(HelpGetConfigArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IConfig>(args);
        }

        public Task<INearestDc> HelpGetNearestDcAsync(HelpGetNearestDcArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<INearestDc>(args);
        }

        public Task<IHelpAppUpdate> HelpGetAppUpdateAsync(HelpGetAppUpdateArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IHelpAppUpdate>(args);
        }

        public Task<System.Boolean> HelpSaveAppLogAsync(HelpSaveAppLogArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IHelpInviteText> HelpGetInviteTextAsync(HelpGetInviteTextArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IHelpInviteText>(args);
        }

        public Task<IPhotosPhotos> PhotosGetUserPhotosAsync(PhotosGetUserPhotosArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IPhotosPhotos>(args);
        }

        public Task<IMessagesStatedMessage> MessagesForwardMessageAsync(MessagesForwardMessageArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesStatedMessage>(args);
        }

        public Task<IMessagesStatedMessages> MessagesSendBroadcastAsync(MessagesSendBroadcastArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesStatedMessages>(args);
        }

        public Task<IGeochatsLocated> GeochatsGetLocatedAsync(GeochatsGetLocatedArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IGeochatsLocated>(args);
        }

        public Task<IGeochatsMessages> GeochatsGetRecentsAsync(GeochatsGetRecentsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IGeochatsMessages>(args);
        }

        public Task<IGeochatsStatedMessage> GeochatsCheckinAsync(GeochatsCheckinArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IGeochatsStatedMessage>(args);
        }

        public Task<IMessagesChatFull> GeochatsGetFullChatAsync(GeochatsGetFullChatArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesChatFull>(args);
        }

        public Task<IGeochatsStatedMessage> GeochatsEditChatTitleAsync(GeochatsEditChatTitleArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IGeochatsStatedMessage>(args);
        }

        public Task<IGeochatsStatedMessage> GeochatsEditChatPhotoAsync(GeochatsEditChatPhotoArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IGeochatsStatedMessage>(args);
        }

        public Task<IGeochatsMessages> GeochatsSearchAsync(GeochatsSearchArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IGeochatsMessages>(args);
        }

        public Task<IGeochatsMessages> GeochatsGetHistoryAsync(GeochatsGetHistoryArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IGeochatsMessages>(args);
        }

        public Task<System.Boolean> GeochatsSetTypingAsync(GeochatsSetTypingArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IGeochatsStatedMessage> GeochatsSendMessageAsync(GeochatsSendMessageArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IGeochatsStatedMessage>(args);
        }

        public Task<IGeochatsStatedMessage> GeochatsSendMediaAsync(GeochatsSendMediaArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IGeochatsStatedMessage>(args);
        }

        public Task<IGeochatsStatedMessage> GeochatsCreateGeoChatAsync(GeochatsCreateGeoChatArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IGeochatsStatedMessage>(args);
        }

        public Task<IMessagesDhConfig> MessagesGetDhConfigAsync(MessagesGetDhConfigArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesDhConfig>(args);
        }

        public Task<IEncryptedChat> MessagesRequestEncryptionAsync(MessagesRequestEncryptionArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IEncryptedChat>(args);
        }

        public Task<IEncryptedChat> MessagesAcceptEncryptionAsync(MessagesAcceptEncryptionArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IEncryptedChat>(args);
        }

        public Task<System.Boolean> MessagesDiscardEncryptionAsync(MessagesDiscardEncryptionArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> MessagesSetEncryptedTypingAsync(MessagesSetEncryptedTypingArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Boolean> MessagesReadEncryptedHistoryAsync(MessagesReadEncryptedHistoryArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IMessagesSentEncryptedMessage> MessagesSendEncryptedAsync(MessagesSendEncryptedArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesSentEncryptedMessage>(args);
        }

        public Task<IMessagesSentEncryptedMessage> MessagesSendEncryptedFileAsync(MessagesSendEncryptedFileArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesSentEncryptedMessage>(args);
        }

        public Task<IMessagesSentEncryptedMessage> MessagesSendEncryptedServiceAsync(MessagesSendEncryptedServiceArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IMessagesSentEncryptedMessage>(args);
        }

        public Task<System.Collections.Generic.List<System.UInt64>> MessagesReceivedQueueAsync(MessagesReceivedQueueArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<System.UInt64>>(args);
        }

        public Task<System.Boolean> UploadSaveBigFilePartAsync(UploadSaveBigFilePartArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Object> InitConnectionAsync(InitConnectionArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Object>(args);
        }

        public Task<IHelpSupport> HelpGetSupportAsync(HelpGetSupportArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IHelpSupport>(args);
        }

        public Task<System.Boolean> AuthSendSmsAsync(AuthSendSmsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<System.Collections.Generic.List<System.UInt32>> MessagesReadMessageContentsAsync(MessagesReadMessageContentsArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Collections.Generic.List<System.UInt32>>(args);
        }

        public Task<System.Boolean> AccountCheckUsernameAsync(AccountCheckUsernameArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Boolean>(args);
        }

        public Task<IUser> AccountUpdateUsernameAsync(AccountUpdateUsernameArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IUser>(args);
        }

        public Task<IContactsFound> ContactsSearchAsync(ContactsSearchArgs args)
        {
            return _remoteProcedureCaller.RpcAsync<IContactsFound>(args);
        }

        public Task<System.Object> InvokeWithLayer18Async(InvokeWithLayer18Args args)
        {
            return _remoteProcedureCaller.RpcAsync<System.Object>(args);
        }

    }
}
#pragma warning restore 1591
