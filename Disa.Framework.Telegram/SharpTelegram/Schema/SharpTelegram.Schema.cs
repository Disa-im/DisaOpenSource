// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the SharpTL compiler (https://github.com/Taggersoft/SharpTL).
//     Generated at 05/26/2016 19:59:15
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable 1591

#region R#

// ReSharper disable UnusedAutoPropertyAccessor.Global
// ReSharper disable CollectionNeverUpdated.Global
// ReSharper disable UnusedMemberInSuper.Global
// ReSharper disable UnusedParameter.Global
// ReSharper disable UnusedMember.Global
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable ClassNeverInstantiated.Global
// ReSharper disable InconsistentNaming

#endregion

namespace SharpTelegram.Schema
{
	using SharpTL;
	using System.Threading.Tasks;

	// TL constructors.

	[TLObject (0x3FEDD339)]
	public partial class True : ITrue
	{
	}

	[TLObject (0xC4B9F9BB)]
	public partial class Error : IError
	{

		[TLProperty (1)]
		public System.UInt32 Code { get; set; }


		[TLProperty (2)]
		public System.String Text { get; set; }

	}

	[TLObject (0x56730BCC)]
	public partial class Null : INull
	{
	}

	[TLObject (0x7F3B18EA)]
	public partial class InputPeerEmpty : IInputPeer
	{
	}

	[TLObject (0x7DA07EC9)]
	public partial class InputPeerSelf : IInputPeer
	{
	}

	[TLObject (0x179BE863)]
	public partial class InputPeerChat : IInputPeer
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }

	}

	[TLObject (0xB98886CF)]
	public partial class InputUserEmpty : IInputUser
	{
	}

	[TLObject (0xF7C1B13F)]
	public partial class InputUserSelf : IInputUser
	{
	}

	[TLObject (0xF392B7F4)]
	public partial class InputPhoneContact : IInputContact
	{

		[TLProperty (1)]
		public System.UInt64 ClientId { get; set; }


		[TLProperty (2)]
		public System.String Phone { get; set; }


		[TLProperty (3)]
		public System.String FirstName { get; set; }


		[TLProperty (4)]
		public System.String LastName { get; set; }

	}

	[TLObject (0xF52FF27F)]
	public partial class InputFile : IInputFile
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt32 Parts { get; set; }


		[TLProperty (3)]
		public System.String Name { get; set; }


		[TLProperty (4)]
		public System.String Md5Checksum { get; set; }

	}

	[TLObject (0x9664F57F)]
	public partial class InputMediaEmpty : IInputMedia
	{
	}

	[TLObject (0xF7AFF1C0)]
	public partial class InputMediaUploadedPhoto : IInputMedia
	{

		[TLProperty (1)]
		public IInputFile File { get; set; }


		[TLProperty (2)]
		public System.String Caption { get; set; }

	}

	[TLObject (0xE9BFB4F3)]
	public partial class InputMediaPhoto : IInputMedia
	{

		[TLProperty (1)]
		public IInputPhoto Id { get; set; }


		[TLProperty (2)]
		public System.String Caption { get; set; }

	}

	[TLObject (0xF9C44144)]
	public partial class InputMediaGeoPoint : IInputMedia
	{

		[TLProperty (1)]
		public IInputGeoPoint GeoPoint { get; set; }

	}

	[TLObject (0xA6E45987)]
	public partial class InputMediaContact : IInputMedia
	{

		[TLProperty (1)]
		public System.String PhoneNumber { get; set; }


		[TLProperty (2)]
		public System.String FirstName { get; set; }


		[TLProperty (3)]
		public System.String LastName { get; set; }

	}

	[TLObject (0x1CA48F57)]
	public partial class InputChatPhotoEmpty : IInputChatPhoto
	{
	}

	[TLObject (0x94254732)]
	public partial class InputChatUploadedPhoto : IInputChatPhoto
	{

		[TLProperty (1)]
		public IInputFile File { get; set; }


		[TLProperty (2)]
		public IInputPhotoCrop Crop { get; set; }

	}

	[TLObject (0xB2E1BF08)]
	public partial class InputChatPhoto : IInputChatPhoto
	{

		[TLProperty (1)]
		public IInputPhoto Id { get; set; }


		[TLProperty (2)]
		public IInputPhotoCrop Crop { get; set; }

	}

	[TLObject (0xE4C123D6)]
	public partial class InputGeoPointEmpty : IInputGeoPoint
	{
	}

	[TLObject (0xF3B7ACC9)]
	public partial class InputGeoPoint : IInputGeoPoint
	{

		[TLProperty (1)]
		public System.Double Lat { get; set; }


		[TLProperty (2)]
		public System.Double Long { get; set; }

	}

	[TLObject (0x1CD7BF0D)]
	public partial class InputPhotoEmpty : IInputPhoto
	{
	}

	[TLObject (0xFB95C6C4)]
	public partial class InputPhoto : IInputPhoto
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }

	}

	[TLObject (0x14637196)]
	public partial class InputFileLocation : IInputFileLocation
	{

		[TLProperty (1)]
		public System.UInt64 VolumeId { get; set; }


		[TLProperty (2)]
		public System.UInt32 LocalId { get; set; }


		[TLProperty (3)]
		public System.UInt64 Secret { get; set; }

	}

	[TLObject (0xADE6B004)]
	public partial class InputPhotoCropAuto : IInputPhotoCrop
	{
	}

	[TLObject (0xD9915325)]
	public partial class InputPhotoCrop : IInputPhotoCrop
	{

		[TLProperty (1)]
		public System.Double CropLeft { get; set; }


		[TLProperty (2)]
		public System.Double CropTop { get; set; }


		[TLProperty (3)]
		public System.Double CropWidth { get; set; }

	}

	[TLObject (0x770656A8)]
	public partial class InputAppEvent : IInputAppEvent
	{

		[TLProperty (1)]
		public System.Double Time { get; set; }


		[TLProperty (2)]
		public System.String Type { get; set; }


		[TLProperty (3)]
		public System.UInt64 Peer { get; set; }


		[TLProperty (4)]
		public System.String Data { get; set; }

	}

	[TLObject (0x9DB1BC6D)]
	public partial class PeerUser : IPeer
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }

	}

	[TLObject (0xBAD0E5BB)]
	public partial class PeerChat : IPeer
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }

	}

	[TLObject (0xAA963B05)]
	public partial class StorageFileUnknown : IStorageFileType
	{
	}

	[TLObject (0x007EFE0E)]
	public partial class StorageFileJpeg : IStorageFileType
	{
	}

	[TLObject (0xCAE1AADF)]
	public partial class StorageFileGif : IStorageFileType
	{
	}

	[TLObject (0x0A4F63C0)]
	public partial class StorageFilePng : IStorageFileType
	{
	}

	[TLObject (0xAE1E508D)]
	public partial class StorageFilePdf : IStorageFileType
	{
	}

	[TLObject (0x528A0677)]
	public partial class StorageFileMp3 : IStorageFileType
	{
	}

	[TLObject (0x4B09EBBC)]
	public partial class StorageFileMov : IStorageFileType
	{
	}

	[TLObject (0x40BC6F52)]
	public partial class StorageFilePartial : IStorageFileType
	{
	}

	[TLObject (0xB3CEA0E4)]
	public partial class StorageFileMp4 : IStorageFileType
	{
	}

	[TLObject (0x1081464C)]
	public partial class StorageFileWebp : IStorageFileType
	{
	}

	[TLObject (0x7C596B46)]
	public partial class FileLocationUnavailable : IFileLocation
	{

		[TLProperty (1)]
		public System.UInt64 VolumeId { get; set; }


		[TLProperty (2)]
		public System.UInt32 LocalId { get; set; }


		[TLProperty (3)]
		public System.UInt64 Secret { get; set; }

	}

	[TLObject (0x53D69076)]
	public partial class FileLocation : IFileLocation
	{

		[TLProperty (1)]
		public System.UInt32 DcId { get; set; }


		[TLProperty (2)]
		public System.UInt64 VolumeId { get; set; }


		[TLProperty (3)]
		public System.UInt32 LocalId { get; set; }


		[TLProperty (4)]
		public System.UInt64 Secret { get; set; }

	}

	[TLObject (0x200250BA)]
	public partial class UserEmpty : IUser
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }

	}

	[TLObject (0x4F11BAE1)]
	public partial class UserProfilePhotoEmpty : IUserProfilePhoto
	{
	}

	[TLObject (0xD559D8C8)]
	public partial class UserProfilePhoto : IUserProfilePhoto
	{

		[TLProperty (1)]
		public System.UInt64 PhotoId { get; set; }


		[TLProperty (2)]
		public IFileLocation PhotoSmall { get; set; }


		[TLProperty (3)]
		public IFileLocation PhotoBig { get; set; }

	}

	[TLObject (0x09D05049)]
	public partial class UserStatusEmpty : IUserStatus
	{
	}

	[TLObject (0xEDB93949)]
	public partial class UserStatusOnline : IUserStatus
	{

		[TLProperty (1)]
		public System.UInt32 Expires { get; set; }

	}

	[TLObject (0x008C703F)]
	public partial class UserStatusOffline : IUserStatus
	{

		[TLProperty (1)]
		public System.UInt32 WasOnline { get; set; }

	}

	[TLObject (0x9BA2D800)]
	public partial class ChatEmpty : IChat
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }

	}

	[TLObject (0xD91CDD54)]
	public partial class Chat : IChat
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Creator { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue Kicked { get; set; }


		[TLProperty (4, 2, true)]
		public ITrue Left { get; set; }


		[TLProperty (5, 3, true)]
		public ITrue AdminsEnabled { get; set; }


		[TLProperty (6, 4, true)]
		public ITrue Admin { get; set; }


		[TLProperty (7, 5, true)]
		public ITrue Deactivated { get; set; }


		[TLProperty (8)]
		public System.UInt32 Id { get; set; }


		[TLProperty (9)]
		public System.String Title { get; set; }


		[TLProperty (10)]
		public IChatPhoto Photo { get; set; }


		[TLProperty (11)]
		public System.UInt32 ParticipantsCount { get; set; }


		[TLProperty (12)]
		public System.UInt32 Date { get; set; }


		[TLProperty (13)]
		public System.UInt32 Version { get; set; }


		[TLProperty (14, 6, true)]
		public IInputChannel MigratedTo { get; set; }

	}

	[TLObject (0x07328BDB)]
	public partial class ChatForbidden : IChat
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }


		[TLProperty (2)]
		public System.String Title { get; set; }

	}

	[TLObject (0x2E02A614)]
	public partial class ChatFull : IChatFull
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }


		[TLProperty (2)]
		public IChatParticipants Participants { get; set; }


		[TLProperty (3)]
		public IPhoto ChatPhoto { get; set; }


		[TLProperty (4)]
		public IPeerNotifySettings NotifySettings { get; set; }


		[TLProperty (5)]
		public IExportedChatInvite ExportedInvite { get; set; }


		[TLProperty (6)]
		public System.Collections.Generic.List<IBotInfo> BotInfo { get; set; }

	}

	[TLObject (0xC8D7493E)]
	public partial class ChatParticipant : IChatParticipant
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.UInt32 InviterId { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0xFC900C2B)]
	public partial class ChatParticipantsForbidden : IChatParticipants
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (3, 0, true)]
		public IChatParticipant SelfParticipant { get; set; }

	}

	[TLObject (0x3F460FED)]
	public partial class ChatParticipants : IChatParticipants
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IChatParticipant> Participants { get; set; }


		[TLProperty (3)]
		public System.UInt32 Version { get; set; }

	}

	[TLObject (0x37C1011C)]
	public partial class ChatPhotoEmpty : IChatPhoto
	{
	}

	[TLObject (0x6153276A)]
	public partial class ChatPhoto : IChatPhoto
	{

		[TLProperty (1)]
		public IFileLocation PhotoSmall { get; set; }


		[TLProperty (2)]
		public IFileLocation PhotoBig { get; set; }

	}

	[TLObject (0x83E5DE54)]
	public partial class MessageEmpty : IMessage
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }

	}

	[TLObject (0xC09BE45F)]
	public partial class Message : IMessage
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Unread { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue Out { get; set; }


		[TLProperty (4, 4, true)]
		public ITrue Mentioned { get; set; }


		[TLProperty (5, 5, true)]
		public ITrue MediaUnread { get; set; }


		[TLProperty (6, 13, true)]
		public ITrue Silent { get; set; }


		[TLProperty (7, 14, true)]
		public ITrue Post { get; set; }


		[TLProperty (8)]
		public System.UInt32 Id { get; set; }


		[TLProperty (9, 8, true)]
		public System.UInt32 FromId { get; set; }


		[TLProperty (10)]
		public IPeer ToId { get; set; }


		[TLProperty (11, 2, true)]
		public IMessageFwdHeader FwdFrom { get; set; }


		[TLProperty (12, 11, true)]
		public System.UInt32 ViaBotId { get; set; }


		[TLProperty (13, 3, true)]
		public System.UInt32 ReplyToMsgId { get; set; }


		[TLProperty (14)]
		public System.UInt32 Date { get; set; }


		[TLProperty (15)]
		public System.String MessageProperty { get; set; }


		[TLProperty (16, 9, true)]
		public IMessageMedia Media { get; set; }


		[TLProperty (17, 6, true)]
		public IReplyMarkup ReplyMarkup { get; set; }


		[TLProperty (18, 7, true)]
		public System.Collections.Generic.List<IMessageEntity> Entities { get; set; }


		[TLProperty (19, 10, true)]
		public System.UInt32 Views { get; set; }


		[TLProperty (20, 15, true)]
		public System.UInt32 EditDate { get; set; }

	}

	[TLObject (0x9E19A1F6)]
	public partial class MessageService : IMessage
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Unread { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue Out { get; set; }


		[TLProperty (4, 4, true)]
		public ITrue Mentioned { get; set; }


		[TLProperty (5, 5, true)]
		public ITrue MediaUnread { get; set; }


		[TLProperty (6, 13, true)]
		public ITrue Silent { get; set; }


		[TLProperty (7, 14, true)]
		public ITrue Post { get; set; }


		[TLProperty (8)]
		public System.UInt32 Id { get; set; }


		[TLProperty (9, 8, true)]
		public System.UInt32 FromId { get; set; }


		[TLProperty (10)]
		public IPeer ToId { get; set; }


		[TLProperty (11, 3, true)]
		public System.UInt32 ReplyToMsgId { get; set; }


		[TLProperty (12)]
		public System.UInt32 Date { get; set; }


		[TLProperty (13)]
		public IMessageAction Action { get; set; }

	}

	[TLObject (0x3DED6320)]
	public partial class MessageMediaEmpty : IMessageMedia
	{
	}

	[TLObject (0x3D8CE53D)]
	public partial class MessageMediaPhoto : IMessageMedia
	{

		[TLProperty (1)]
		public IPhoto Photo { get; set; }


		[TLProperty (2)]
		public System.String Caption { get; set; }

	}

	[TLObject (0x56E0D474)]
	public partial class MessageMediaGeo : IMessageMedia
	{

		[TLProperty (1)]
		public IGeoPoint Geo { get; set; }

	}

	[TLObject (0x5E7D2F39)]
	public partial class MessageMediaContact : IMessageMedia
	{

		[TLProperty (1)]
		public System.String PhoneNumber { get; set; }


		[TLProperty (2)]
		public System.String FirstName { get; set; }


		[TLProperty (3)]
		public System.String LastName { get; set; }


		[TLProperty (4)]
		public System.UInt32 UserId { get; set; }

	}

	[TLObject (0x9F84F49E)]
	public partial class MessageMediaUnsupported : IMessageMedia
	{
	}

	[TLObject (0xB6AEF7B0)]
	public partial class MessageActionEmpty : IMessageAction
	{
	}

	[TLObject (0xA6638B9A)]
	public partial class MessageActionChatCreate : IMessageAction
	{

		[TLProperty (1)]
		public System.String Title { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<System.UInt32> Users { get; set; }

	}

	[TLObject (0xB5A1CE5A)]
	public partial class MessageActionChatEditTitle : IMessageAction
	{

		[TLProperty (1)]
		public System.String Title { get; set; }

	}

	[TLObject (0x7FCB13A8)]
	public partial class MessageActionChatEditPhoto : IMessageAction
	{

		[TLProperty (1)]
		public IPhoto Photo { get; set; }

	}

	[TLObject (0x95E3FBEF)]
	public partial class MessageActionChatDeletePhoto : IMessageAction
	{
	}

	[TLObject (0x488A7337)]
	public partial class MessageActionChatAddUser : IMessageAction
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.UInt32> Users { get; set; }

	}

	[TLObject (0xB2AE9B0C)]
	public partial class MessageActionChatDeleteUser : IMessageAction
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }

	}

	[TLObject (0xC1DD804A)]
	public partial class Dialog : IDialog
	{

		[TLProperty (1)]
		public IPeer Peer { get; set; }


		[TLProperty (2)]
		public System.UInt32 TopMessage { get; set; }


		[TLProperty (3)]
		public System.UInt32 ReadInboxMaxId { get; set; }


		[TLProperty (4)]
		public System.UInt32 UnreadCount { get; set; }


		[TLProperty (5)]
		public IPeerNotifySettings NotifySettings { get; set; }

	}

	[TLObject (0x2331B22D)]
	public partial class PhotoEmpty : IPhoto
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }

	}

	[TLObject (0xCDED42FE)]
	public partial class Photo : IPhoto
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }


		[TLProperty (4)]
		public System.Collections.Generic.List<IPhotoSize> Sizes { get; set; }

	}

	[TLObject (0x0E17E23C)]
	public partial class PhotoSizeEmpty : IPhotoSize
	{

		[TLProperty (1)]
		public System.String Type { get; set; }

	}

	[TLObject (0x77BFB61B)]
	public partial class PhotoSize : IPhotoSize
	{

		[TLProperty (1)]
		public System.String Type { get; set; }


		[TLProperty (2)]
		public IFileLocation Location { get; set; }


		[TLProperty (3)]
		public System.UInt32 W { get; set; }


		[TLProperty (4)]
		public System.UInt32 H { get; set; }


		[TLProperty (5)]
		public System.UInt32 Size { get; set; }

	}

	[TLObject (0xE9A734FA)]
	public partial class PhotoCachedSize : IPhotoSize
	{

		[TLProperty (1)]
		public System.String Type { get; set; }


		[TLProperty (2)]
		public IFileLocation Location { get; set; }


		[TLProperty (3)]
		public System.UInt32 W { get; set; }


		[TLProperty (4)]
		public System.UInt32 H { get; set; }


		[TLProperty (5)]
		public System.Byte[] Bytes { get; set; }

	}

	[TLObject (0x1117DD5F)]
	public partial class GeoPointEmpty : IGeoPoint
	{
	}

	[TLObject (0x2049D70C)]
	public partial class GeoPoint : IGeoPoint
	{

		[TLProperty (1)]
		public System.Double Long { get; set; }


		[TLProperty (2)]
		public System.Double Lat { get; set; }

	}

	[TLObject (0x811EA28E)]
	public partial class AuthCheckedPhone : IAuthCheckedPhone
	{

		[TLProperty (1)]
		public System.Boolean PhoneRegistered { get; set; }

	}

	[TLObject (0x5E002502)]
	public partial class AuthSentCode : IAuthSentCode
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue PhoneRegistered { get; set; }


		[TLProperty (3)]
		public IAuthSentCodeType Type { get; set; }


		[TLProperty (4)]
		public System.String PhoneCodeHash { get; set; }


		[TLProperty (5, 1, true)]
		public IAuthCodeType NextType { get; set; }


		[TLProperty (6, 2, true)]
		public System.UInt32 Timeout { get; set; }

	}

	[TLObject (0xFF036AF1)]
	public partial class AuthAuthorization : IAuthAuthorization
	{

		[TLProperty (1)]
		public IUser User { get; set; }

	}

	[TLObject (0xDF969C2D)]
	public partial class AuthExportedAuthorization : IAuthExportedAuthorization
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }


		[TLProperty (2)]
		public System.Byte[] Bytes { get; set; }

	}

	[TLObject (0xB8BC5B0C)]
	public partial class InputNotifyPeer : IInputNotifyPeer
	{

		[TLProperty (1)]
		public IInputPeer Peer { get; set; }

	}

	[TLObject (0x193B4417)]
	public partial class InputNotifyUsers : IInputNotifyPeer
	{
	}

	[TLObject (0x4A95E84E)]
	public partial class InputNotifyChats : IInputNotifyPeer
	{
	}

	[TLObject (0xA429B886)]
	public partial class InputNotifyAll : IInputNotifyPeer
	{
	}

	[TLObject (0xF03064D8)]
	public partial class InputPeerNotifyEventsEmpty : IInputPeerNotifyEvents
	{
	}

	[TLObject (0xE86A2C74)]
	public partial class InputPeerNotifyEventsAll : IInputPeerNotifyEvents
	{
	}

	[TLObject (0x38935EB2)]
	public partial class InputPeerNotifySettings : IInputPeerNotifySettings
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue ShowPreviews { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue Silent { get; set; }


		[TLProperty (4)]
		public System.UInt32 MuteUntil { get; set; }


		[TLProperty (5)]
		public System.String Sound { get; set; }

	}

	[TLObject (0xADD53CB3)]
	public partial class PeerNotifyEventsEmpty : IPeerNotifyEvents
	{
	}

	[TLObject (0x6D1DED88)]
	public partial class PeerNotifyEventsAll : IPeerNotifyEvents
	{
	}

	[TLObject (0x70A68512)]
	public partial class PeerNotifySettingsEmpty : IPeerNotifySettings
	{
	}

	[TLObject (0x9ACDA4C0)]
	public partial class PeerNotifySettings : IPeerNotifySettings
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue ShowPreviews { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue Silent { get; set; }


		[TLProperty (4)]
		public System.UInt32 MuteUntil { get; set; }


		[TLProperty (5)]
		public System.String Sound { get; set; }

	}

	[TLObject (0x818426CD)]
	public partial class PeerSettings : IPeerSettings
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue ReportSpam { get; set; }

	}

	[TLObject (0xCCB03657)]
	public partial class WallPaper : IWallPaper
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }


		[TLProperty (2)]
		public System.String Title { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IPhotoSize> Sizes { get; set; }


		[TLProperty (4)]
		public System.UInt32 Color { get; set; }

	}

	[TLObject (0x58DBCAB8)]
	public partial class InputReportReasonSpam : IReportReason
	{
	}

	[TLObject (0x1E22C78D)]
	public partial class InputReportReasonViolence : IReportReason
	{
	}

	[TLObject (0x2E59D922)]
	public partial class InputReportReasonPornography : IReportReason
	{
	}

	[TLObject (0xE1746D0A)]
	public partial class InputReportReasonOther : IReportReason
	{

		[TLProperty (1)]
		public System.String Text { get; set; }

	}

	[TLObject (0x5932FC03)]
	public partial class UserFull : IUserFull
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Blocked { get; set; }


		[TLProperty (3)]
		public IUser User { get; set; }


		[TLProperty (4, 1, true)]
		public System.String About { get; set; }


		[TLProperty (5)]
		public IContactsLink Link { get; set; }


		[TLProperty (6, 2, true)]
		public IPhoto ProfilePhoto { get; set; }


		[TLProperty (7)]
		public IPeerNotifySettings NotifySettings { get; set; }


		[TLProperty (8, 3, true)]
		public IBotInfo BotInfo { get; set; }

	}

	[TLObject (0xF911C994)]
	public partial class Contact : IContact
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.Boolean Mutual { get; set; }

	}

	[TLObject (0xD0028438)]
	public partial class ImportedContact : IImportedContact
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.UInt64 ClientId { get; set; }

	}

	[TLObject (0x561BC879)]
	public partial class ContactBlocked : IContactBlocked
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0xD3680C61)]
	public partial class ContactStatus : IContactStatus
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public IUserStatus Status { get; set; }

	}

	[TLObject (0x3ACE484C)]
	public partial class ContactsLink : IContactsLink
	{

		[TLProperty (1)]
		public IContactLink MyLink { get; set; }


		[TLProperty (2)]
		public IContactLink ForeignLink { get; set; }


		[TLProperty (3)]
		public IUser User { get; set; }

	}

	[TLObject (0xB74BA9D2)]
	public partial class ContactsContactsNotModified : IContactsContacts
	{
	}

	[TLObject (0x6F8B8CB2)]
	public partial class ContactsContacts : IContactsContacts
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IContact> Contacts { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0xAD524315)]
	public partial class ContactsImportedContacts : IContactsImportedContacts
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IImportedContact> Imported { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<System.UInt64> RetryContacts { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x1C138D15)]
	public partial class ContactsBlocked : IContactsBlocked
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IContactBlocked> Blocked { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x900802A1)]
	public partial class ContactsBlockedSlice : IContactsBlocked
	{

		[TLProperty (1)]
		public System.UInt32 Count { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IContactBlocked> Blocked { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x15BA6C40)]
	public partial class MessagesDialogs : IMessagesDialogs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IDialog> Dialogs { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IMessage> Messages { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (4)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x71E094F3)]
	public partial class MessagesDialogsSlice : IMessagesDialogs
	{

		[TLProperty (1)]
		public System.UInt32 Count { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IDialog> Dialogs { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IMessage> Messages { get; set; }


		[TLProperty (4)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (5)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x8C718E87)]
	public partial class MessagesMessages : IMessagesMessages
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IMessage> Messages { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x0B446AE3)]
	public partial class MessagesMessagesSlice : IMessagesMessages
	{

		[TLProperty (1)]
		public System.UInt32 Count { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IMessage> Messages { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (4)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x64FF9FD5)]
	public partial class MessagesChats : IMessagesChats
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }

	}

	[TLObject (0xE5D7D19C)]
	public partial class MessagesChatFull : IMessagesChatFull
	{

		[TLProperty (1)]
		public IChatFull FullChat { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0xB45C69D1)]
	public partial class MessagesAffectedHistory : IMessagesAffectedHistory
	{

		[TLProperty (1)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (2)]
		public System.UInt32 PtsCount { get; set; }


		[TLProperty (3)]
		public System.UInt32 Offset { get; set; }

	}

	[TLObject (0x57E2F66C)]
	public partial class InputMessagesFilterEmpty : IMessagesFilter
	{
	}

	[TLObject (0x9609A51C)]
	public partial class InputMessagesFilterPhotos : IMessagesFilter
	{
	}

	[TLObject (0x9FC00E65)]
	public partial class InputMessagesFilterVideo : IMessagesFilter
	{
	}

	[TLObject (0x56E9F0E4)]
	public partial class InputMessagesFilterPhotoVideo : IMessagesFilter
	{
	}

	[TLObject (0xD95E73BB)]
	public partial class InputMessagesFilterPhotoVideoDocuments : IMessagesFilter
	{
	}

	[TLObject (0x9EDDF188)]
	public partial class InputMessagesFilterDocument : IMessagesFilter
	{
	}

	[TLObject (0x7EF0DD87)]
	public partial class InputMessagesFilterUrl : IMessagesFilter
	{
	}

	[TLObject (0xFFC86587)]
	public partial class InputMessagesFilterGif : IMessagesFilter
	{
	}

	[TLObject (0x1F2B0AFD)]
	public partial class UpdateNewMessage : IUpdate
	{

		[TLProperty (1)]
		public IMessage Message { get; set; }


		[TLProperty (2)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (3)]
		public System.UInt32 PtsCount { get; set; }

	}

	[TLObject (0x4E90BFD6)]
	public partial class UpdateMessageID : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 RandomId { get; set; }

	}

	[TLObject (0xA20DB0E5)]
	public partial class UpdateDeleteMessages : IUpdate
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.UInt32> Messages { get; set; }


		[TLProperty (2)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (3)]
		public System.UInt32 PtsCount { get; set; }

	}

	[TLObject (0x5C486927)]
	public partial class UpdateUserTyping : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public ISendMessageAction Action { get; set; }

	}

	[TLObject (0x9A65EA1F)]
	public partial class UpdateChatUserTyping : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (3)]
		public ISendMessageAction Action { get; set; }

	}

	[TLObject (0x07761198)]
	public partial class UpdateChatParticipants : IUpdate
	{

		[TLProperty (1)]
		public IChatParticipants Participants { get; set; }

	}

	[TLObject (0x1BFBD823)]
	public partial class UpdateUserStatus : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public IUserStatus Status { get; set; }

	}

	[TLObject (0xA7332B73)]
	public partial class UpdateUserName : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.String FirstName { get; set; }


		[TLProperty (3)]
		public System.String LastName { get; set; }


		[TLProperty (4)]
		public System.String Username { get; set; }

	}

	[TLObject (0x95313B0C)]
	public partial class UpdateUserPhoto : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.UInt32 Date { get; set; }


		[TLProperty (3)]
		public IUserProfilePhoto Photo { get; set; }


		[TLProperty (4)]
		public System.Boolean Previous { get; set; }

	}

	[TLObject (0x2575BBB9)]
	public partial class UpdateContactRegistered : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0x9D2E67C5)]
	public partial class UpdateContactLink : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public IContactLink MyLink { get; set; }


		[TLProperty (3)]
		public IContactLink ForeignLink { get; set; }

	}

	[TLObject (0x8F06529A)]
	public partial class UpdateNewAuthorization : IUpdate
	{

		[TLProperty (1)]
		public System.UInt64 AuthKeyId { get; set; }


		[TLProperty (2)]
		public System.UInt32 Date { get; set; }


		[TLProperty (3)]
		public System.String Device { get; set; }


		[TLProperty (4)]
		public System.String Location { get; set; }

	}

	[TLObject (0xA56C2A3E)]
	public partial class UpdatesState : IUpdatesState
	{

		[TLProperty (1)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (2)]
		public System.UInt32 Qts { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }


		[TLProperty (4)]
		public System.UInt32 Seq { get; set; }


		[TLProperty (5)]
		public System.UInt32 UnreadCount { get; set; }

	}

	[TLObject (0x5D75A138)]
	public partial class UpdatesDifferenceEmpty : IUpdatesDifference
	{

		[TLProperty (1)]
		public System.UInt32 Date { get; set; }


		[TLProperty (2)]
		public System.UInt32 Seq { get; set; }

	}

	[TLObject (0x00F49CA0)]
	public partial class UpdatesDifference : IUpdatesDifference
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IMessage> NewMessages { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IEncryptedMessage> NewEncryptedMessages { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IUpdate> OtherUpdates { get; set; }


		[TLProperty (4)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (5)]
		public System.Collections.Generic.List<IUser> Users { get; set; }


		[TLProperty (6)]
		public IUpdatesState State { get; set; }

	}

	[TLObject (0xA8FB1981)]
	public partial class UpdatesDifferenceSlice : IUpdatesDifference
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IMessage> NewMessages { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IEncryptedMessage> NewEncryptedMessages { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IUpdate> OtherUpdates { get; set; }


		[TLProperty (4)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (5)]
		public System.Collections.Generic.List<IUser> Users { get; set; }


		[TLProperty (6)]
		public IUpdatesState IntermediateState { get; set; }

	}

	[TLObject (0xE317AF7E)]
	public partial class UpdatesTooLong : IUpdates
	{
	}

	[TLObject (0x914FBF11)]
	public partial class UpdateShortMessage : IUpdates
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Unread { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue Out { get; set; }


		[TLProperty (4, 4, true)]
		public ITrue Mentioned { get; set; }


		[TLProperty (5, 5, true)]
		public ITrue MediaUnread { get; set; }


		[TLProperty (6, 13, true)]
		public ITrue Silent { get; set; }


		[TLProperty (7)]
		public System.UInt32 Id { get; set; }


		[TLProperty (8)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (9)]
		public System.String Message { get; set; }


		[TLProperty (10)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (11)]
		public System.UInt32 PtsCount { get; set; }


		[TLProperty (12)]
		public System.UInt32 Date { get; set; }


		[TLProperty (13, 2, true)]
		public IMessageFwdHeader FwdFrom { get; set; }


		[TLProperty (14, 11, true)]
		public System.UInt32 ViaBotId { get; set; }


		[TLProperty (15, 3, true)]
		public System.UInt32 ReplyToMsgId { get; set; }


		[TLProperty (16, 7, true)]
		public System.Collections.Generic.List<IMessageEntity> Entities { get; set; }

	}

	[TLObject (0x16812688)]
	public partial class UpdateShortChatMessage : IUpdates
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Unread { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue Out { get; set; }


		[TLProperty (4, 4, true)]
		public ITrue Mentioned { get; set; }


		[TLProperty (5, 5, true)]
		public ITrue MediaUnread { get; set; }


		[TLProperty (6, 13, true)]
		public ITrue Silent { get; set; }


		[TLProperty (7)]
		public System.UInt32 Id { get; set; }


		[TLProperty (8)]
		public System.UInt32 FromId { get; set; }


		[TLProperty (9)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (10)]
		public System.String Message { get; set; }


		[TLProperty (11)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (12)]
		public System.UInt32 PtsCount { get; set; }


		[TLProperty (13)]
		public System.UInt32 Date { get; set; }


		[TLProperty (14, 2, true)]
		public IMessageFwdHeader FwdFrom { get; set; }


		[TLProperty (15, 11, true)]
		public System.UInt32 ViaBotId { get; set; }


		[TLProperty (16, 3, true)]
		public System.UInt32 ReplyToMsgId { get; set; }


		[TLProperty (17, 7, true)]
		public System.Collections.Generic.List<IMessageEntity> Entities { get; set; }

	}

	[TLObject (0x78D4DEC1)]
	public partial class UpdateShort : IUpdates
	{

		[TLProperty (1)]
		public IUpdate Update { get; set; }


		[TLProperty (2)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0x725B04C3)]
	public partial class UpdatesCombined : IUpdates
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IUpdate> Updates { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IUser> Users { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (4)]
		public System.UInt32 Date { get; set; }


		[TLProperty (5)]
		public System.UInt32 SeqStart { get; set; }


		[TLProperty (6)]
		public System.UInt32 Seq { get; set; }

	}

	[TLObject (0x74AE4240)]
	public partial class Updates : IUpdates
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IUpdate> UpdatesProperty { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IUser> Users { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (4)]
		public System.UInt32 Date { get; set; }


		[TLProperty (5)]
		public System.UInt32 Seq { get; set; }

	}

	[TLObject (0x8DCA6AA5)]
	public partial class PhotosPhotos : IPhotosPhotos
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IPhoto> Photos { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x15051F54)]
	public partial class PhotosPhotosSlice : IPhotosPhotos
	{

		[TLProperty (1)]
		public System.UInt32 Count { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IPhoto> Photos { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x20212CA8)]
	public partial class PhotosPhoto : IPhotosPhoto
	{

		[TLProperty (1)]
		public IPhoto Photo { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x096A18D5)]
	public partial class UploadFile : IUploadFile
	{

		[TLProperty (1)]
		public IStorageFileType Type { get; set; }


		[TLProperty (2)]
		public System.UInt32 Mtime { get; set; }


		[TLProperty (3)]
		public System.Byte[] Bytes { get; set; }

	}

	[TLObject (0x05D8C6CC)]
	public partial class DcOption : IDcOption
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Ipv6 { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue MediaOnly { get; set; }


		[TLProperty (4, 2, true)]
		public ITrue TcpoOnly { get; set; }


		[TLProperty (5)]
		public System.UInt32 Id { get; set; }


		[TLProperty (6)]
		public System.String IpAddress { get; set; }


		[TLProperty (7)]
		public System.UInt32 Port { get; set; }

	}

	[TLObject (0x317CEEF4)]
	public partial class Config : IConfig
	{

		[TLProperty (1)]
		public System.UInt32 Date { get; set; }


		[TLProperty (2)]
		public System.UInt32 Expires { get; set; }


		[TLProperty (3)]
		public System.Boolean TestMode { get; set; }


		[TLProperty (4)]
		public System.UInt32 ThisDc { get; set; }


		[TLProperty (5)]
		public System.Collections.Generic.List<IDcOption> DcOptions { get; set; }


		[TLProperty (6)]
		public System.UInt32 ChatSizeMax { get; set; }


		[TLProperty (7)]
		public System.UInt32 MegagroupSizeMax { get; set; }


		[TLProperty (8)]
		public System.UInt32 ForwardedCountMax { get; set; }


		[TLProperty (9)]
		public System.UInt32 OnlineUpdatePeriodMs { get; set; }


		[TLProperty (10)]
		public System.UInt32 OfflineBlurTimeoutMs { get; set; }


		[TLProperty (11)]
		public System.UInt32 OfflineIdleTimeoutMs { get; set; }


		[TLProperty (12)]
		public System.UInt32 OnlineCloudTimeoutMs { get; set; }


		[TLProperty (13)]
		public System.UInt32 NotifyCloudDelayMs { get; set; }


		[TLProperty (14)]
		public System.UInt32 NotifyDefaultDelayMs { get; set; }


		[TLProperty (15)]
		public System.UInt32 ChatBigSize { get; set; }


		[TLProperty (16)]
		public System.UInt32 PushChatPeriodMs { get; set; }


		[TLProperty (17)]
		public System.UInt32 PushChatLimit { get; set; }


		[TLProperty (18)]
		public System.UInt32 SavedGifsLimit { get; set; }


		[TLProperty (19)]
		public System.UInt32 EditTimeLimit { get; set; }


		[TLProperty (20)]
		public System.Collections.Generic.List<IDisabledFeature> DisabledFeatures { get; set; }

	}

	[TLObject (0x8E1A1775)]
	public partial class NearestDc : INearestDc
	{

		[TLProperty (1)]
		public System.String Country { get; set; }


		[TLProperty (2)]
		public System.UInt32 ThisDc { get; set; }


		[TLProperty (3)]
		public System.UInt32 NearestDcProperty { get; set; }

	}

	[TLObject (0x8987F311)]
	public partial class HelpAppUpdate : IHelpAppUpdate
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }


		[TLProperty (2)]
		public System.Boolean Critical { get; set; }


		[TLProperty (3)]
		public System.String Url { get; set; }


		[TLProperty (4)]
		public System.String Text { get; set; }

	}

	[TLObject (0xC45A6536)]
	public partial class HelpNoAppUpdate : IHelpAppUpdate
	{
	}

	[TLObject (0x18CB9F78)]
	public partial class HelpInviteText : IHelpInviteText
	{

		[TLProperty (1)]
		public System.String Message { get; set; }

	}

	[TLObject (0x63117F24)]
	public partial class WallPaperSolid : IWallPaper
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }


		[TLProperty (2)]
		public System.String Title { get; set; }


		[TLProperty (3)]
		public System.UInt32 BgColor { get; set; }


		[TLProperty (4)]
		public System.UInt32 Color { get; set; }

	}

	[TLObject (0x12BCBD9A)]
	public partial class UpdateNewEncryptedMessage : IUpdate
	{

		[TLProperty (1)]
		public IEncryptedMessage Message { get; set; }


		[TLProperty (2)]
		public System.UInt32 Qts { get; set; }

	}

	[TLObject (0x1710F156)]
	public partial class UpdateEncryptedChatTyping : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }

	}

	[TLObject (0xB4A2E88D)]
	public partial class UpdateEncryption : IUpdate
	{

		[TLProperty (1)]
		public IEncryptedChat Chat { get; set; }


		[TLProperty (2)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0x38FE25B7)]
	public partial class UpdateEncryptedMessagesRead : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public System.UInt32 MaxDate { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0xAB7EC0A0)]
	public partial class EncryptedChatEmpty : IEncryptedChat
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }

	}

	[TLObject (0x3BF703DC)]
	public partial class EncryptedChatWaiting : IEncryptedChat
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }


		[TLProperty (4)]
		public System.UInt32 AdminId { get; set; }


		[TLProperty (5)]
		public System.UInt32 ParticipantId { get; set; }

	}

	[TLObject (0xC878527E)]
	public partial class EncryptedChatRequested : IEncryptedChat
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }


		[TLProperty (4)]
		public System.UInt32 AdminId { get; set; }


		[TLProperty (5)]
		public System.UInt32 ParticipantId { get; set; }


		[TLProperty (6)]
		public System.Byte[] GA { get; set; }

	}

	[TLObject (0xFA56CE36)]
	public partial class EncryptedChat : IEncryptedChat
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }


		[TLProperty (4)]
		public System.UInt32 AdminId { get; set; }


		[TLProperty (5)]
		public System.UInt32 ParticipantId { get; set; }


		[TLProperty (6)]
		public System.Byte[] GAOrB { get; set; }


		[TLProperty (7)]
		public System.UInt64 KeyFingerprint { get; set; }

	}

	[TLObject (0x13D6DD27)]
	public partial class EncryptedChatDiscarded : IEncryptedChat
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }

	}

	[TLObject (0xF141B5E1)]
	public partial class InputEncryptedChat : IInputEncryptedChat
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }

	}

	[TLObject (0xC21F497E)]
	public partial class EncryptedFileEmpty : IEncryptedFile
	{
	}

	[TLObject (0x4A70994C)]
	public partial class EncryptedFile : IEncryptedFile
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }


		[TLProperty (3)]
		public System.UInt32 Size { get; set; }


		[TLProperty (4)]
		public System.UInt32 DcId { get; set; }


		[TLProperty (5)]
		public System.UInt32 KeyFingerprint { get; set; }

	}

	[TLObject (0x1837C364)]
	public partial class InputEncryptedFileEmpty : IInputEncryptedFile
	{
	}

	[TLObject (0x64BD0306)]
	public partial class InputEncryptedFileUploaded : IInputEncryptedFile
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt32 Parts { get; set; }


		[TLProperty (3)]
		public System.String Md5Checksum { get; set; }


		[TLProperty (4)]
		public System.UInt32 KeyFingerprint { get; set; }

	}

	[TLObject (0x5A17B5E5)]
	public partial class InputEncryptedFile : IInputEncryptedFile
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }

	}

	[TLObject (0xF5235D55)]
	public partial class InputEncryptedFileLocation : IInputFileLocation
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }

	}

	[TLObject (0xED18C118)]
	public partial class EncryptedMessage : IEncryptedMessage
	{

		[TLProperty (1)]
		public System.UInt64 RandomId { get; set; }


		[TLProperty (2)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }


		[TLProperty (4)]
		public System.Byte[] Bytes { get; set; }


		[TLProperty (5)]
		public IEncryptedFile File { get; set; }

	}

	[TLObject (0x23734B06)]
	public partial class EncryptedMessageService : IEncryptedMessage
	{

		[TLProperty (1)]
		public System.UInt64 RandomId { get; set; }


		[TLProperty (2)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }


		[TLProperty (4)]
		public System.Byte[] Bytes { get; set; }

	}

	[TLObject (0xC0E24635)]
	public partial class MessagesDhConfigNotModified : IMessagesDhConfig
	{

		[TLProperty (1)]
		public System.Byte[] Random { get; set; }

	}

	[TLObject (0x2C221EDD)]
	public partial class MessagesDhConfig : IMessagesDhConfig
	{

		[TLProperty (1)]
		public System.UInt32 G { get; set; }


		[TLProperty (2)]
		public System.Byte[] P { get; set; }


		[TLProperty (3)]
		public System.UInt32 Version { get; set; }


		[TLProperty (4)]
		public System.Byte[] Random { get; set; }

	}

	[TLObject (0x560F8935)]
	public partial class MessagesSentEncryptedMessage : IMessagesSentEncryptedMessage
	{

		[TLProperty (1)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0x9493FF32)]
	public partial class MessagesSentEncryptedFile : IMessagesSentEncryptedMessage
	{

		[TLProperty (1)]
		public System.UInt32 Date { get; set; }


		[TLProperty (2)]
		public IEncryptedFile File { get; set; }

	}

	[TLObject (0xFA4F0BB5)]
	public partial class InputFileBig : IInputFile
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt32 Parts { get; set; }


		[TLProperty (3)]
		public System.String Name { get; set; }

	}

	[TLObject (0x2DC173C8)]
	public partial class InputEncryptedFileBigUploaded : IInputEncryptedFile
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt32 Parts { get; set; }


		[TLProperty (3)]
		public System.UInt32 KeyFingerprint { get; set; }

	}

	[TLObject (0xEA4B0E5C)]
	public partial class UpdateChatParticipantAdd : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (3)]
		public System.UInt32 InviterId { get; set; }


		[TLProperty (4)]
		public System.UInt32 Date { get; set; }


		[TLProperty (5)]
		public System.UInt32 Version { get; set; }

	}

	[TLObject (0x6E5F8C22)]
	public partial class UpdateChatParticipantDelete : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (3)]
		public System.UInt32 Version { get; set; }

	}

	[TLObject (0x8E5E9873)]
	public partial class UpdateDcOptions : IUpdate
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IDcOption> DcOptions { get; set; }

	}

	[TLObject (0x1D89306D)]
	public partial class InputMediaUploadedDocument : IInputMedia
	{

		[TLProperty (1)]
		public IInputFile File { get; set; }


		[TLProperty (2)]
		public System.String MimeType { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IDocumentAttribute> Attributes { get; set; }


		[TLProperty (4)]
		public System.String Caption { get; set; }

	}

	[TLObject (0xAD613491)]
	public partial class InputMediaUploadedThumbDocument : IInputMedia
	{

		[TLProperty (1)]
		public IInputFile File { get; set; }


		[TLProperty (2)]
		public IInputFile Thumb { get; set; }


		[TLProperty (3)]
		public System.String MimeType { get; set; }


		[TLProperty (4)]
		public System.Collections.Generic.List<IDocumentAttribute> Attributes { get; set; }


		[TLProperty (5)]
		public System.String Caption { get; set; }

	}

	[TLObject (0x1A77F29C)]
	public partial class InputMediaDocument : IInputMedia
	{

		[TLProperty (1)]
		public IInputDocument Id { get; set; }


		[TLProperty (2)]
		public System.String Caption { get; set; }

	}

	[TLObject (0xF3E02EA8)]
	public partial class MessageMediaDocument : IMessageMedia
	{

		[TLProperty (1)]
		public IDocument Document { get; set; }


		[TLProperty (2)]
		public System.String Caption { get; set; }

	}

	[TLObject (0x72F0EAAE)]
	public partial class InputDocumentEmpty : IInputDocument
	{
	}

	[TLObject (0x18798952)]
	public partial class InputDocument : IInputDocument
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }

	}

	[TLObject (0x4E45ABE9)]
	public partial class InputDocumentFileLocation : IInputFileLocation
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }

	}

	[TLObject (0x36F8C871)]
	public partial class DocumentEmpty : IDocument
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }

	}

	[TLObject (0xF9A39F4F)]
	public partial class Document : IDocument
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }


		[TLProperty (4)]
		public System.String MimeType { get; set; }


		[TLProperty (5)]
		public System.UInt32 Size { get; set; }


		[TLProperty (6)]
		public IPhotoSize Thumb { get; set; }


		[TLProperty (7)]
		public System.UInt32 DcId { get; set; }


		[TLProperty (8)]
		public System.Collections.Generic.List<IDocumentAttribute> Attributes { get; set; }

	}

	[TLObject (0x17C6B5F6)]
	public partial class HelpSupport : IHelpSupport
	{

		[TLProperty (1)]
		public System.String PhoneNumber { get; set; }


		[TLProperty (2)]
		public IUser User { get; set; }

	}

	[TLObject (0x9FD40BD8)]
	public partial class NotifyPeer : INotifyPeer
	{

		[TLProperty (1)]
		public IPeer Peer { get; set; }

	}

	[TLObject (0xB4C83B4C)]
	public partial class NotifyUsers : INotifyPeer
	{
	}

	[TLObject (0xC007CEC3)]
	public partial class NotifyChats : INotifyPeer
	{
	}

	[TLObject (0x74D07C60)]
	public partial class NotifyAll : INotifyPeer
	{
	}

	[TLObject (0x80ECE81A)]
	public partial class UpdateUserBlocked : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.Boolean Blocked { get; set; }

	}

	[TLObject (0xBEC268EF)]
	public partial class UpdateNotifySettings : IUpdate
	{

		[TLProperty (1)]
		public INotifyPeer Peer { get; set; }


		[TLProperty (2)]
		public IPeerNotifySettings NotifySettings { get; set; }

	}

	[TLObject (0x16BF744E)]
	public partial class SendMessageTypingAction : ISendMessageAction
	{
	}

	[TLObject (0xFD5EC8F5)]
	public partial class SendMessageCancelAction : ISendMessageAction
	{
	}

	[TLObject (0xA187D66F)]
	public partial class SendMessageRecordVideoAction : ISendMessageAction
	{
	}

	[TLObject (0xE9763AEC)]
	public partial class SendMessageUploadVideoAction : ISendMessageAction
	{

		[TLProperty (1)]
		public System.UInt32 Progress { get; set; }

	}

	[TLObject (0xD52F73F7)]
	public partial class SendMessageRecordAudioAction : ISendMessageAction
	{
	}

	[TLObject (0xF351D7AB)]
	public partial class SendMessageUploadAudioAction : ISendMessageAction
	{

		[TLProperty (1)]
		public System.UInt32 Progress { get; set; }

	}

	[TLObject (0xD1D34A26)]
	public partial class SendMessageUploadPhotoAction : ISendMessageAction
	{

		[TLProperty (1)]
		public System.UInt32 Progress { get; set; }

	}

	[TLObject (0xAA0CD9E4)]
	public partial class SendMessageUploadDocumentAction : ISendMessageAction
	{

		[TLProperty (1)]
		public System.UInt32 Progress { get; set; }

	}

	[TLObject (0x176F8BA1)]
	public partial class SendMessageGeoLocationAction : ISendMessageAction
	{
	}

	[TLObject (0x628CBC6F)]
	public partial class SendMessageChooseContactAction : ISendMessageAction
	{
	}

	[TLObject (0x1AA1F784)]
	public partial class ContactsFound : IContactsFound
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IPeer> Results { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x382DD3E4)]
	public partial class UpdateServiceNotification : IUpdate
	{

		[TLProperty (1)]
		public System.String Type { get; set; }


		[TLProperty (2)]
		public System.String Message { get; set; }


		[TLProperty (3)]
		public IMessageMedia Media { get; set; }


		[TLProperty (4)]
		public System.Boolean Popup { get; set; }

	}

	[TLObject (0xE26F42F1)]
	public partial class UserStatusRecently : IUserStatus
	{
	}

	[TLObject (0x07BF09FC)]
	public partial class UserStatusLastWeek : IUserStatus
	{
	}

	[TLObject (0x77EBC742)]
	public partial class UserStatusLastMonth : IUserStatus
	{
	}

	[TLObject (0xEE3B272A)]
	public partial class UpdatePrivacy : IUpdate
	{

		[TLProperty (1)]
		public IPrivacyKey Key { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IPrivacyRule> Rules { get; set; }

	}

	[TLObject (0x4F96CB18)]
	public partial class InputPrivacyKeyStatusTimestamp : IInputPrivacyKey
	{
	}

	[TLObject (0xBC2EAB30)]
	public partial class PrivacyKeyStatusTimestamp : IPrivacyKey
	{
	}

	[TLObject (0x0D09E07B)]
	public partial class InputPrivacyValueAllowContacts : IInputPrivacyRule
	{
	}

	[TLObject (0x184B35CE)]
	public partial class InputPrivacyValueAllowAll : IInputPrivacyRule
	{
	}

	[TLObject (0x131CC67F)]
	public partial class InputPrivacyValueAllowUsers : IInputPrivacyRule
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IInputUser> Users { get; set; }

	}

	[TLObject (0x0BA52007)]
	public partial class InputPrivacyValueDisallowContacts : IInputPrivacyRule
	{
	}

	[TLObject (0xD66B66C9)]
	public partial class InputPrivacyValueDisallowAll : IInputPrivacyRule
	{
	}

	[TLObject (0x90110467)]
	public partial class InputPrivacyValueDisallowUsers : IInputPrivacyRule
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IInputUser> Users { get; set; }

	}

	[TLObject (0xFFFE1BAC)]
	public partial class PrivacyValueAllowContacts : IPrivacyRule
	{
	}

	[TLObject (0x65427B82)]
	public partial class PrivacyValueAllowAll : IPrivacyRule
	{
	}

	[TLObject (0x4D5BBE0C)]
	public partial class PrivacyValueAllowUsers : IPrivacyRule
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.UInt32> Users { get; set; }

	}

	[TLObject (0xF888FA1A)]
	public partial class PrivacyValueDisallowContacts : IPrivacyRule
	{
	}

	[TLObject (0x8B73E763)]
	public partial class PrivacyValueDisallowAll : IPrivacyRule
	{
	}

	[TLObject (0x0C7F49B7)]
	public partial class PrivacyValueDisallowUsers : IPrivacyRule
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.UInt32> Users { get; set; }

	}

	[TLObject (0x554ABB6F)]
	public partial class AccountPrivacyRules : IAccountPrivacyRules
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IPrivacyRule> Rules { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0xB8D0AFDF)]
	public partial class AccountDaysTTL : IAccountDaysTTL
	{

		[TLProperty (1)]
		public System.UInt32 Days { get; set; }

	}

	[TLObject (0x12B9417B)]
	public partial class UpdateUserPhone : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.String Phone { get; set; }

	}

	[TLObject (0x6C37C15C)]
	public partial class DocumentAttributeImageSize : IDocumentAttribute
	{

		[TLProperty (1)]
		public System.UInt32 W { get; set; }


		[TLProperty (2)]
		public System.UInt32 H { get; set; }

	}

	[TLObject (0x11B58939)]
	public partial class DocumentAttributeAnimated : IDocumentAttribute
	{
	}

	[TLObject (0x3A556302)]
	public partial class DocumentAttributeSticker : IDocumentAttribute
	{

		[TLProperty (1)]
		public System.String Alt { get; set; }


		[TLProperty (2)]
		public IInputStickerSet Stickerset { get; set; }

	}

	[TLObject (0x5910CCCB)]
	public partial class DocumentAttributeVideo : IDocumentAttribute
	{

		[TLProperty (1)]
		public System.UInt32 Duration { get; set; }


		[TLProperty (2)]
		public System.UInt32 W { get; set; }


		[TLProperty (3)]
		public System.UInt32 H { get; set; }

	}

	[TLObject (0x9852F9C6)]
	public partial class DocumentAttributeAudio : IDocumentAttribute
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 10, true)]
		public ITrue Voice { get; set; }


		[TLProperty (3)]
		public System.UInt32 Duration { get; set; }


		[TLProperty (4, 0, true)]
		public System.String Title { get; set; }


		[TLProperty (5, 1, true)]
		public System.String Performer { get; set; }


		[TLProperty (6, 2, true)]
		public System.Byte[] Waveform { get; set; }

	}

	[TLObject (0x15590068)]
	public partial class DocumentAttributeFilename : IDocumentAttribute
	{

		[TLProperty (1)]
		public System.String FileName { get; set; }

	}

	[TLObject (0xF1749A22)]
	public partial class MessagesStickersNotModified : IMessagesStickers
	{
	}

	[TLObject (0x8A8ECD32)]
	public partial class MessagesStickers : IMessagesStickers
	{

		[TLProperty (1)]
		public System.String Hash { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IDocument> Stickers { get; set; }

	}

	[TLObject (0x12B299D4)]
	public partial class StickerPack : IStickerPack
	{

		[TLProperty (1)]
		public System.String Emoticon { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<System.UInt64> Documents { get; set; }

	}

	[TLObject (0xE86602C3)]
	public partial class MessagesAllStickersNotModified : IMessagesAllStickers
	{
	}

	[TLObject (0xEDFD405F)]
	public partial class MessagesAllStickers : IMessagesAllStickers
	{

		[TLProperty (1)]
		public System.UInt32 Hash { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IStickerSet> Sets { get; set; }

	}

	[TLObject (0xAE636F24)]
	public partial class DisabledFeature : IDisabledFeature
	{

		[TLProperty (1)]
		public System.String Feature { get; set; }


		[TLProperty (2)]
		public System.String Description { get; set; }

	}

	[TLObject (0x9961FD5C)]
	public partial class UpdateReadHistoryInbox : IUpdate
	{

		[TLProperty (1)]
		public IPeer Peer { get; set; }


		[TLProperty (2)]
		public System.UInt32 MaxId { get; set; }


		[TLProperty (3)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (4)]
		public System.UInt32 PtsCount { get; set; }

	}

	[TLObject (0x2F2F21BF)]
	public partial class UpdateReadHistoryOutbox : IUpdate
	{

		[TLProperty (1)]
		public IPeer Peer { get; set; }


		[TLProperty (2)]
		public System.UInt32 MaxId { get; set; }


		[TLProperty (3)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (4)]
		public System.UInt32 PtsCount { get; set; }

	}

	[TLObject (0x84D19185)]
	public partial class MessagesAffectedMessages : IMessagesAffectedMessages
	{

		[TLProperty (1)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (2)]
		public System.UInt32 PtsCount { get; set; }

	}

	[TLObject (0x5F4F9247)]
	public partial class ContactLinkUnknown : IContactLink
	{
	}

	[TLObject (0xFEEDD3AD)]
	public partial class ContactLinkNone : IContactLink
	{
	}

	[TLObject (0x268F3F59)]
	public partial class ContactLinkHasPhone : IContactLink
	{
	}

	[TLObject (0xD502C2D0)]
	public partial class ContactLinkContact : IContactLink
	{
	}

	[TLObject (0x7F891213)]
	public partial class UpdateWebPage : IUpdate
	{

		[TLProperty (1)]
		public IWebPage Webpage { get; set; }


		[TLProperty (2)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (3)]
		public System.UInt32 PtsCount { get; set; }

	}

	[TLObject (0xEB1477E8)]
	public partial class WebPageEmpty : IWebPage
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }

	}

	[TLObject (0xC586DA1C)]
	public partial class WebPagePending : IWebPage
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0xCA820ED7)]
	public partial class WebPage : IWebPage
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.UInt64 Id { get; set; }


		[TLProperty (3)]
		public System.String Url { get; set; }


		[TLProperty (4)]
		public System.String DisplayUrl { get; set; }


		[TLProperty (5, 0, true)]
		public System.String Type { get; set; }


		[TLProperty (6, 1, true)]
		public System.String SiteName { get; set; }


		[TLProperty (7, 2, true)]
		public System.String Title { get; set; }


		[TLProperty (8, 3, true)]
		public System.String Description { get; set; }


		[TLProperty (9, 4, true)]
		public IPhoto Photo { get; set; }


		[TLProperty (10, 5, true)]
		public System.String EmbedUrl { get; set; }


		[TLProperty (11, 5, true)]
		public System.String EmbedType { get; set; }


		[TLProperty (12, 6, true)]
		public System.UInt32 EmbedWidth { get; set; }


		[TLProperty (13, 6, true)]
		public System.UInt32 EmbedHeight { get; set; }


		[TLProperty (14, 7, true)]
		public System.UInt32 Duration { get; set; }


		[TLProperty (15, 8, true)]
		public System.String Author { get; set; }


		[TLProperty (16, 9, true)]
		public IDocument Document { get; set; }

	}

	[TLObject (0xA32DD600)]
	public partial class MessageMediaWebPage : IMessageMedia
	{

		[TLProperty (1)]
		public IWebPage Webpage { get; set; }

	}

	[TLObject (0x7BF2E6F6)]
	public partial class Authorization : IAuthorization
	{

		[TLProperty (1)]
		public System.UInt64 Hash { get; set; }


		[TLProperty (2)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (3)]
		public System.String DeviceModel { get; set; }


		[TLProperty (4)]
		public System.String Platform { get; set; }


		[TLProperty (5)]
		public System.String SystemVersion { get; set; }


		[TLProperty (6)]
		public System.UInt32 ApiId { get; set; }


		[TLProperty (7)]
		public System.String AppName { get; set; }


		[TLProperty (8)]
		public System.String AppVersion { get; set; }


		[TLProperty (9)]
		public System.UInt32 DateCreated { get; set; }


		[TLProperty (10)]
		public System.UInt32 DateActive { get; set; }


		[TLProperty (11)]
		public System.String Ip { get; set; }


		[TLProperty (12)]
		public System.String Country { get; set; }


		[TLProperty (13)]
		public System.String Region { get; set; }

	}

	[TLObject (0x1250ABDE)]
	public partial class AccountAuthorizations : IAccountAuthorizations
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IAuthorization> Authorizations { get; set; }

	}

	[TLObject (0x96DABC18)]
	public partial class AccountNoPassword : IAccountPassword
	{

		[TLProperty (1)]
		public System.Byte[] NewSalt { get; set; }


		[TLProperty (2)]
		public System.String EmailUnconfirmedPattern { get; set; }

	}

	[TLObject (0x7C18141C)]
	public partial class AccountPassword : IAccountPassword
	{

		[TLProperty (1)]
		public System.Byte[] CurrentSalt { get; set; }


		[TLProperty (2)]
		public System.Byte[] NewSalt { get; set; }


		[TLProperty (3)]
		public System.String Hint { get; set; }


		[TLProperty (4)]
		public System.Boolean HasRecovery { get; set; }


		[TLProperty (5)]
		public System.String EmailUnconfirmedPattern { get; set; }

	}

	[TLObject (0xB7B72AB3)]
	public partial class AccountPasswordSettings : IAccountPasswordSettings
	{

		[TLProperty (1)]
		public System.String Email { get; set; }

	}

	[TLObject (0x86916DEB)]
	public partial class AccountPasswordInputSettings : IAccountPasswordInputSettings
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public System.Byte[] NewSalt { get; set; }


		[TLProperty (3, 0, true)]
		public System.Byte[] NewPasswordHash { get; set; }


		[TLProperty (4, 0, true)]
		public System.String Hint { get; set; }


		[TLProperty (5, 1, true)]
		public System.String Email { get; set; }

	}

	[TLObject (0x137948A5)]
	public partial class AuthPasswordRecovery : IAuthPasswordRecovery
	{

		[TLProperty (1)]
		public System.String EmailPattern { get; set; }

	}

	[TLObject (0x2827A81A)]
	public partial class InputMediaVenue : IInputMedia
	{

		[TLProperty (1)]
		public IInputGeoPoint GeoPoint { get; set; }


		[TLProperty (2)]
		public System.String Title { get; set; }


		[TLProperty (3)]
		public System.String Address { get; set; }


		[TLProperty (4)]
		public System.String Provider { get; set; }


		[TLProperty (5)]
		public System.String VenueId { get; set; }

	}

	[TLObject (0x7912B71F)]
	public partial class MessageMediaVenue : IMessageMedia
	{

		[TLProperty (1)]
		public IGeoPoint Geo { get; set; }


		[TLProperty (2)]
		public System.String Title { get; set; }


		[TLProperty (3)]
		public System.String Address { get; set; }


		[TLProperty (4)]
		public System.String Provider { get; set; }


		[TLProperty (5)]
		public System.String VenueId { get; set; }

	}

	[TLObject (0xA384B779)]
	public partial class ReceivedNotifyMessage : IReceivedNotifyMessage
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }


		[TLProperty (2)]
		public System.UInt32 Flags { get; set; }

	}

	[TLObject (0x69DF3769)]
	public partial class ChatInviteEmpty : IExportedChatInvite
	{
	}

	[TLObject (0xFC2E05BC)]
	public partial class ChatInviteExported : IExportedChatInvite
	{

		[TLProperty (1)]
		public System.String Link { get; set; }

	}

	[TLObject (0x5A686D7C)]
	public partial class ChatInviteAlready : IChatInvite
	{

		[TLProperty (1)]
		public IChat Chat { get; set; }

	}

	[TLObject (0x93E99B60)]
	public partial class ChatInvite : IChatInvite
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Channel { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue Broadcast { get; set; }


		[TLProperty (4, 2, true)]
		public ITrue Public { get; set; }


		[TLProperty (5, 3, true)]
		public ITrue Megagroup { get; set; }


		[TLProperty (6)]
		public System.String Title { get; set; }

	}

	[TLObject (0xF89CF5E8)]
	public partial class MessageActionChatJoinedByLink : IMessageAction
	{

		[TLProperty (1)]
		public System.UInt32 InviterId { get; set; }

	}

	[TLObject (0x68C13933)]
	public partial class UpdateReadMessagesContents : IUpdate
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.UInt32> Messages { get; set; }


		[TLProperty (2)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (3)]
		public System.UInt32 PtsCount { get; set; }

	}

	[TLObject (0xFFB62B95)]
	public partial class InputStickerSetEmpty : IInputStickerSet
	{
	}

	[TLObject (0x9DE7A269)]
	public partial class InputStickerSetID : IInputStickerSet
	{

		[TLProperty (1)]
		public System.UInt64 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }

	}

	[TLObject (0x861CC8A0)]
	public partial class InputStickerSetShortName : IInputStickerSet
	{

		[TLProperty (1)]
		public System.String ShortName { get; set; }

	}

	[TLObject (0xCD303B41)]
	public partial class StickerSet : IStickerSet
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Installed { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue Disabled { get; set; }


		[TLProperty (4, 2, true)]
		public ITrue Official { get; set; }


		[TLProperty (5)]
		public System.UInt64 Id { get; set; }


		[TLProperty (6)]
		public System.UInt64 AccessHash { get; set; }


		[TLProperty (7)]
		public System.String Title { get; set; }


		[TLProperty (8)]
		public System.String ShortName { get; set; }


		[TLProperty (9)]
		public System.UInt32 Count { get; set; }


		[TLProperty (10)]
		public System.UInt32 Hash { get; set; }

	}

	[TLObject (0xB60A24A6)]
	public partial class MessagesStickerSet : IMessagesStickerSet
	{

		[TLProperty (1)]
		public IStickerSet Set { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IStickerPack> Packs { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IDocument> Documents { get; set; }

	}

	[TLObject (0xD10D979A)]
	public partial class User : IUser
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 10, true)]
		public ITrue Self { get; set; }


		[TLProperty (3, 11, true)]
		public ITrue Contact { get; set; }


		[TLProperty (4, 12, true)]
		public ITrue MutualContact { get; set; }


		[TLProperty (5, 13, true)]
		public ITrue Deleted { get; set; }


		[TLProperty (6, 14, true)]
		public ITrue Bot { get; set; }


		[TLProperty (7, 15, true)]
		public ITrue BotChatHistory { get; set; }


		[TLProperty (8, 16, true)]
		public ITrue BotNochats { get; set; }


		[TLProperty (9, 17, true)]
		public ITrue Verified { get; set; }


		[TLProperty (10, 18, true)]
		public ITrue Restricted { get; set; }


		[TLProperty (11, 20, true)]
		public ITrue Min { get; set; }


		[TLProperty (12, 21, true)]
		public ITrue BotInlineGeo { get; set; }


		[TLProperty (13)]
		public System.UInt32 Id { get; set; }


		[TLProperty (14, 0, true)]
		public System.UInt64 AccessHash { get; set; }


		[TLProperty (15, 1, true)]
		public System.String FirstName { get; set; }


		[TLProperty (16, 2, true)]
		public System.String LastName { get; set; }


		[TLProperty (17, 3, true)]
		public System.String Username { get; set; }


		[TLProperty (18, 4, true)]
		public System.String Phone { get; set; }


		[TLProperty (19, 5, true)]
		public IUserProfilePhoto Photo { get; set; }


		[TLProperty (20, 6, true)]
		public IUserStatus Status { get; set; }


		[TLProperty (21, 14, true)]
		public System.UInt32 BotInfoVersion { get; set; }


		[TLProperty (22, 18, true)]
		public System.String RestrictionReason { get; set; }


		[TLProperty (23, 19, true)]
		public System.String BotInlinePlaceholder { get; set; }

	}

	[TLObject (0xC27AC8C7)]
	public partial class BotCommand : IBotCommand
	{

		[TLProperty (1)]
		public System.String Command { get; set; }


		[TLProperty (2)]
		public System.String Description { get; set; }

	}

	[TLObject (0x98E81D3A)]
	public partial class BotInfo : IBotInfo
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.String Description { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IBotCommand> Commands { get; set; }

	}

	[TLObject (0xA2FA4880)]
	public partial class KeyboardButton : IKeyboardButton
	{

		[TLProperty (1)]
		public System.String Text { get; set; }

	}

	[TLObject (0x77608B83)]
	public partial class KeyboardButtonRow : IKeyboardButtonRow
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IKeyboardButton> Buttons { get; set; }

	}

	[TLObject (0xA03E5B85)]
	public partial class ReplyKeyboardHide : IReplyMarkup
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 2, true)]
		public ITrue Selective { get; set; }

	}

	[TLObject (0xF4108AA0)]
	public partial class ReplyKeyboardForceReply : IReplyMarkup
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 1, true)]
		public ITrue SingleUse { get; set; }


		[TLProperty (3, 2, true)]
		public ITrue Selective { get; set; }

	}

	[TLObject (0x3502758C)]
	public partial class ReplyKeyboardMarkup : IReplyMarkup
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Resize { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue SingleUse { get; set; }


		[TLProperty (4, 2, true)]
		public ITrue Selective { get; set; }


		[TLProperty (5)]
		public System.Collections.Generic.List<IKeyboardButtonRow> Rows { get; set; }

	}

	[TLObject (0x7B8E7DE6)]
	public partial class InputPeerUser : IInputPeer
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }

	}

	[TLObject (0xD8292816)]
	public partial class InputUser : IInputUser
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }

	}

	[TLObject (0xAF7E0394)]
	public partial class HelpAppChangelogEmpty : IHelpAppChangelog
	{
	}

	[TLObject (0x4668E6BD)]
	public partial class HelpAppChangelog : IHelpAppChangelog
	{

		[TLProperty (1)]
		public System.String Text { get; set; }

	}

	[TLObject (0xBB92BA95)]
	public partial class MessageEntityUnknown : IMessageEntity
	{

		[TLProperty (1)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (2)]
		public System.UInt32 Length { get; set; }

	}

	[TLObject (0xFA04579D)]
	public partial class MessageEntityMention : IMessageEntity
	{

		[TLProperty (1)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (2)]
		public System.UInt32 Length { get; set; }

	}

	[TLObject (0x6F635B0D)]
	public partial class MessageEntityHashtag : IMessageEntity
	{

		[TLProperty (1)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (2)]
		public System.UInt32 Length { get; set; }

	}

	[TLObject (0x6CEF8AC7)]
	public partial class MessageEntityBotCommand : IMessageEntity
	{

		[TLProperty (1)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (2)]
		public System.UInt32 Length { get; set; }

	}

	[TLObject (0x6ED02538)]
	public partial class MessageEntityUrl : IMessageEntity
	{

		[TLProperty (1)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (2)]
		public System.UInt32 Length { get; set; }

	}

	[TLObject (0x64E475C2)]
	public partial class MessageEntityEmail : IMessageEntity
	{

		[TLProperty (1)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (2)]
		public System.UInt32 Length { get; set; }

	}

	[TLObject (0xBD610BC9)]
	public partial class MessageEntityBold : IMessageEntity
	{

		[TLProperty (1)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (2)]
		public System.UInt32 Length { get; set; }

	}

	[TLObject (0x826F8B60)]
	public partial class MessageEntityItalic : IMessageEntity
	{

		[TLProperty (1)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (2)]
		public System.UInt32 Length { get; set; }

	}

	[TLObject (0x28A20571)]
	public partial class MessageEntityCode : IMessageEntity
	{

		[TLProperty (1)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (2)]
		public System.UInt32 Length { get; set; }

	}

	[TLObject (0x73924BE0)]
	public partial class MessageEntityPre : IMessageEntity
	{

		[TLProperty (1)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (2)]
		public System.UInt32 Length { get; set; }


		[TLProperty (3)]
		public System.String Language { get; set; }

	}

	[TLObject (0x76A6D327)]
	public partial class MessageEntityTextUrl : IMessageEntity
	{

		[TLProperty (1)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (2)]
		public System.UInt32 Length { get; set; }


		[TLProperty (3)]
		public System.String Url { get; set; }

	}

	[TLObject (0x11F1331C)]
	public partial class UpdateShortSentMessage : IUpdates
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Unread { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue Out { get; set; }


		[TLProperty (4)]
		public System.UInt32 Id { get; set; }


		[TLProperty (5)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (6)]
		public System.UInt32 PtsCount { get; set; }


		[TLProperty (7)]
		public System.UInt32 Date { get; set; }


		[TLProperty (8, 9, true)]
		public IMessageMedia Media { get; set; }


		[TLProperty (9, 7, true)]
		public System.Collections.Generic.List<IMessageEntity> Entities { get; set; }

	}

	[TLObject (0xEE8C1E86)]
	public partial class InputChannelEmpty : IInputChannel
	{
	}

	[TLObject (0xAFEB712E)]
	public partial class InputChannel : IInputChannel
	{

		[TLProperty (1)]
		public System.UInt32 ChannelId { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }

	}

	[TLObject (0xBDDDE532)]
	public partial class PeerChannel : IPeer
	{

		[TLProperty (1)]
		public System.UInt32 ChannelId { get; set; }

	}

	[TLObject (0x20ADAEF8)]
	public partial class InputPeerChannel : IInputPeer
	{

		[TLProperty (1)]
		public System.UInt32 ChannelId { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }

	}

	[TLObject (0xA14DCA52)]
	public partial class Channel : IChat
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Creator { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue Kicked { get; set; }


		[TLProperty (4, 2, true)]
		public ITrue Left { get; set; }


		[TLProperty (5, 3, true)]
		public ITrue Editor { get; set; }


		[TLProperty (6, 4, true)]
		public ITrue Moderator { get; set; }


		[TLProperty (7, 5, true)]
		public ITrue Broadcast { get; set; }


		[TLProperty (8, 7, true)]
		public ITrue Verified { get; set; }


		[TLProperty (9, 8, true)]
		public ITrue Megagroup { get; set; }


		[TLProperty (10, 9, true)]
		public ITrue Restricted { get; set; }


		[TLProperty (11, 10, true)]
		public ITrue Democracy { get; set; }


		[TLProperty (12, 11, true)]
		public ITrue Signatures { get; set; }


		[TLProperty (13, 12, true)]
		public ITrue Min { get; set; }


		[TLProperty (14)]
		public System.UInt32 Id { get; set; }


		[TLProperty (15, 13, true)]
		public System.UInt64 AccessHash { get; set; }


		[TLProperty (16)]
		public System.String Title { get; set; }


		[TLProperty (17, 6, true)]
		public System.String Username { get; set; }


		[TLProperty (18)]
		public IChatPhoto Photo { get; set; }


		[TLProperty (19)]
		public System.UInt32 Date { get; set; }


		[TLProperty (20)]
		public System.UInt32 Version { get; set; }


		[TLProperty (21, 9, true)]
		public System.String RestrictionReason { get; set; }

	}

	[TLObject (0x2D85832C)]
	public partial class ChannelForbidden : IChat
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }


		[TLProperty (2)]
		public System.UInt64 AccessHash { get; set; }


		[TLProperty (3)]
		public System.String Title { get; set; }

	}

	[TLObject (0x7F077AD9)]
	public partial class ContactsResolvedPeer : IContactsResolvedPeer
	{

		[TLProperty (1)]
		public IPeer Peer { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x97BEE562)]
	public partial class ChannelFull : IChatFull
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 3, true)]
		public ITrue CanViewParticipants { get; set; }


		[TLProperty (3, 6, true)]
		public ITrue CanSetUsername { get; set; }


		[TLProperty (4)]
		public System.UInt32 Id { get; set; }


		[TLProperty (5)]
		public System.String About { get; set; }


		[TLProperty (6, 0, true)]
		public System.UInt32 ParticipantsCount { get; set; }


		[TLProperty (7, 1, true)]
		public System.UInt32 AdminsCount { get; set; }


		[TLProperty (8, 2, true)]
		public System.UInt32 KickedCount { get; set; }


		[TLProperty (9)]
		public System.UInt32 ReadInboxMaxId { get; set; }


		[TLProperty (10)]
		public System.UInt32 UnreadCount { get; set; }


		[TLProperty (11)]
		public System.UInt32 UnreadImportantCount { get; set; }


		[TLProperty (12)]
		public IPhoto ChatPhoto { get; set; }


		[TLProperty (13)]
		public IPeerNotifySettings NotifySettings { get; set; }


		[TLProperty (14)]
		public IExportedChatInvite ExportedInvite { get; set; }


		[TLProperty (15)]
		public System.Collections.Generic.List<IBotInfo> BotInfo { get; set; }


		[TLProperty (16, 4, true)]
		public System.UInt32 MigratedFromChatId { get; set; }


		[TLProperty (17, 4, true)]
		public System.UInt32 MigratedFromMaxId { get; set; }


		[TLProperty (18, 5, true)]
		public System.UInt32 PinnedMsgId { get; set; }

	}

	[TLObject (0x5B8496B2)]
	public partial class DialogChannel : IDialog
	{

		[TLProperty (1)]
		public IPeer Peer { get; set; }


		[TLProperty (2)]
		public System.UInt32 TopMessage { get; set; }


		[TLProperty (3)]
		public System.UInt32 TopImportantMessage { get; set; }


		[TLProperty (4)]
		public System.UInt32 ReadInboxMaxId { get; set; }


		[TLProperty (5)]
		public System.UInt32 UnreadCount { get; set; }


		[TLProperty (6)]
		public System.UInt32 UnreadImportantCount { get; set; }


		[TLProperty (7)]
		public IPeerNotifySettings NotifySettings { get; set; }


		[TLProperty (8)]
		public System.UInt32 Pts { get; set; }

	}

	[TLObject (0x0AE30253)]
	public partial class MessageRange : IMessageRange
	{

		[TLProperty (1)]
		public System.UInt32 MinId { get; set; }


		[TLProperty (2)]
		public System.UInt32 MaxId { get; set; }

	}

	[TLObject (0xE8346F53)]
	public partial class MessageGroup : IMessageGroup
	{

		[TLProperty (1)]
		public System.UInt32 MinId { get; set; }


		[TLProperty (2)]
		public System.UInt32 MaxId { get; set; }


		[TLProperty (3)]
		public System.UInt32 Count { get; set; }


		[TLProperty (4)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0xBC0F17BC)]
	public partial class MessagesChannelMessages : IMessagesMessages
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (3)]
		public System.UInt32 Count { get; set; }


		[TLProperty (4)]
		public System.Collections.Generic.List<IMessage> Messages { get; set; }


		[TLProperty (5, 0, true)]
		public System.Collections.Generic.List<IMessageGroup> Collapsed { get; set; }


		[TLProperty (6)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (7)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x95D2AC92)]
	public partial class MessageActionChannelCreate : IMessageAction
	{

		[TLProperty (1)]
		public System.String Title { get; set; }

	}

	[TLObject (0xEB0467FB)]
	public partial class UpdateChannelTooLong : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.UInt32 ChannelId { get; set; }


		[TLProperty (3, 0, true)]
		public System.UInt32 Pts { get; set; }

	}

	[TLObject (0xB6D45656)]
	public partial class UpdateChannel : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 ChannelId { get; set; }

	}

	[TLObject (0xC36C1E3C)]
	public partial class UpdateChannelGroup : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 ChannelId { get; set; }


		[TLProperty (2)]
		public IMessageGroup Group { get; set; }

	}

	[TLObject (0x62BA04D9)]
	public partial class UpdateNewChannelMessage : IUpdate
	{

		[TLProperty (1)]
		public IMessage Message { get; set; }


		[TLProperty (2)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (3)]
		public System.UInt32 PtsCount { get; set; }

	}

	[TLObject (0x4214F37F)]
	public partial class UpdateReadChannelInbox : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 ChannelId { get; set; }


		[TLProperty (2)]
		public System.UInt32 MaxId { get; set; }

	}

	[TLObject (0xC37521C9)]
	public partial class UpdateDeleteChannelMessages : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 ChannelId { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<System.UInt32> Messages { get; set; }


		[TLProperty (3)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (4)]
		public System.UInt32 PtsCount { get; set; }

	}

	[TLObject (0x98A12B4B)]
	public partial class UpdateChannelMessageViews : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 ChannelId { get; set; }


		[TLProperty (2)]
		public System.UInt32 Id { get; set; }


		[TLProperty (3)]
		public System.UInt32 Views { get; set; }

	}

	[TLObject (0x3E11AFFB)]
	public partial class UpdatesChannelDifferenceEmpty : IUpdatesChannelDifference
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Final { get; set; }


		[TLProperty (3)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (4, 1, true)]
		public System.UInt32 Timeout { get; set; }

	}

	[TLObject (0x5E167646)]
	public partial class UpdatesChannelDifferenceTooLong : IUpdatesChannelDifference
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Final { get; set; }


		[TLProperty (3)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (4, 1, true)]
		public System.UInt32 Timeout { get; set; }


		[TLProperty (5)]
		public System.UInt32 TopMessage { get; set; }


		[TLProperty (6)]
		public System.UInt32 TopImportantMessage { get; set; }


		[TLProperty (7)]
		public System.UInt32 ReadInboxMaxId { get; set; }


		[TLProperty (8)]
		public System.UInt32 UnreadCount { get; set; }


		[TLProperty (9)]
		public System.UInt32 UnreadImportantCount { get; set; }


		[TLProperty (10)]
		public System.Collections.Generic.List<IMessage> Messages { get; set; }


		[TLProperty (11)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (12)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x2064674E)]
	public partial class UpdatesChannelDifference : IUpdatesChannelDifference
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Final { get; set; }


		[TLProperty (3)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (4, 1, true)]
		public System.UInt32 Timeout { get; set; }


		[TLProperty (5)]
		public System.Collections.Generic.List<IMessage> NewMessages { get; set; }


		[TLProperty (6)]
		public System.Collections.Generic.List<IUpdate> OtherUpdates { get; set; }


		[TLProperty (7)]
		public System.Collections.Generic.List<IChat> Chats { get; set; }


		[TLProperty (8)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0x94D42EE7)]
	public partial class ChannelMessagesFilterEmpty : IChannelMessagesFilter
	{
	}

	[TLObject (0xCD77D957)]
	public partial class ChannelMessagesFilter : IChannelMessagesFilter
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue ImportantOnly { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue ExcludeNewMessages { get; set; }


		[TLProperty (4)]
		public System.Collections.Generic.List<IMessageRange> Ranges { get; set; }

	}

	[TLObject (0xFA01232E)]
	public partial class ChannelMessagesFilterCollapsed : IChannelMessagesFilter
	{
	}

	[TLObject (0x15EBAC1D)]
	public partial class ChannelParticipant : IChannelParticipant
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0xA3289A6D)]
	public partial class ChannelParticipantSelf : IChannelParticipant
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.UInt32 InviterId { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0x91057FEF)]
	public partial class ChannelParticipantModerator : IChannelParticipant
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.UInt32 InviterId { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0x98192D61)]
	public partial class ChannelParticipantEditor : IChannelParticipant
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.UInt32 InviterId { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0x8CC5E69A)]
	public partial class ChannelParticipantKicked : IChannelParticipant
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.UInt32 KickedBy { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0xE3E2E1F9)]
	public partial class ChannelParticipantCreator : IChannelParticipant
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }

	}

	[TLObject (0xDE3F3C79)]
	public partial class ChannelParticipantsRecent : IChannelParticipantsFilter
	{
	}

	[TLObject (0xB4608969)]
	public partial class ChannelParticipantsAdmins : IChannelParticipantsFilter
	{
	}

	[TLObject (0x3C37BB7A)]
	public partial class ChannelParticipantsKicked : IChannelParticipantsFilter
	{
	}

	[TLObject (0xB285A0C6)]
	public partial class ChannelRoleEmpty : IChannelParticipantRole
	{
	}

	[TLObject (0x9618D975)]
	public partial class ChannelRoleModerator : IChannelParticipantRole
	{
	}

	[TLObject (0x820BFE8C)]
	public partial class ChannelRoleEditor : IChannelParticipantRole
	{
	}

	[TLObject (0xF56EE2A8)]
	public partial class ChannelsChannelParticipants : IChannelsChannelParticipants
	{

		[TLProperty (1)]
		public System.UInt32 Count { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IChannelParticipant> Participants { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0xD0D9B163)]
	public partial class ChannelsChannelParticipant : IChannelsChannelParticipant
	{

		[TLProperty (1)]
		public IChannelParticipant Participant { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IUser> Users { get; set; }

	}

	[TLObject (0xDA13538A)]
	public partial class ChatParticipantCreator : IChatParticipant
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }

	}

	[TLObject (0xE2D6E436)]
	public partial class ChatParticipantAdmin : IChatParticipant
	{

		[TLProperty (1)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (2)]
		public System.UInt32 InviterId { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }

	}

	[TLObject (0x6E947941)]
	public partial class UpdateChatAdmins : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public System.Boolean Enabled { get; set; }


		[TLProperty (3)]
		public System.UInt32 Version { get; set; }

	}

	[TLObject (0xB6901959)]
	public partial class UpdateChatParticipantAdmin : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (3)]
		public System.Boolean IsAdmin { get; set; }


		[TLProperty (4)]
		public System.UInt32 Version { get; set; }

	}

	[TLObject (0x51BDB021)]
	public partial class MessageActionChatMigrateTo : IMessageAction
	{

		[TLProperty (1)]
		public System.UInt32 ChannelId { get; set; }

	}

	[TLObject (0xB055EAEE)]
	public partial class MessageActionChannelMigrateFrom : IMessageAction
	{

		[TLProperty (1)]
		public System.String Title { get; set; }


		[TLProperty (2)]
		public System.UInt32 ChatId { get; set; }

	}

	[TLObject (0xB0D1865B)]
	public partial class ChannelParticipantsBots : IChannelParticipantsFilter
	{
	}

	[TLObject (0xF1EE3E90)]
	public partial class HelpTermsOfService : IHelpTermsOfService
	{

		[TLProperty (1)]
		public System.String Text { get; set; }

	}

	[TLObject (0x688A30AA)]
	public partial class UpdateNewStickerSet : IUpdate
	{

		[TLProperty (1)]
		public IMessagesStickerSet Stickerset { get; set; }

	}

	[TLObject (0xF0DFB451)]
	public partial class UpdateStickerSetsOrder : IUpdate
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.UInt64> Order { get; set; }

	}

	[TLObject (0x43AE3DEC)]
	public partial class UpdateStickerSets : IUpdate
	{
	}

	[TLObject (0x162ECC1F)]
	public partial class FoundGif : IFoundGif
	{

		[TLProperty (1)]
		public System.String Url { get; set; }


		[TLProperty (2)]
		public System.String ThumbUrl { get; set; }


		[TLProperty (3)]
		public System.String ContentUrl { get; set; }


		[TLProperty (4)]
		public System.String ContentType { get; set; }


		[TLProperty (5)]
		public System.UInt32 W { get; set; }


		[TLProperty (6)]
		public System.UInt32 H { get; set; }

	}

	[TLObject (0x9C750409)]
	public partial class FoundGifCached : IFoundGif
	{

		[TLProperty (1)]
		public System.String Url { get; set; }


		[TLProperty (2)]
		public IPhoto Photo { get; set; }


		[TLProperty (3)]
		public IDocument Document { get; set; }

	}

	[TLObject (0x4843B0FD)]
	public partial class InputMediaGifExternal : IInputMedia
	{

		[TLProperty (1)]
		public System.String Url { get; set; }


		[TLProperty (2)]
		public System.String Q { get; set; }

	}

	[TLObject (0x450A1C0A)]
	public partial class MessagesFoundGifs : IMessagesFoundGifs
	{

		[TLProperty (1)]
		public System.UInt32 NextOffset { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IFoundGif> Results { get; set; }

	}

	[TLObject (0xE8025CA2)]
	public partial class MessagesSavedGifsNotModified : IMessagesSavedGifs
	{
	}

	[TLObject (0x2E0709A5)]
	public partial class MessagesSavedGifs : IMessagesSavedGifs
	{

		[TLProperty (1)]
		public System.UInt32 Hash { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IDocument> Gifs { get; set; }

	}

	[TLObject (0x9375341E)]
	public partial class UpdateSavedGifs : IUpdate
	{
	}

	[TLObject (0x292FED13)]
	public partial class InputBotInlineMessageMediaAuto : IInputBotInlineMessage
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.String Caption { get; set; }


		[TLProperty (3, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }

	}

	[TLObject (0x3DCD7A87)]
	public partial class InputBotInlineMessageText : IInputBotInlineMessage
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue NoWebpage { get; set; }


		[TLProperty (3)]
		public System.String Message { get; set; }


		[TLProperty (4, 1, true)]
		public System.Collections.Generic.List<IMessageEntity> Entities { get; set; }


		[TLProperty (5, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }

	}

	[TLObject (0x2CBBE15A)]
	public partial class InputBotInlineResult : IInputBotInlineResult
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.String Id { get; set; }


		[TLProperty (3)]
		public System.String Type { get; set; }


		[TLProperty (4, 1, true)]
		public System.String Title { get; set; }


		[TLProperty (5, 2, true)]
		public System.String Description { get; set; }


		[TLProperty (6, 3, true)]
		public System.String Url { get; set; }


		[TLProperty (7, 4, true)]
		public System.String ThumbUrl { get; set; }


		[TLProperty (8, 5, true)]
		public System.String ContentUrl { get; set; }


		[TLProperty (9, 5, true)]
		public System.String ContentType { get; set; }


		[TLProperty (10, 6, true)]
		public System.UInt32 W { get; set; }


		[TLProperty (11, 6, true)]
		public System.UInt32 H { get; set; }


		[TLProperty (12, 7, true)]
		public System.UInt32 Duration { get; set; }


		[TLProperty (13)]
		public IInputBotInlineMessage SendMessage { get; set; }

	}

	[TLObject (0x0A74B15B)]
	public partial class BotInlineMessageMediaAuto : IBotInlineMessage
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.String Caption { get; set; }


		[TLProperty (3, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }

	}

	[TLObject (0x8C7F65E2)]
	public partial class BotInlineMessageText : IBotInlineMessage
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue NoWebpage { get; set; }


		[TLProperty (3)]
		public System.String Message { get; set; }


		[TLProperty (4, 1, true)]
		public System.Collections.Generic.List<IMessageEntity> Entities { get; set; }


		[TLProperty (5, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }

	}

	[TLObject (0x9BEBAEB9)]
	public partial class BotInlineResult : IBotInlineResult
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.String Id { get; set; }


		[TLProperty (3)]
		public System.String Type { get; set; }


		[TLProperty (4, 1, true)]
		public System.String Title { get; set; }


		[TLProperty (5, 2, true)]
		public System.String Description { get; set; }


		[TLProperty (6, 3, true)]
		public System.String Url { get; set; }


		[TLProperty (7, 4, true)]
		public System.String ThumbUrl { get; set; }


		[TLProperty (8, 5, true)]
		public System.String ContentUrl { get; set; }


		[TLProperty (9, 5, true)]
		public System.String ContentType { get; set; }


		[TLProperty (10, 6, true)]
		public System.UInt32 W { get; set; }


		[TLProperty (11, 6, true)]
		public System.UInt32 H { get; set; }


		[TLProperty (12, 7, true)]
		public System.UInt32 Duration { get; set; }


		[TLProperty (13)]
		public IBotInlineMessage SendMessage { get; set; }

	}

	[TLObject (0x256709A6)]
	public partial class MessagesBotResults : IMessagesBotResults
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Gallery { get; set; }


		[TLProperty (3)]
		public System.UInt64 QueryId { get; set; }


		[TLProperty (4, 1, true)]
		public System.String NextOffset { get; set; }


		[TLProperty (5, 2, true)]
		public IInlineBotSwitchPM SwitchPm { get; set; }


		[TLProperty (6)]
		public System.Collections.Generic.List<IBotInlineResult> Results { get; set; }

	}

	[TLObject (0x54826690)]
	public partial class UpdateBotInlineQuery : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.UInt64 QueryId { get; set; }


		[TLProperty (3)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (4)]
		public System.String Query { get; set; }


		[TLProperty (5, 0, true)]
		public IGeoPoint Geo { get; set; }


		[TLProperty (6)]
		public System.String Offset { get; set; }

	}

	[TLObject (0x0E48F964)]
	public partial class UpdateBotInlineSend : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (3)]
		public System.String Query { get; set; }


		[TLProperty (4, 0, true)]
		public IGeoPoint Geo { get; set; }


		[TLProperty (5)]
		public System.String Id { get; set; }


		[TLProperty (6, 1, true)]
		public IInputBotInlineMessageID MsgId { get; set; }

	}

	[TLObject (0x50F5C392)]
	public partial class InputMessagesFilterVoice : IMessagesFilter
	{
	}

	[TLObject (0x3751B49E)]
	public partial class InputMessagesFilterMusic : IMessagesFilter
	{
	}

	[TLObject (0xBDFB0426)]
	public partial class InputPrivacyKeyChatInvite : IInputPrivacyKey
	{
	}

	[TLObject (0x500E6DFA)]
	public partial class PrivacyKeyChatInvite : IPrivacyKey
	{
	}

	[TLObject (0x1F486803)]
	public partial class ExportedMessageLink : IExportedMessageLink
	{

		[TLProperty (1)]
		public System.String Link { get; set; }

	}

	[TLObject (0xC786DDCB)]
	public partial class MessageFwdHeader : IMessageFwdHeader
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public System.UInt32 FromId { get; set; }


		[TLProperty (3)]
		public System.UInt32 Date { get; set; }


		[TLProperty (4, 1, true)]
		public System.UInt32 ChannelId { get; set; }


		[TLProperty (5, 2, true)]
		public System.UInt32 ChannelPost { get; set; }

	}

	[TLObject (0x1B3F4DF7)]
	public partial class UpdateEditChannelMessage : IUpdate
	{

		[TLProperty (1)]
		public IMessage Message { get; set; }


		[TLProperty (2)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (3)]
		public System.UInt32 PtsCount { get; set; }

	}

	[TLObject (0x98592475)]
	public partial class UpdateChannelPinnedMessage : IUpdate
	{

		[TLProperty (1)]
		public System.UInt32 ChannelId { get; set; }


		[TLProperty (2)]
		public System.UInt32 Id { get; set; }

	}

	[TLObject (0x94BD38ED)]
	public partial class MessageActionPinMessage : IMessageAction
	{
	}

	[TLObject (0x72A3158C)]
	public partial class AuthCodeTypeSms : IAuthCodeType
	{
	}

	[TLObject (0x741CD3E3)]
	public partial class AuthCodeTypeCall : IAuthCodeType
	{
	}

	[TLObject (0x226CCEFB)]
	public partial class AuthCodeTypeFlashCall : IAuthCodeType
	{
	}

	[TLObject (0x3DBB5986)]
	public partial class AuthSentCodeTypeApp : IAuthSentCodeType
	{

		[TLProperty (1)]
		public System.UInt32 Length { get; set; }

	}

	[TLObject (0xC000BBA2)]
	public partial class AuthSentCodeTypeSms : IAuthSentCodeType
	{

		[TLProperty (1)]
		public System.UInt32 Length { get; set; }

	}

	[TLObject (0x5353E5A7)]
	public partial class AuthSentCodeTypeCall : IAuthSentCodeType
	{

		[TLProperty (1)]
		public System.UInt32 Length { get; set; }

	}

	[TLObject (0xAB03C6D9)]
	public partial class AuthSentCodeTypeFlashCall : IAuthSentCodeType
	{

		[TLProperty (1)]
		public System.String Pattern { get; set; }

	}

	[TLObject (0x258AFF05)]
	public partial class KeyboardButtonUrl : IKeyboardButton
	{

		[TLProperty (1)]
		public System.String Text { get; set; }


		[TLProperty (2)]
		public System.String Url { get; set; }

	}

	[TLObject (0x683A5E46)]
	public partial class KeyboardButtonCallback : IKeyboardButton
	{

		[TLProperty (1)]
		public System.String Text { get; set; }


		[TLProperty (2)]
		public System.Byte[] Data { get; set; }

	}

	[TLObject (0xB16A6C29)]
	public partial class KeyboardButtonRequestPhone : IKeyboardButton
	{

		[TLProperty (1)]
		public System.String Text { get; set; }

	}

	[TLObject (0xFC796B3F)]
	public partial class KeyboardButtonRequestGeoLocation : IKeyboardButton
	{

		[TLProperty (1)]
		public System.String Text { get; set; }

	}

	[TLObject (0xEA1B7A14)]
	public partial class KeyboardButtonSwitchInline : IKeyboardButton
	{

		[TLProperty (1)]
		public System.String Text { get; set; }


		[TLProperty (2)]
		public System.String Query { get; set; }

	}

	[TLObject (0x48A30254)]
	public partial class ReplyInlineMarkup : IReplyMarkup
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IKeyboardButtonRow> Rows { get; set; }

	}

	[TLObject (0x1264F1C6)]
	public partial class MessagesBotCallbackAnswer : IMessagesBotCallbackAnswer
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 1, true)]
		public ITrue Alert { get; set; }


		[TLProperty (3, 0, true)]
		public System.String Message { get; set; }

	}

	[TLObject (0xA68C688C)]
	public partial class UpdateBotCallbackQuery : IUpdate
	{

		[TLProperty (1)]
		public System.UInt64 QueryId { get; set; }


		[TLProperty (2)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (3)]
		public IPeer Peer { get; set; }


		[TLProperty (4)]
		public System.UInt32 MsgId { get; set; }


		[TLProperty (5)]
		public System.Byte[] Data { get; set; }

	}

	[TLObject (0x26B5DDE6)]
	public partial class MessagesMessageEditData : IMessagesMessageEditData
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Caption { get; set; }

	}

	[TLObject (0xE40370A3)]
	public partial class UpdateEditMessage : IUpdate
	{

		[TLProperty (1)]
		public IMessage Message { get; set; }


		[TLProperty (2)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (3)]
		public System.UInt32 PtsCount { get; set; }

	}

	[TLObject (0xF4A59DE1)]
	public partial class InputBotInlineMessageMediaGeo : IInputBotInlineMessage
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public IInputGeoPoint GeoPoint { get; set; }


		[TLProperty (3, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }

	}

	[TLObject (0xAAAFADC8)]
	public partial class InputBotInlineMessageMediaVenue : IInputBotInlineMessage
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public IInputGeoPoint GeoPoint { get; set; }


		[TLProperty (3)]
		public System.String Title { get; set; }


		[TLProperty (4)]
		public System.String Address { get; set; }


		[TLProperty (5)]
		public System.String Provider { get; set; }


		[TLProperty (6)]
		public System.String VenueId { get; set; }


		[TLProperty (7, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }

	}

	[TLObject (0x2DAF01A7)]
	public partial class InputBotInlineMessageMediaContact : IInputBotInlineMessage
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.String PhoneNumber { get; set; }


		[TLProperty (3)]
		public System.String FirstName { get; set; }


		[TLProperty (4)]
		public System.String LastName { get; set; }


		[TLProperty (5, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }

	}

	[TLObject (0x3A8FD8B8)]
	public partial class BotInlineMessageMediaGeo : IBotInlineMessage
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public IGeoPoint Geo { get; set; }


		[TLProperty (3, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }

	}

	[TLObject (0x4366232E)]
	public partial class BotInlineMessageMediaVenue : IBotInlineMessage
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public IGeoPoint Geo { get; set; }


		[TLProperty (3)]
		public System.String Title { get; set; }


		[TLProperty (4)]
		public System.String Address { get; set; }


		[TLProperty (5)]
		public System.String Provider { get; set; }


		[TLProperty (6)]
		public System.String VenueId { get; set; }


		[TLProperty (7, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }

	}

	[TLObject (0x35EDB4D4)]
	public partial class BotInlineMessageMediaContact : IBotInlineMessage
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.String PhoneNumber { get; set; }


		[TLProperty (3)]
		public System.String FirstName { get; set; }


		[TLProperty (4)]
		public System.String LastName { get; set; }


		[TLProperty (5, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }

	}

	[TLObject (0xA8D864A7)]
	public partial class InputBotInlineResultPhoto : IInputBotInlineResult
	{

		[TLProperty (1)]
		public System.String Id { get; set; }


		[TLProperty (2)]
		public System.String Type { get; set; }


		[TLProperty (3)]
		public IInputPhoto Photo { get; set; }


		[TLProperty (4)]
		public IInputBotInlineMessage SendMessage { get; set; }

	}

	[TLObject (0xFFF8FDC4)]
	public partial class InputBotInlineResultDocument : IInputBotInlineResult
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.String Id { get; set; }


		[TLProperty (3)]
		public System.String Type { get; set; }


		[TLProperty (4, 1, true)]
		public System.String Title { get; set; }


		[TLProperty (5, 2, true)]
		public System.String Description { get; set; }


		[TLProperty (6)]
		public IInputDocument Document { get; set; }


		[TLProperty (7)]
		public IInputBotInlineMessage SendMessage { get; set; }

	}

	[TLObject (0x17DB940B)]
	public partial class BotInlineMediaResult : IBotInlineResult
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.String Id { get; set; }


		[TLProperty (3)]
		public System.String Type { get; set; }


		[TLProperty (4, 0, true)]
		public IPhoto Photo { get; set; }


		[TLProperty (5, 1, true)]
		public IDocument Document { get; set; }


		[TLProperty (6, 2, true)]
		public System.String Title { get; set; }


		[TLProperty (7, 3, true)]
		public System.String Description { get; set; }


		[TLProperty (8)]
		public IBotInlineMessage SendMessage { get; set; }

	}

	[TLObject (0x890C3D89)]
	public partial class InputBotInlineMessageID : IInputBotInlineMessageID
	{

		[TLProperty (1)]
		public System.UInt32 DcId { get; set; }


		[TLProperty (2)]
		public System.UInt64 Id { get; set; }


		[TLProperty (3)]
		public System.UInt64 AccessHash { get; set; }

	}

	[TLObject (0x2CBD95AF)]
	public partial class UpdateInlineBotCallbackQuery : IUpdate
	{

		[TLProperty (1)]
		public System.UInt64 QueryId { get; set; }


		[TLProperty (2)]
		public System.UInt32 UserId { get; set; }


		[TLProperty (3)]
		public IInputBotInlineMessageID MsgId { get; set; }


		[TLProperty (4)]
		public System.Byte[] Data { get; set; }

	}

	[TLObject (0x3C20629F)]
	public partial class InlineBotSwitchPM : IInlineBotSwitchPM
	{

		[TLProperty (1)]
		public System.String Text { get; set; }


		[TLProperty (2)]
		public System.String StartParam { get; set; }

	}

	[TLObject (0xCB9F372D)]
	public partial class InvokeAfterMsgArgs
	{

		[TLProperty (1)]
		public System.UInt64 MsgId { get; set; }


		[TLProperty (2)]
		public System.Object Query { get; set; }

	}

	[TLObject (0x3DC4B4F0)]
	public partial class InvokeAfterMsgsArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.UInt64> MsgIds { get; set; }


		[TLProperty (2)]
		public System.Object Query { get; set; }

	}

	[TLObject (0x6FE51DFB)]
	public partial class AuthCheckPhoneArgs
	{

		[TLProperty (1)]
		public System.String PhoneNumber { get; set; }

	}

	[TLObject (0xCCFD70CF)]
	public partial class AuthSendCodeArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue AllowFlashcall { get; set; }


		[TLProperty (3)]
		public System.String PhoneNumber { get; set; }


		[TLProperty (4, 0, true)]
		public System.Boolean CurrentNumber { get; set; }


		[TLProperty (5)]
		public System.UInt32 ApiId { get; set; }


		[TLProperty (6)]
		public System.String ApiHash { get; set; }


		[TLProperty (7)]
		public System.String LangCode { get; set; }

	}

	[TLObject (0x1B067634)]
	public partial class AuthSignUpArgs
	{

		[TLProperty (1)]
		public System.String PhoneNumber { get; set; }


		[TLProperty (2)]
		public System.String PhoneCodeHash { get; set; }


		[TLProperty (3)]
		public System.String PhoneCode { get; set; }


		[TLProperty (4)]
		public System.String FirstName { get; set; }


		[TLProperty (5)]
		public System.String LastName { get; set; }

	}

	[TLObject (0xBCD51581)]
	public partial class AuthSignInArgs
	{

		[TLProperty (1)]
		public System.String PhoneNumber { get; set; }


		[TLProperty (2)]
		public System.String PhoneCodeHash { get; set; }


		[TLProperty (3)]
		public System.String PhoneCode { get; set; }

	}

	[TLObject (0x5717DA40)]
	public partial class AuthLogOutArgs
	{
	}

	[TLObject (0x9FAB0D1A)]
	public partial class AuthResetAuthorizationsArgs
	{
	}

	[TLObject (0x771C1D97)]
	public partial class AuthSendInvitesArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.String> PhoneNumbers { get; set; }


		[TLProperty (2)]
		public System.String Message { get; set; }

	}

	[TLObject (0xE5BFFFCD)]
	public partial class AuthExportAuthorizationArgs
	{

		[TLProperty (1)]
		public System.UInt32 DcId { get; set; }

	}

	[TLObject (0xE3EF9613)]
	public partial class AuthImportAuthorizationArgs
	{

		[TLProperty (1)]
		public System.UInt32 Id { get; set; }


		[TLProperty (2)]
		public System.Byte[] Bytes { get; set; }

	}

	[TLObject (0xCDD42A05)]
	public partial class AuthBindTempAuthKeyArgs
	{

		[TLProperty (1)]
		public System.UInt64 PermAuthKeyId { get; set; }


		[TLProperty (2)]
		public System.UInt64 Nonce { get; set; }


		[TLProperty (3)]
		public System.UInt32 ExpiresAt { get; set; }


		[TLProperty (4)]
		public System.Byte[] EncryptedMessage { get; set; }

	}

	[TLObject (0x446C712C)]
	public partial class AccountRegisterDeviceArgs
	{

		[TLProperty (1)]
		public System.UInt32 TokenType { get; set; }


		[TLProperty (2)]
		public System.String Token { get; set; }


		[TLProperty (3)]
		public System.String DeviceModel { get; set; }


		[TLProperty (4)]
		public System.String SystemVersion { get; set; }


		[TLProperty (5)]
		public System.String AppVersion { get; set; }


		[TLProperty (6)]
		public System.Boolean AppSandbox { get; set; }


		[TLProperty (7)]
		public System.String LangCode { get; set; }

	}

	[TLObject (0x65C55B40)]
	public partial class AccountUnregisterDeviceArgs
	{

		[TLProperty (1)]
		public System.UInt32 TokenType { get; set; }


		[TLProperty (2)]
		public System.String Token { get; set; }

	}

	[TLObject (0x84BE5B93)]
	public partial class AccountUpdateNotifySettingsArgs
	{

		[TLProperty (1)]
		public IInputNotifyPeer Peer { get; set; }


		[TLProperty (2)]
		public IInputPeerNotifySettings Settings { get; set; }

	}

	[TLObject (0x12B3AD31)]
	public partial class AccountGetNotifySettingsArgs
	{

		[TLProperty (1)]
		public IInputNotifyPeer Peer { get; set; }

	}

	[TLObject (0xDB7E1747)]
	public partial class AccountResetNotifySettingsArgs
	{
	}

	[TLObject (0x78515775)]
	public partial class AccountUpdateProfileArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public System.String FirstName { get; set; }


		[TLProperty (3, 1, true)]
		public System.String LastName { get; set; }


		[TLProperty (4, 2, true)]
		public System.String About { get; set; }

	}

	[TLObject (0x6628562C)]
	public partial class AccountUpdateStatusArgs
	{

		[TLProperty (1)]
		public System.Boolean Offline { get; set; }

	}

	[TLObject (0xC04CFAC2)]
	public partial class AccountGetWallPapersArgs
	{
	}

	[TLObject (0xAE189D5F)]
	public partial class AccountReportPeerArgs
	{

		[TLProperty (1)]
		public IInputPeer Peer { get; set; }


		[TLProperty (2)]
		public IReportReason Reason { get; set; }

	}

	[TLObject (0x0D91A548)]
	public partial class UsersGetUsersArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IInputUser> Id { get; set; }

	}

	[TLObject (0xCA30A5B1)]
	public partial class UsersGetFullUserArgs
	{

		[TLProperty (1)]
		public IInputUser Id { get; set; }

	}

	[TLObject (0xC4A353EE)]
	public partial class ContactsGetStatusesArgs
	{
	}

	[TLObject (0x22C6AA08)]
	public partial class ContactsGetContactsArgs
	{

		[TLProperty (1)]
		public System.String Hash { get; set; }

	}

	[TLObject (0xDA30B32D)]
	public partial class ContactsImportContactsArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IInputContact> Contacts { get; set; }


		[TLProperty (2)]
		public System.Boolean Replace { get; set; }

	}

	[TLObject (0x8E953744)]
	public partial class ContactsDeleteContactArgs
	{

		[TLProperty (1)]
		public IInputUser Id { get; set; }

	}

	[TLObject (0x59AB389E)]
	public partial class ContactsDeleteContactsArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IInputUser> Id { get; set; }

	}

	[TLObject (0x332B49FC)]
	public partial class ContactsBlockArgs
	{

		[TLProperty (1)]
		public IInputUser Id { get; set; }

	}

	[TLObject (0xE54100BD)]
	public partial class ContactsUnblockArgs
	{

		[TLProperty (1)]
		public IInputUser Id { get; set; }

	}

	[TLObject (0xF57C350F)]
	public partial class ContactsGetBlockedArgs
	{

		[TLProperty (1)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (2)]
		public System.UInt32 Limit { get; set; }

	}

	[TLObject (0x84E53737)]
	public partial class ContactsExportCardArgs
	{
	}

	[TLObject (0x4FE196FE)]
	public partial class ContactsImportCardArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.UInt32> ExportCard { get; set; }

	}

	[TLObject (0x4222FA74)]
	public partial class MessagesGetMessagesArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.UInt32> Id { get; set; }

	}

	[TLObject (0x6B47F94D)]
	public partial class MessagesGetDialogsArgs
	{

		[TLProperty (1)]
		public System.UInt32 OffsetDate { get; set; }


		[TLProperty (2)]
		public System.UInt32 OffsetId { get; set; }


		[TLProperty (3)]
		public IInputPeer OffsetPeer { get; set; }


		[TLProperty (4)]
		public System.UInt32 Limit { get; set; }

	}

	[TLObject (0xAFA92846)]
	public partial class MessagesGetHistoryArgs
	{

		[TLProperty (1)]
		public IInputPeer Peer { get; set; }


		[TLProperty (2)]
		public System.UInt32 OffsetId { get; set; }


		[TLProperty (3)]
		public System.UInt32 OffsetDate { get; set; }


		[TLProperty (4)]
		public System.UInt32 AddOffset { get; set; }


		[TLProperty (5)]
		public System.UInt32 Limit { get; set; }


		[TLProperty (6)]
		public System.UInt32 MaxId { get; set; }


		[TLProperty (7)]
		public System.UInt32 MinId { get; set; }

	}

	[TLObject (0xD4569248)]
	public partial class MessagesSearchArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue ImportantOnly { get; set; }


		[TLProperty (3)]
		public IInputPeer Peer { get; set; }


		[TLProperty (4)]
		public System.String Q { get; set; }


		[TLProperty (5)]
		public IMessagesFilter Filter { get; set; }


		[TLProperty (6)]
		public System.UInt32 MinDate { get; set; }


		[TLProperty (7)]
		public System.UInt32 MaxDate { get; set; }


		[TLProperty (8)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (9)]
		public System.UInt32 MaxId { get; set; }


		[TLProperty (10)]
		public System.UInt32 Limit { get; set; }

	}

	[TLObject (0x0E306D3A)]
	public partial class MessagesReadHistoryArgs
	{

		[TLProperty (1)]
		public IInputPeer Peer { get; set; }


		[TLProperty (2)]
		public System.UInt32 MaxId { get; set; }

	}

	[TLObject (0xB7C13BD9)]
	public partial class MessagesDeleteHistoryArgs
	{

		[TLProperty (1)]
		public IInputPeer Peer { get; set; }


		[TLProperty (2)]
		public System.UInt32 MaxId { get; set; }

	}

	[TLObject (0xA5F18925)]
	public partial class MessagesDeleteMessagesArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.UInt32> Id { get; set; }

	}

	[TLObject (0x05A954C0)]
	public partial class MessagesReceivedMessagesArgs
	{

		[TLProperty (1)]
		public System.UInt32 MaxId { get; set; }

	}

	[TLObject (0xA3825E50)]
	public partial class MessagesSetTypingArgs
	{

		[TLProperty (1)]
		public IInputPeer Peer { get; set; }


		[TLProperty (2)]
		public ISendMessageAction Action { get; set; }

	}

	[TLObject (0xFA88427A)]
	public partial class MessagesSendMessageArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 1, true)]
		public ITrue NoWebpage { get; set; }


		[TLProperty (3, 4, true)]
		public ITrue Broadcast { get; set; }


		[TLProperty (4, 5, true)]
		public ITrue Silent { get; set; }


		[TLProperty (5, 6, true)]
		public ITrue Background { get; set; }


		[TLProperty (6)]
		public IInputPeer Peer { get; set; }


		[TLProperty (7, 0, true)]
		public System.UInt32 ReplyToMsgId { get; set; }


		[TLProperty (8)]
		public System.String Message { get; set; }


		[TLProperty (9)]
		public System.UInt64 RandomId { get; set; }


		[TLProperty (10, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }


		[TLProperty (11, 3, true)]
		public System.Collections.Generic.List<IMessageEntity> Entities { get; set; }

	}

	[TLObject (0xC8F16791)]
	public partial class MessagesSendMediaArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 4, true)]
		public ITrue Broadcast { get; set; }


		[TLProperty (3, 5, true)]
		public ITrue Silent { get; set; }


		[TLProperty (4, 6, true)]
		public ITrue Background { get; set; }


		[TLProperty (5)]
		public IInputPeer Peer { get; set; }


		[TLProperty (6, 0, true)]
		public System.UInt32 ReplyToMsgId { get; set; }


		[TLProperty (7)]
		public IInputMedia Media { get; set; }


		[TLProperty (8)]
		public System.UInt64 RandomId { get; set; }


		[TLProperty (9, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }

	}

	[TLObject (0x708E0195)]
	public partial class MessagesForwardMessagesArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 4, true)]
		public ITrue Broadcast { get; set; }


		[TLProperty (3, 5, true)]
		public ITrue Silent { get; set; }


		[TLProperty (4, 6, true)]
		public ITrue Background { get; set; }


		[TLProperty (5)]
		public IInputPeer FromPeer { get; set; }


		[TLProperty (6)]
		public System.Collections.Generic.List<System.UInt32> Id { get; set; }


		[TLProperty (7)]
		public System.Collections.Generic.List<System.UInt64> RandomId { get; set; }


		[TLProperty (8)]
		public IInputPeer ToPeer { get; set; }

	}

	[TLObject (0xCF1592DB)]
	public partial class MessagesReportSpamArgs
	{

		[TLProperty (1)]
		public IInputPeer Peer { get; set; }

	}

	[TLObject (0xA8F1709B)]
	public partial class MessagesHideReportSpamArgs
	{

		[TLProperty (1)]
		public IInputPeer Peer { get; set; }

	}

	[TLObject (0x3672E09C)]
	public partial class MessagesGetPeerSettingsArgs
	{

		[TLProperty (1)]
		public IInputPeer Peer { get; set; }

	}

	[TLObject (0x3C6AA187)]
	public partial class MessagesGetChatsArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.UInt32> Id { get; set; }

	}

	[TLObject (0x3B831C66)]
	public partial class MessagesGetFullChatArgs
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }

	}

	[TLObject (0xDC452855)]
	public partial class MessagesEditChatTitleArgs
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public System.String Title { get; set; }

	}

	[TLObject (0xCA4C79D8)]
	public partial class MessagesEditChatPhotoArgs
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public IInputChatPhoto Photo { get; set; }

	}

	[TLObject (0xF9A0AA09)]
	public partial class MessagesAddChatUserArgs
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public IInputUser UserId { get; set; }


		[TLProperty (3)]
		public System.UInt32 FwdLimit { get; set; }

	}

	[TLObject (0xE0611F16)]
	public partial class MessagesDeleteChatUserArgs
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public IInputUser UserId { get; set; }

	}

	[TLObject (0x09CB126E)]
	public partial class MessagesCreateChatArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IInputUser> Users { get; set; }


		[TLProperty (2)]
		public System.String Title { get; set; }

	}

	[TLObject (0xEDD4882A)]
	public partial class UpdatesGetStateArgs
	{
	}

	[TLObject (0x0A041495)]
	public partial class UpdatesGetDifferenceArgs
	{

		[TLProperty (1)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (2)]
		public System.UInt32 Date { get; set; }


		[TLProperty (3)]
		public System.UInt32 Qts { get; set; }

	}

	[TLObject (0xEEF579A0)]
	public partial class PhotosUpdateProfilePhotoArgs
	{

		[TLProperty (1)]
		public IInputPhoto Id { get; set; }


		[TLProperty (2)]
		public IInputPhotoCrop Crop { get; set; }

	}

	[TLObject (0xD50F9C88)]
	public partial class PhotosUploadProfilePhotoArgs
	{

		[TLProperty (1)]
		public IInputFile File { get; set; }


		[TLProperty (2)]
		public System.String Caption { get; set; }


		[TLProperty (3)]
		public IInputGeoPoint GeoPoint { get; set; }


		[TLProperty (4)]
		public IInputPhotoCrop Crop { get; set; }

	}

	[TLObject (0x87CF7F2F)]
	public partial class PhotosDeletePhotosArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IInputPhoto> Id { get; set; }

	}

	[TLObject (0xB304A621)]
	public partial class UploadSaveFilePartArgs
	{

		[TLProperty (1)]
		public System.UInt64 FileId { get; set; }


		[TLProperty (2)]
		public System.UInt32 FilePart { get; set; }


		[TLProperty (3)]
		public System.Byte[] Bytes { get; set; }

	}

	[TLObject (0xE3A6CFB5)]
	public partial class UploadGetFileArgs
	{

		[TLProperty (1)]
		public IInputFileLocation Location { get; set; }


		[TLProperty (2)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (3)]
		public System.UInt32 Limit { get; set; }

	}

	[TLObject (0xC4F9186B)]
	public partial class HelpGetConfigArgs
	{
	}

	[TLObject (0x1FB33026)]
	public partial class HelpGetNearestDcArgs
	{
	}

	[TLObject (0xC812AC7E)]
	public partial class HelpGetAppUpdateArgs
	{

		[TLProperty (1)]
		public System.String DeviceModel { get; set; }


		[TLProperty (2)]
		public System.String SystemVersion { get; set; }


		[TLProperty (3)]
		public System.String AppVersion { get; set; }


		[TLProperty (4)]
		public System.String LangCode { get; set; }

	}

	[TLObject (0x6F02F748)]
	public partial class HelpSaveAppLogArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IInputAppEvent> Events { get; set; }

	}

	[TLObject (0xA4A95186)]
	public partial class HelpGetInviteTextArgs
	{

		[TLProperty (1)]
		public System.String LangCode { get; set; }

	}

	[TLObject (0x91CD32A8)]
	public partial class PhotosGetUserPhotosArgs
	{

		[TLProperty (1)]
		public IInputUser UserId { get; set; }


		[TLProperty (2)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (3)]
		public System.UInt64 MaxId { get; set; }


		[TLProperty (4)]
		public System.UInt32 Limit { get; set; }

	}

	[TLObject (0x33963BF9)]
	public partial class MessagesForwardMessageArgs
	{

		[TLProperty (1)]
		public IInputPeer Peer { get; set; }


		[TLProperty (2)]
		public System.UInt32 Id { get; set; }


		[TLProperty (3)]
		public System.UInt64 RandomId { get; set; }

	}

	[TLObject (0xBF73F4DA)]
	public partial class MessagesSendBroadcastArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IInputUser> Contacts { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<System.UInt64> RandomId { get; set; }


		[TLProperty (3)]
		public System.String Message { get; set; }


		[TLProperty (4)]
		public IInputMedia Media { get; set; }

	}

	[TLObject (0x26CF8950)]
	public partial class MessagesGetDhConfigArgs
	{

		[TLProperty (1)]
		public System.UInt32 Version { get; set; }


		[TLProperty (2)]
		public System.UInt32 RandomLength { get; set; }

	}

	[TLObject (0xF64DAF43)]
	public partial class MessagesRequestEncryptionArgs
	{

		[TLProperty (1)]
		public IInputUser UserId { get; set; }


		[TLProperty (2)]
		public System.UInt32 RandomId { get; set; }


		[TLProperty (3)]
		public System.Byte[] GA { get; set; }

	}

	[TLObject (0x3DBC0415)]
	public partial class MessagesAcceptEncryptionArgs
	{

		[TLProperty (1)]
		public IInputEncryptedChat Peer { get; set; }


		[TLProperty (2)]
		public System.Byte[] GB { get; set; }


		[TLProperty (3)]
		public System.UInt64 KeyFingerprint { get; set; }

	}

	[TLObject (0xEDD923C5)]
	public partial class MessagesDiscardEncryptionArgs
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }

	}

	[TLObject (0x791451ED)]
	public partial class MessagesSetEncryptedTypingArgs
	{

		[TLProperty (1)]
		public IInputEncryptedChat Peer { get; set; }


		[TLProperty (2)]
		public System.Boolean Typing { get; set; }

	}

	[TLObject (0x7F4B690A)]
	public partial class MessagesReadEncryptedHistoryArgs
	{

		[TLProperty (1)]
		public IInputEncryptedChat Peer { get; set; }


		[TLProperty (2)]
		public System.UInt32 MaxDate { get; set; }

	}

	[TLObject (0xA9776773)]
	public partial class MessagesSendEncryptedArgs
	{

		[TLProperty (1)]
		public IInputEncryptedChat Peer { get; set; }


		[TLProperty (2)]
		public System.UInt64 RandomId { get; set; }


		[TLProperty (3)]
		public System.Byte[] Data { get; set; }

	}

	[TLObject (0x9A901B66)]
	public partial class MessagesSendEncryptedFileArgs
	{

		[TLProperty (1)]
		public IInputEncryptedChat Peer { get; set; }


		[TLProperty (2)]
		public System.UInt64 RandomId { get; set; }


		[TLProperty (3)]
		public System.Byte[] Data { get; set; }


		[TLProperty (4)]
		public IInputEncryptedFile File { get; set; }

	}

	[TLObject (0x32D439A4)]
	public partial class MessagesSendEncryptedServiceArgs
	{

		[TLProperty (1)]
		public IInputEncryptedChat Peer { get; set; }


		[TLProperty (2)]
		public System.UInt64 RandomId { get; set; }


		[TLProperty (3)]
		public System.Byte[] Data { get; set; }

	}

	[TLObject (0x55A5BB66)]
	public partial class MessagesReceivedQueueArgs
	{

		[TLProperty (1)]
		public System.UInt32 MaxQts { get; set; }

	}

	[TLObject (0xDE7B673D)]
	public partial class UploadSaveBigFilePartArgs
	{

		[TLProperty (1)]
		public System.UInt64 FileId { get; set; }


		[TLProperty (2)]
		public System.UInt32 FilePart { get; set; }


		[TLProperty (3)]
		public System.UInt32 FileTotalParts { get; set; }


		[TLProperty (4)]
		public System.Byte[] Bytes { get; set; }

	}

	[TLObject (0x69796DE9)]
	public partial class InitConnectionArgs
	{

		[TLProperty (1)]
		public System.UInt32 ApiId { get; set; }


		[TLProperty (2)]
		public System.String DeviceModel { get; set; }


		[TLProperty (3)]
		public System.String SystemVersion { get; set; }


		[TLProperty (4)]
		public System.String AppVersion { get; set; }


		[TLProperty (5)]
		public System.String LangCode { get; set; }


		[TLProperty (6)]
		public System.Object Query { get; set; }

	}

	[TLObject (0x9CDF08CD)]
	public partial class HelpGetSupportArgs
	{
	}

	[TLObject (0x36A73F77)]
	public partial class MessagesReadMessageContentsArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.UInt32> Id { get; set; }

	}

	[TLObject (0x2714D86C)]
	public partial class AccountCheckUsernameArgs
	{

		[TLProperty (1)]
		public System.String Username { get; set; }

	}

	[TLObject (0x3E0BDD7C)]
	public partial class AccountUpdateUsernameArgs
	{

		[TLProperty (1)]
		public System.String Username { get; set; }

	}

	[TLObject (0x11F812D8)]
	public partial class ContactsSearchArgs
	{

		[TLProperty (1)]
		public System.String Q { get; set; }


		[TLProperty (2)]
		public System.UInt32 Limit { get; set; }

	}

	[TLObject (0xDADBC950)]
	public partial class AccountGetPrivacyArgs
	{

		[TLProperty (1)]
		public IInputPrivacyKey Key { get; set; }

	}

	[TLObject (0xC9F81CE8)]
	public partial class AccountSetPrivacyArgs
	{

		[TLProperty (1)]
		public IInputPrivacyKey Key { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IInputPrivacyRule> Rules { get; set; }

	}

	[TLObject (0x418D4E0B)]
	public partial class AccountDeleteAccountArgs
	{

		[TLProperty (1)]
		public System.String Reason { get; set; }

	}

	[TLObject (0x08FC711D)]
	public partial class AccountGetAccountTTLArgs
	{
	}

	[TLObject (0x2442485E)]
	public partial class AccountSetAccountTTLArgs
	{

		[TLProperty (1)]
		public IAccountDaysTTL Ttl { get; set; }

	}

	[TLObject (0xDA9B0D0D)]
	public partial class InvokeWithLayerArgs
	{

		[TLProperty (1)]
		public System.UInt32 Layer { get; set; }


		[TLProperty (2)]
		public System.Object Query { get; set; }

	}

	[TLObject (0xF93CCBA3)]
	public partial class ContactsResolveUsernameArgs
	{

		[TLProperty (1)]
		public System.String Username { get; set; }

	}

	[TLObject (0x08E57DEB)]
	public partial class AccountSendChangePhoneCodeArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue AllowFlashcall { get; set; }


		[TLProperty (3)]
		public System.String PhoneNumber { get; set; }


		[TLProperty (4, 0, true)]
		public System.Boolean CurrentNumber { get; set; }

	}

	[TLObject (0x70C32EDB)]
	public partial class AccountChangePhoneArgs
	{

		[TLProperty (1)]
		public System.String PhoneNumber { get; set; }


		[TLProperty (2)]
		public System.String PhoneCodeHash { get; set; }


		[TLProperty (3)]
		public System.String PhoneCode { get; set; }

	}

	[TLObject (0xAE22E045)]
	public partial class MessagesGetStickersArgs
	{

		[TLProperty (1)]
		public System.String Emoticon { get; set; }


		[TLProperty (2)]
		public System.String Hash { get; set; }

	}

	[TLObject (0x1C9618B1)]
	public partial class MessagesGetAllStickersArgs
	{

		[TLProperty (1)]
		public System.UInt32 Hash { get; set; }

	}

	[TLObject (0x38DF3532)]
	public partial class AccountUpdateDeviceLockedArgs
	{

		[TLProperty (1)]
		public System.UInt32 Period { get; set; }

	}

	[TLObject (0x67A3FF2C)]
	public partial class AuthImportBotAuthorizationArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public System.UInt32 ApiId { get; set; }


		[TLProperty (3)]
		public System.String ApiHash { get; set; }


		[TLProperty (4)]
		public System.String BotAuthToken { get; set; }

	}

	[TLObject (0x25223E24)]
	public partial class MessagesGetWebPagePreviewArgs
	{

		[TLProperty (1)]
		public System.String Message { get; set; }

	}

	[TLObject (0xE320C158)]
	public partial class AccountGetAuthorizationsArgs
	{
	}

	[TLObject (0xDF77F3BC)]
	public partial class AccountResetAuthorizationArgs
	{

		[TLProperty (1)]
		public System.UInt64 Hash { get; set; }

	}

	[TLObject (0x548A30F5)]
	public partial class AccountGetPasswordArgs
	{
	}

	[TLObject (0xBC8D11BB)]
	public partial class AccountGetPasswordSettingsArgs
	{

		[TLProperty (1)]
		public System.Byte[] CurrentPasswordHash { get; set; }

	}

	[TLObject (0xFA7C4B86)]
	public partial class AccountUpdatePasswordSettingsArgs
	{

		[TLProperty (1)]
		public System.Byte[] CurrentPasswordHash { get; set; }


		[TLProperty (2)]
		public IAccountPasswordInputSettings NewSettings { get; set; }

	}

	[TLObject (0x0A63011E)]
	public partial class AuthCheckPasswordArgs
	{

		[TLProperty (1)]
		public System.Byte[] PasswordHash { get; set; }

	}

	[TLObject (0xD897BC66)]
	public partial class AuthRequestPasswordRecoveryArgs
	{
	}

	[TLObject (0x4EA56E92)]
	public partial class AuthRecoverPasswordArgs
	{

		[TLProperty (1)]
		public System.String Code { get; set; }

	}

	[TLObject (0xBF9459B7)]
	public partial class InvokeWithoutUpdatesArgs
	{

		[TLProperty (1)]
		public System.Object Query { get; set; }

	}

	[TLObject (0x7D885289)]
	public partial class MessagesExportChatInviteArgs
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }

	}

	[TLObject (0x3EADB1BB)]
	public partial class MessagesCheckChatInviteArgs
	{

		[TLProperty (1)]
		public System.String Hash { get; set; }

	}

	[TLObject (0x6C50051C)]
	public partial class MessagesImportChatInviteArgs
	{

		[TLProperty (1)]
		public System.String Hash { get; set; }

	}

	[TLObject (0x2619A90E)]
	public partial class MessagesGetStickerSetArgs
	{

		[TLProperty (1)]
		public IInputStickerSet Stickerset { get; set; }

	}

	[TLObject (0x7B30C3A6)]
	public partial class MessagesInstallStickerSetArgs
	{

		[TLProperty (1)]
		public IInputStickerSet Stickerset { get; set; }


		[TLProperty (2)]
		public System.Boolean Disabled { get; set; }

	}

	[TLObject (0xF96E55DE)]
	public partial class MessagesUninstallStickerSetArgs
	{

		[TLProperty (1)]
		public IInputStickerSet Stickerset { get; set; }

	}

	[TLObject (0xE6DF7378)]
	public partial class MessagesStartBotArgs
	{

		[TLProperty (1)]
		public IInputUser Bot { get; set; }


		[TLProperty (2)]
		public IInputPeer Peer { get; set; }


		[TLProperty (3)]
		public System.UInt64 RandomId { get; set; }


		[TLProperty (4)]
		public System.String StartParam { get; set; }

	}

	[TLObject (0x5BAB7FB2)]
	public partial class HelpGetAppChangelogArgs
	{

		[TLProperty (1)]
		public System.String DeviceModel { get; set; }


		[TLProperty (2)]
		public System.String SystemVersion { get; set; }


		[TLProperty (3)]
		public System.String AppVersion { get; set; }


		[TLProperty (4)]
		public System.String LangCode { get; set; }

	}

	[TLObject (0xC4C8A55D)]
	public partial class MessagesGetMessagesViewsArgs
	{

		[TLProperty (1)]
		public IInputPeer Peer { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<System.UInt32> Id { get; set; }


		[TLProperty (3)]
		public System.Boolean Increment { get; set; }

	}

	[TLObject (0xA9D3D249)]
	public partial class ChannelsGetDialogsArgs
	{

		[TLProperty (1)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (2)]
		public System.UInt32 Limit { get; set; }

	}

	[TLObject (0x8F494BB2)]
	public partial class ChannelsGetImportantHistoryArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public System.UInt32 OffsetId { get; set; }


		[TLProperty (3)]
		public System.UInt32 OffsetDate { get; set; }


		[TLProperty (4)]
		public System.UInt32 AddOffset { get; set; }


		[TLProperty (5)]
		public System.UInt32 Limit { get; set; }


		[TLProperty (6)]
		public System.UInt32 MaxId { get; set; }


		[TLProperty (7)]
		public System.UInt32 MinId { get; set; }

	}

	[TLObject (0xCC104937)]
	public partial class ChannelsReadHistoryArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public System.UInt32 MaxId { get; set; }

	}

	[TLObject (0x84C1FD4E)]
	public partial class ChannelsDeleteMessagesArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<System.UInt32> Id { get; set; }

	}

	[TLObject (0xD10DD71B)]
	public partial class ChannelsDeleteUserHistoryArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public IInputUser UserId { get; set; }

	}

	[TLObject (0xFE087810)]
	public partial class ChannelsReportSpamArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public IInputUser UserId { get; set; }


		[TLProperty (3)]
		public System.Collections.Generic.List<System.UInt32> Id { get; set; }

	}

	[TLObject (0x93D7B347)]
	public partial class ChannelsGetMessagesArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<System.UInt32> Id { get; set; }

	}

	[TLObject (0x24D98F92)]
	public partial class ChannelsGetParticipantsArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public IChannelParticipantsFilter Filter { get; set; }


		[TLProperty (3)]
		public System.UInt32 Offset { get; set; }


		[TLProperty (4)]
		public System.UInt32 Limit { get; set; }

	}

	[TLObject (0x546DD7A6)]
	public partial class ChannelsGetParticipantArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public IInputUser UserId { get; set; }

	}

	[TLObject (0x0A7F6BBB)]
	public partial class ChannelsGetChannelsArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<IInputChannel> Id { get; set; }

	}

	[TLObject (0x08736A09)]
	public partial class ChannelsGetFullChannelArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }

	}

	[TLObject (0xF4893D7F)]
	public partial class ChannelsCreateChannelArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Broadcast { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue Megagroup { get; set; }


		[TLProperty (4)]
		public System.String Title { get; set; }


		[TLProperty (5)]
		public System.String About { get; set; }

	}

	[TLObject (0x13E27F1E)]
	public partial class ChannelsEditAboutArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public System.String About { get; set; }

	}

	[TLObject (0xEB7611D0)]
	public partial class ChannelsEditAdminArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public IInputUser UserId { get; set; }


		[TLProperty (3)]
		public IChannelParticipantRole Role { get; set; }

	}

	[TLObject (0x566DECD0)]
	public partial class ChannelsEditTitleArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public System.String Title { get; set; }

	}

	[TLObject (0xF12E57C9)]
	public partial class ChannelsEditPhotoArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public IInputChatPhoto Photo { get; set; }

	}

	[TLObject (0xAAA29E88)]
	public partial class ChannelsToggleCommentsArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public System.Boolean Enabled { get; set; }

	}

	[TLObject (0x10E6BD2C)]
	public partial class ChannelsCheckUsernameArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public System.String Username { get; set; }

	}

	[TLObject (0x3514B3DE)]
	public partial class ChannelsUpdateUsernameArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public System.String Username { get; set; }

	}

	[TLObject (0x24B524C5)]
	public partial class ChannelsJoinChannelArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }

	}

	[TLObject (0xF836AA95)]
	public partial class ChannelsLeaveChannelArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }

	}

	[TLObject (0x199F3A6C)]
	public partial class ChannelsInviteToChannelArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public System.Collections.Generic.List<IInputUser> Users { get; set; }

	}

	[TLObject (0xA672DE14)]
	public partial class ChannelsKickFromChannelArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public IInputUser UserId { get; set; }


		[TLProperty (3)]
		public System.Boolean Kicked { get; set; }

	}

	[TLObject (0xC7560885)]
	public partial class ChannelsExportInviteArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }

	}

	[TLObject (0xC0111FE3)]
	public partial class ChannelsDeleteChannelArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }

	}

	[TLObject (0xBB32D7C0)]
	public partial class UpdatesGetChannelDifferenceArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public IChannelMessagesFilter Filter { get; set; }


		[TLProperty (3)]
		public System.UInt32 Pts { get; set; }


		[TLProperty (4)]
		public System.UInt32 Limit { get; set; }

	}

	[TLObject (0xEC8BD9E1)]
	public partial class MessagesToggleChatAdminsArgs
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public System.Boolean Enabled { get; set; }

	}

	[TLObject (0xA9E69F2E)]
	public partial class MessagesEditChatAdminArgs
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }


		[TLProperty (2)]
		public IInputUser UserId { get; set; }


		[TLProperty (3)]
		public System.Boolean IsAdmin { get; set; }

	}

	[TLObject (0x15A3B8E3)]
	public partial class MessagesMigrateChatArgs
	{

		[TLProperty (1)]
		public System.UInt32 ChatId { get; set; }

	}

	[TLObject (0x9E3CACB0)]
	public partial class MessagesSearchGlobalArgs
	{

		[TLProperty (1)]
		public System.String Q { get; set; }


		[TLProperty (2)]
		public System.UInt32 OffsetDate { get; set; }


		[TLProperty (3)]
		public IInputPeer OffsetPeer { get; set; }


		[TLProperty (4)]
		public System.UInt32 OffsetId { get; set; }


		[TLProperty (5)]
		public System.UInt32 Limit { get; set; }

	}

	[TLObject (0x37D78F83)]
	public partial class HelpGetTermsOfServiceArgs
	{

		[TLProperty (1)]
		public System.String LangCode { get; set; }

	}

	[TLObject (0x9FCFBC30)]
	public partial class MessagesReorderStickerSetsArgs
	{

		[TLProperty (1)]
		public System.Collections.Generic.List<System.UInt64> Order { get; set; }

	}

	[TLObject (0x338E2464)]
	public partial class MessagesGetDocumentByHashArgs
	{

		[TLProperty (1)]
		public System.Byte[] Sha256 { get; set; }


		[TLProperty (2)]
		public System.UInt32 Size { get; set; }


		[TLProperty (3)]
		public System.String MimeType { get; set; }

	}

	[TLObject (0xBF9A776B)]
	public partial class MessagesSearchGifsArgs
	{

		[TLProperty (1)]
		public System.String Q { get; set; }


		[TLProperty (2)]
		public System.UInt32 Offset { get; set; }

	}

	[TLObject (0x83BF3D52)]
	public partial class MessagesGetSavedGifsArgs
	{

		[TLProperty (1)]
		public System.UInt32 Hash { get; set; }

	}

	[TLObject (0x327A30CB)]
	public partial class MessagesSaveGifArgs
	{

		[TLProperty (1)]
		public IInputDocument Id { get; set; }


		[TLProperty (2)]
		public System.Boolean Unsave { get; set; }

	}

	[TLObject (0x514E999D)]
	public partial class MessagesGetInlineBotResultsArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2)]
		public IInputUser Bot { get; set; }


		[TLProperty (3)]
		public IInputPeer Peer { get; set; }


		[TLProperty (4, 0, true)]
		public IInputGeoPoint GeoPoint { get; set; }


		[TLProperty (5)]
		public System.String Query { get; set; }


		[TLProperty (6)]
		public System.String Offset { get; set; }

	}

	[TLObject (0xEB5EA206)]
	public partial class MessagesSetInlineBotResultsArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Gallery { get; set; }


		[TLProperty (3, 1, true)]
		public ITrue Private { get; set; }


		[TLProperty (4)]
		public System.UInt64 QueryId { get; set; }


		[TLProperty (5)]
		public System.Collections.Generic.List<IInputBotInlineResult> Results { get; set; }


		[TLProperty (6)]
		public System.UInt32 CacheTime { get; set; }


		[TLProperty (7, 2, true)]
		public System.String NextOffset { get; set; }


		[TLProperty (8, 3, true)]
		public IInlineBotSwitchPM SwitchPm { get; set; }

	}

	[TLObject (0xB16E06FE)]
	public partial class MessagesSendInlineBotResultArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 4, true)]
		public ITrue Broadcast { get; set; }


		[TLProperty (3, 5, true)]
		public ITrue Silent { get; set; }


		[TLProperty (4, 6, true)]
		public ITrue Background { get; set; }


		[TLProperty (5)]
		public IInputPeer Peer { get; set; }


		[TLProperty (6, 0, true)]
		public System.UInt32 ReplyToMsgId { get; set; }


		[TLProperty (7)]
		public System.UInt64 RandomId { get; set; }


		[TLProperty (8)]
		public System.UInt64 QueryId { get; set; }


		[TLProperty (9)]
		public System.String Id { get; set; }

	}

	[TLObject (0x49609307)]
	public partial class ChannelsToggleInvitesArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public System.Boolean Enabled { get; set; }

	}

	[TLObject (0xC846D22D)]
	public partial class ChannelsExportMessageLinkArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public System.UInt32 Id { get; set; }

	}

	[TLObject (0x1F69B606)]
	public partial class ChannelsToggleSignaturesArgs
	{

		[TLProperty (1)]
		public IInputChannel Channel { get; set; }


		[TLProperty (2)]
		public System.Boolean Enabled { get; set; }

	}

	[TLObject (0xA72DED52)]
	public partial class ChannelsUpdatePinnedMessageArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 0, true)]
		public ITrue Silent { get; set; }


		[TLProperty (3)]
		public IInputChannel Channel { get; set; }


		[TLProperty (4)]
		public System.UInt32 Id { get; set; }

	}

	[TLObject (0x3EF1A9BF)]
	public partial class AuthResendCodeArgs
	{

		[TLProperty (1)]
		public System.String PhoneNumber { get; set; }


		[TLProperty (2)]
		public System.String PhoneCodeHash { get; set; }

	}

	[TLObject (0x1F040578)]
	public partial class AuthCancelCodeArgs
	{

		[TLProperty (1)]
		public System.String PhoneNumber { get; set; }


		[TLProperty (2)]
		public System.String PhoneCodeHash { get; set; }

	}

	[TLObject (0xFDA68D36)]
	public partial class MessagesGetMessageEditDataArgs
	{

		[TLProperty (1)]
		public IInputPeer Peer { get; set; }


		[TLProperty (2)]
		public System.UInt32 Id { get; set; }

	}

	[TLObject (0xCE91E4CA)]
	public partial class MessagesEditMessageArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 1, true)]
		public ITrue NoWebpage { get; set; }


		[TLProperty (3)]
		public IInputPeer Peer { get; set; }


		[TLProperty (4)]
		public System.UInt32 Id { get; set; }


		[TLProperty (5, 11, true)]
		public System.String Message { get; set; }


		[TLProperty (6, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }


		[TLProperty (7, 3, true)]
		public System.Collections.Generic.List<IMessageEntity> Entities { get; set; }

	}

	[TLObject (0x130C2C85)]
	public partial class MessagesEditInlineBotMessageArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 1, true)]
		public ITrue NoWebpage { get; set; }


		[TLProperty (3)]
		public IInputBotInlineMessageID Id { get; set; }


		[TLProperty (4, 11, true)]
		public System.String Message { get; set; }


		[TLProperty (5, 2, true)]
		public IReplyMarkup ReplyMarkup { get; set; }


		[TLProperty (6, 3, true)]
		public System.Collections.Generic.List<IMessageEntity> Entities { get; set; }

	}

	[TLObject (0xA6E94F04)]
	public partial class MessagesGetBotCallbackAnswerArgs
	{

		[TLProperty (1)]
		public IInputPeer Peer { get; set; }


		[TLProperty (2)]
		public System.UInt32 MsgId { get; set; }


		[TLProperty (3)]
		public System.Byte[] Data { get; set; }

	}

	[TLObject (0x481C591A)]
	public partial class MessagesSetBotCallbackAnswerArgs
	{

		[TLProperty (1)]
		public System.UInt32 Flags { get; set; }


		[TLProperty (2, 1, true)]
		public ITrue Alert { get; set; }


		[TLProperty (3)]
		public System.UInt64 QueryId { get; set; }


		[TLProperty (4, 0, true)]
		public System.String Message { get; set; }

	}


	// TL types.

	[TLType (typeof(True))]
	public partial interface ITrue
	{
	}

	[TLType (typeof(Error))]
	public partial interface IError
	{
	}

	[TLType (typeof(Null))]
	public partial interface INull
	{
	}

	[TLType (typeof(InputPeerEmpty), typeof(InputPeerSelf), typeof(InputPeerChat), typeof(InputPeerUser), typeof(InputPeerChannel))]
	public partial interface IInputPeer
	{
	}

	[TLType (typeof(InputUserEmpty), typeof(InputUserSelf), typeof(InputUser))]
	public partial interface IInputUser
	{
	}

	[TLType (typeof(InputPhoneContact))]
	public partial interface IInputContact
	{
	}

	[TLType (typeof(InputFile), typeof(InputFileBig))]
	public partial interface IInputFile
	{
	}

	[TLType (typeof(InputMediaEmpty), typeof(InputMediaUploadedPhoto), typeof(InputMediaPhoto), typeof(InputMediaGeoPoint), typeof(InputMediaContact), typeof(InputMediaUploadedDocument), typeof(InputMediaUploadedThumbDocument), typeof(InputMediaDocument), typeof(InputMediaVenue), typeof(InputMediaGifExternal))]
	public partial interface IInputMedia
	{
	}

	[TLType (typeof(InputPhotoEmpty), typeof(InputPhoto))]
	public partial interface IInputPhoto
	{
	}

	[TLType (typeof(InputGeoPointEmpty), typeof(InputGeoPoint))]
	public partial interface IInputGeoPoint
	{
	}

	[TLType (typeof(InputChatPhotoEmpty), typeof(InputChatUploadedPhoto), typeof(InputChatPhoto))]
	public partial interface IInputChatPhoto
	{
	}

	[TLType (typeof(InputPhotoCropAuto), typeof(InputPhotoCrop))]
	public partial interface IInputPhotoCrop
	{
	}

	[TLType (typeof(InputFileLocation), typeof(InputEncryptedFileLocation), typeof(InputDocumentFileLocation))]
	public partial interface IInputFileLocation
	{
	}

	[TLType (typeof(InputAppEvent))]
	public partial interface IInputAppEvent
	{
	}

	[TLType (typeof(PeerUser), typeof(PeerChat), typeof(PeerChannel))]
	public partial interface IPeer
	{
	}

	[TLType (typeof(StorageFileUnknown), typeof(StorageFileJpeg), typeof(StorageFileGif), typeof(StorageFilePng), typeof(StorageFilePdf), typeof(StorageFileMp3), typeof(StorageFileMov), typeof(StorageFilePartial), typeof(StorageFileMp4), typeof(StorageFileWebp))]
	public partial interface IStorageFileType
	{
	}

	[TLType (typeof(FileLocationUnavailable), typeof(FileLocation))]
	public partial interface IFileLocation
	{
	}

	[TLType (typeof(UserEmpty), typeof(User))]
	public partial interface IUser
	{
	}

	[TLType (typeof(UserProfilePhotoEmpty), typeof(UserProfilePhoto))]
	public partial interface IUserProfilePhoto
	{
	}

	[TLType (typeof(UserStatusEmpty), typeof(UserStatusOnline), typeof(UserStatusOffline), typeof(UserStatusRecently), typeof(UserStatusLastWeek), typeof(UserStatusLastMonth))]
	public partial interface IUserStatus
	{
	}

	[TLType (typeof(ChatEmpty), typeof(Chat), typeof(ChatForbidden), typeof(Channel), typeof(ChannelForbidden))]
	public partial interface IChat
	{
	}

	[TLType (typeof(ChatPhotoEmpty), typeof(ChatPhoto))]
	public partial interface IChatPhoto
	{
	}

	[TLType (typeof(InputChannelEmpty), typeof(InputChannel))]
	public partial interface IInputChannel
	{
	}

	[TLType (typeof(ChatFull), typeof(ChannelFull))]
	public partial interface IChatFull
	{
	}

	[TLType (typeof(ChatParticipantsForbidden), typeof(ChatParticipants))]
	public partial interface IChatParticipants
	{
	}

	[TLType (typeof(PhotoEmpty), typeof(Photo))]
	public partial interface IPhoto
	{
	}

	[TLType (typeof(PeerNotifySettingsEmpty), typeof(PeerNotifySettings))]
	public partial interface IPeerNotifySettings
	{
	}

	[TLType (typeof(ChatInviteEmpty), typeof(ChatInviteExported))]
	public partial interface IExportedChatInvite
	{
	}

	[TLType (typeof(ChatParticipant), typeof(ChatParticipantCreator), typeof(ChatParticipantAdmin))]
	public partial interface IChatParticipant
	{
	}

	[TLType (typeof(MessageEmpty), typeof(Message), typeof(MessageService))]
	public partial interface IMessage
	{
	}

	[TLType (typeof(MessageFwdHeader))]
	public partial interface IMessageFwdHeader
	{
	}

	[TLType (typeof(MessageMediaEmpty), typeof(MessageMediaPhoto), typeof(MessageMediaGeo), typeof(MessageMediaContact), typeof(MessageMediaUnsupported), typeof(MessageMediaDocument), typeof(MessageMediaWebPage), typeof(MessageMediaVenue))]
	public partial interface IMessageMedia
	{
	}

	[TLType (typeof(ReplyKeyboardHide), typeof(ReplyKeyboardForceReply), typeof(ReplyKeyboardMarkup), typeof(ReplyInlineMarkup))]
	public partial interface IReplyMarkup
	{
	}

	[TLType (typeof(MessageActionEmpty), typeof(MessageActionChatCreate), typeof(MessageActionChatEditTitle), typeof(MessageActionChatEditPhoto), typeof(MessageActionChatDeletePhoto), typeof(MessageActionChatAddUser), typeof(MessageActionChatDeleteUser), typeof(MessageActionChatJoinedByLink), typeof(MessageActionChannelCreate), typeof(MessageActionChatMigrateTo), typeof(MessageActionChannelMigrateFrom), typeof(MessageActionPinMessage))]
	public partial interface IMessageAction
	{
	}

	[TLType (typeof(GeoPointEmpty), typeof(GeoPoint))]
	public partial interface IGeoPoint
	{
	}

	[TLType (typeof(Dialog), typeof(DialogChannel))]
	public partial interface IDialog
	{
	}

	[TLType (typeof(PhotoSizeEmpty), typeof(PhotoSize), typeof(PhotoCachedSize))]
	public partial interface IPhotoSize
	{
	}

	[TLType (typeof(AuthCheckedPhone))]
	public partial interface IAuthCheckedPhone
	{
	}

	[TLType (typeof(AuthSentCode))]
	public partial interface IAuthSentCode
	{
	}

	[TLType (typeof(AuthSentCodeTypeApp), typeof(AuthSentCodeTypeSms), typeof(AuthSentCodeTypeCall), typeof(AuthSentCodeTypeFlashCall))]
	public partial interface IAuthSentCodeType
	{
	}

	[TLType (typeof(AuthCodeTypeSms), typeof(AuthCodeTypeCall), typeof(AuthCodeTypeFlashCall))]
	public partial interface IAuthCodeType
	{
	}

	[TLType (typeof(AuthAuthorization))]
	public partial interface IAuthAuthorization
	{
	}

	[TLType (typeof(AuthExportedAuthorization))]
	public partial interface IAuthExportedAuthorization
	{
	}

	[TLType (typeof(InputNotifyPeer), typeof(InputNotifyUsers), typeof(InputNotifyChats), typeof(InputNotifyAll))]
	public partial interface IInputNotifyPeer
	{
	}

	[TLType (typeof(InputPeerNotifyEventsEmpty), typeof(InputPeerNotifyEventsAll))]
	public partial interface IInputPeerNotifyEvents
	{
	}

	[TLType (typeof(InputPeerNotifySettings))]
	public partial interface IInputPeerNotifySettings
	{
	}

	[TLType (typeof(PeerNotifyEventsEmpty), typeof(PeerNotifyEventsAll))]
	public partial interface IPeerNotifyEvents
	{
	}

	[TLType (typeof(PeerSettings))]
	public partial interface IPeerSettings
	{
	}

	[TLType (typeof(WallPaper), typeof(WallPaperSolid))]
	public partial interface IWallPaper
	{
	}

	[TLType (typeof(InputReportReasonSpam), typeof(InputReportReasonViolence), typeof(InputReportReasonPornography), typeof(InputReportReasonOther))]
	public partial interface IReportReason
	{
	}

	[TLType (typeof(UserFull))]
	public partial interface IUserFull
	{
	}

	[TLType (typeof(ContactsLink))]
	public partial interface IContactsLink
	{
	}

	[TLType (typeof(BotInfo))]
	public partial interface IBotInfo
	{
	}

	[TLType (typeof(Contact))]
	public partial interface IContact
	{
	}

	[TLType (typeof(ImportedContact))]
	public partial interface IImportedContact
	{
	}

	[TLType (typeof(ContactBlocked))]
	public partial interface IContactBlocked
	{
	}

	[TLType (typeof(ContactStatus))]
	public partial interface IContactStatus
	{
	}

	[TLType (typeof(ContactLinkUnknown), typeof(ContactLinkNone), typeof(ContactLinkHasPhone), typeof(ContactLinkContact))]
	public partial interface IContactLink
	{
	}

	[TLType (typeof(ContactsContactsNotModified), typeof(ContactsContacts))]
	public partial interface IContactsContacts
	{
	}

	[TLType (typeof(ContactsImportedContacts))]
	public partial interface IContactsImportedContacts
	{
	}

	[TLType (typeof(ContactsBlocked), typeof(ContactsBlockedSlice))]
	public partial interface IContactsBlocked
	{
	}

	[TLType (typeof(MessagesDialogs), typeof(MessagesDialogsSlice))]
	public partial interface IMessagesDialogs
	{
	}

	[TLType (typeof(MessagesMessages), typeof(MessagesMessagesSlice), typeof(MessagesChannelMessages))]
	public partial interface IMessagesMessages
	{
	}

	[TLType (typeof(MessagesChats))]
	public partial interface IMessagesChats
	{
	}

	[TLType (typeof(MessagesChatFull))]
	public partial interface IMessagesChatFull
	{
	}

	[TLType (typeof(MessagesAffectedHistory))]
	public partial interface IMessagesAffectedHistory
	{
	}

	[TLType (typeof(InputMessagesFilterEmpty), typeof(InputMessagesFilterPhotos), typeof(InputMessagesFilterVideo), typeof(InputMessagesFilterPhotoVideo), typeof(InputMessagesFilterPhotoVideoDocuments), typeof(InputMessagesFilterDocument), typeof(InputMessagesFilterUrl), typeof(InputMessagesFilterGif), typeof(InputMessagesFilterVoice), typeof(InputMessagesFilterMusic))]
	public partial interface IMessagesFilter
	{
	}

	[TLType (typeof(UpdateNewMessage), typeof(UpdateMessageID), typeof(UpdateDeleteMessages), typeof(UpdateUserTyping), typeof(UpdateChatUserTyping), typeof(UpdateChatParticipants), typeof(UpdateUserStatus), typeof(UpdateUserName), typeof(UpdateUserPhoto), typeof(UpdateContactRegistered), typeof(UpdateContactLink), typeof(UpdateNewAuthorization), typeof(UpdateNewEncryptedMessage), typeof(UpdateEncryptedChatTyping), typeof(UpdateEncryption), typeof(UpdateEncryptedMessagesRead), typeof(UpdateChatParticipantAdd), typeof(UpdateChatParticipantDelete), typeof(UpdateDcOptions), typeof(UpdateUserBlocked), typeof(UpdateNotifySettings), typeof(UpdateServiceNotification), typeof(UpdatePrivacy), typeof(UpdateUserPhone), typeof(UpdateReadHistoryInbox), typeof(UpdateReadHistoryOutbox), typeof(UpdateWebPage), typeof(UpdateReadMessagesContents), typeof(UpdateChannelTooLong), typeof(UpdateChannel), typeof(UpdateChannelGroup), typeof(UpdateNewChannelMessage), typeof(UpdateReadChannelInbox), typeof(UpdateDeleteChannelMessages), typeof(UpdateChannelMessageViews), typeof(UpdateChatAdmins), typeof(UpdateChatParticipantAdmin), typeof(UpdateNewStickerSet), typeof(UpdateStickerSetsOrder), typeof(UpdateStickerSets), typeof(UpdateSavedGifs), typeof(UpdateBotInlineQuery), typeof(UpdateBotInlineSend), typeof(UpdateEditChannelMessage), typeof(UpdateChannelPinnedMessage), typeof(UpdateBotCallbackQuery), typeof(UpdateEditMessage), typeof(UpdateInlineBotCallbackQuery))]
	public partial interface IUpdate
	{
	}

	[TLType (typeof(SendMessageTypingAction), typeof(SendMessageCancelAction), typeof(SendMessageRecordVideoAction), typeof(SendMessageUploadVideoAction), typeof(SendMessageRecordAudioAction), typeof(SendMessageUploadAudioAction), typeof(SendMessageUploadPhotoAction), typeof(SendMessageUploadDocumentAction), typeof(SendMessageGeoLocationAction), typeof(SendMessageChooseContactAction))]
	public partial interface ISendMessageAction
	{
	}

	[TLType (typeof(UpdatesState))]
	public partial interface IUpdatesState
	{
	}

	[TLType (typeof(UpdatesDifferenceEmpty), typeof(UpdatesDifference), typeof(UpdatesDifferenceSlice))]
	public partial interface IUpdatesDifference
	{
	}

	[TLType (typeof(UpdatesTooLong), typeof(UpdateShortMessage), typeof(UpdateShortChatMessage), typeof(UpdateShort), typeof(UpdatesCombined), typeof(Updates), typeof(UpdateShortSentMessage))]
	public partial interface IUpdates
	{
	}

	[TLType (typeof(PhotosPhotos), typeof(PhotosPhotosSlice))]
	public partial interface IPhotosPhotos
	{
	}

	[TLType (typeof(PhotosPhoto))]
	public partial interface IPhotosPhoto
	{
	}

	[TLType (typeof(UploadFile))]
	public partial interface IUploadFile
	{
	}

	[TLType (typeof(DcOption))]
	public partial interface IDcOption
	{
	}

	[TLType (typeof(Config))]
	public partial interface IConfig
	{
	}

	[TLType (typeof(NearestDc))]
	public partial interface INearestDc
	{
	}

	[TLType (typeof(HelpAppUpdate), typeof(HelpNoAppUpdate))]
	public partial interface IHelpAppUpdate
	{
	}

	[TLType (typeof(HelpInviteText))]
	public partial interface IHelpInviteText
	{
	}

	[TLType (typeof(EncryptedMessage), typeof(EncryptedMessageService))]
	public partial interface IEncryptedMessage
	{
	}

	[TLType (typeof(EncryptedChatEmpty), typeof(EncryptedChatWaiting), typeof(EncryptedChatRequested), typeof(EncryptedChat), typeof(EncryptedChatDiscarded))]
	public partial interface IEncryptedChat
	{
	}

	[TLType (typeof(InputEncryptedChat))]
	public partial interface IInputEncryptedChat
	{
	}

	[TLType (typeof(EncryptedFileEmpty), typeof(EncryptedFile))]
	public partial interface IEncryptedFile
	{
	}

	[TLType (typeof(InputEncryptedFileEmpty), typeof(InputEncryptedFileUploaded), typeof(InputEncryptedFile), typeof(InputEncryptedFileBigUploaded))]
	public partial interface IInputEncryptedFile
	{
	}

	[TLType (typeof(MessagesDhConfigNotModified), typeof(MessagesDhConfig))]
	public partial interface IMessagesDhConfig
	{
	}

	[TLType (typeof(MessagesSentEncryptedMessage), typeof(MessagesSentEncryptedFile))]
	public partial interface IMessagesSentEncryptedMessage
	{
	}

	[TLType (typeof(InputDocumentEmpty), typeof(InputDocument))]
	public partial interface IInputDocument
	{
	}

	[TLType (typeof(DocumentEmpty), typeof(Document))]
	public partial interface IDocument
	{
	}

	[TLType (typeof(HelpSupport))]
	public partial interface IHelpSupport
	{
	}

	[TLType (typeof(NotifyPeer), typeof(NotifyUsers), typeof(NotifyChats), typeof(NotifyAll))]
	public partial interface INotifyPeer
	{
	}

	[TLType (typeof(ContactsFound))]
	public partial interface IContactsFound
	{
	}

	[TLType (typeof(PrivacyKeyStatusTimestamp), typeof(PrivacyKeyChatInvite))]
	public partial interface IPrivacyKey
	{
	}

	[TLType (typeof(InputPrivacyKeyStatusTimestamp), typeof(InputPrivacyKeyChatInvite))]
	public partial interface IInputPrivacyKey
	{
	}

	[TLType (typeof(InputPrivacyValueAllowContacts), typeof(InputPrivacyValueAllowAll), typeof(InputPrivacyValueAllowUsers), typeof(InputPrivacyValueDisallowContacts), typeof(InputPrivacyValueDisallowAll), typeof(InputPrivacyValueDisallowUsers))]
	public partial interface IInputPrivacyRule
	{
	}

	[TLType (typeof(PrivacyValueAllowContacts), typeof(PrivacyValueAllowAll), typeof(PrivacyValueAllowUsers), typeof(PrivacyValueDisallowContacts), typeof(PrivacyValueDisallowAll), typeof(PrivacyValueDisallowUsers))]
	public partial interface IPrivacyRule
	{
	}

	[TLType (typeof(AccountPrivacyRules))]
	public partial interface IAccountPrivacyRules
	{
	}

	[TLType (typeof(AccountDaysTTL))]
	public partial interface IAccountDaysTTL
	{
	}

	[TLType (typeof(DocumentAttributeImageSize), typeof(DocumentAttributeAnimated), typeof(DocumentAttributeSticker), typeof(DocumentAttributeVideo), typeof(DocumentAttributeAudio), typeof(DocumentAttributeFilename))]
	public partial interface IDocumentAttribute
	{
	}

	[TLType (typeof(InputStickerSetEmpty), typeof(InputStickerSetID), typeof(InputStickerSetShortName))]
	public partial interface IInputStickerSet
	{
	}

	[TLType (typeof(MessagesStickersNotModified), typeof(MessagesStickers))]
	public partial interface IMessagesStickers
	{
	}

	[TLType (typeof(StickerPack))]
	public partial interface IStickerPack
	{
	}

	[TLType (typeof(MessagesAllStickersNotModified), typeof(MessagesAllStickers))]
	public partial interface IMessagesAllStickers
	{
	}

	[TLType (typeof(DisabledFeature))]
	public partial interface IDisabledFeature
	{
	}

	[TLType (typeof(MessagesAffectedMessages))]
	public partial interface IMessagesAffectedMessages
	{
	}

	[TLType (typeof(WebPageEmpty), typeof(WebPagePending), typeof(WebPage))]
	public partial interface IWebPage
	{
	}

	[TLType (typeof(Authorization))]
	public partial interface IAuthorization
	{
	}

	[TLType (typeof(AccountAuthorizations))]
	public partial interface IAccountAuthorizations
	{
	}

	[TLType (typeof(AccountNoPassword), typeof(AccountPassword))]
	public partial interface IAccountPassword
	{
	}

	[TLType (typeof(AccountPasswordSettings))]
	public partial interface IAccountPasswordSettings
	{
	}

	[TLType (typeof(AccountPasswordInputSettings))]
	public partial interface IAccountPasswordInputSettings
	{
	}

	[TLType (typeof(AuthPasswordRecovery))]
	public partial interface IAuthPasswordRecovery
	{
	}

	[TLType (typeof(ReceivedNotifyMessage))]
	public partial interface IReceivedNotifyMessage
	{
	}

	[TLType (typeof(ChatInviteAlready), typeof(ChatInvite))]
	public partial interface IChatInvite
	{
	}

	[TLType (typeof(StickerSet))]
	public partial interface IStickerSet
	{
	}

	[TLType (typeof(MessagesStickerSet))]
	public partial interface IMessagesStickerSet
	{
	}

	[TLType (typeof(BotCommand))]
	public partial interface IBotCommand
	{
	}

	[TLType (typeof(KeyboardButton), typeof(KeyboardButtonUrl), typeof(KeyboardButtonCallback), typeof(KeyboardButtonRequestPhone), typeof(KeyboardButtonRequestGeoLocation), typeof(KeyboardButtonSwitchInline))]
	public partial interface IKeyboardButton
	{
	}

	[TLType (typeof(KeyboardButtonRow))]
	public partial interface IKeyboardButtonRow
	{
	}

	[TLType (typeof(HelpAppChangelogEmpty), typeof(HelpAppChangelog))]
	public partial interface IHelpAppChangelog
	{
	}

	[TLType (typeof(MessageEntityUnknown), typeof(MessageEntityMention), typeof(MessageEntityHashtag), typeof(MessageEntityBotCommand), typeof(MessageEntityUrl), typeof(MessageEntityEmail), typeof(MessageEntityBold), typeof(MessageEntityItalic), typeof(MessageEntityCode), typeof(MessageEntityPre), typeof(MessageEntityTextUrl))]
	public partial interface IMessageEntity
	{
	}

	[TLType (typeof(ContactsResolvedPeer))]
	public partial interface IContactsResolvedPeer
	{
	}

	[TLType (typeof(MessageRange))]
	public partial interface IMessageRange
	{
	}

	[TLType (typeof(MessageGroup))]
	public partial interface IMessageGroup
	{
	}

	[TLType (typeof(UpdatesChannelDifferenceEmpty), typeof(UpdatesChannelDifferenceTooLong), typeof(UpdatesChannelDifference))]
	public partial interface IUpdatesChannelDifference
	{
	}

	[TLType (typeof(ChannelMessagesFilterEmpty), typeof(ChannelMessagesFilter), typeof(ChannelMessagesFilterCollapsed))]
	public partial interface IChannelMessagesFilter
	{
	}

	[TLType (typeof(ChannelParticipant), typeof(ChannelParticipantSelf), typeof(ChannelParticipantModerator), typeof(ChannelParticipantEditor), typeof(ChannelParticipantKicked), typeof(ChannelParticipantCreator))]
	public partial interface IChannelParticipant
	{
	}

	[TLType (typeof(ChannelParticipantsRecent), typeof(ChannelParticipantsAdmins), typeof(ChannelParticipantsKicked), typeof(ChannelParticipantsBots))]
	public partial interface IChannelParticipantsFilter
	{
	}

	[TLType (typeof(ChannelRoleEmpty), typeof(ChannelRoleModerator), typeof(ChannelRoleEditor))]
	public partial interface IChannelParticipantRole
	{
	}

	[TLType (typeof(ChannelsChannelParticipants))]
	public partial interface IChannelsChannelParticipants
	{
	}

	[TLType (typeof(ChannelsChannelParticipant))]
	public partial interface IChannelsChannelParticipant
	{
	}

	[TLType (typeof(HelpTermsOfService))]
	public partial interface IHelpTermsOfService
	{
	}

	[TLType (typeof(FoundGif), typeof(FoundGifCached))]
	public partial interface IFoundGif
	{
	}

	[TLType (typeof(MessagesFoundGifs))]
	public partial interface IMessagesFoundGifs
	{
	}

	[TLType (typeof(MessagesSavedGifsNotModified), typeof(MessagesSavedGifs))]
	public partial interface IMessagesSavedGifs
	{
	}

	[TLType (typeof(InputBotInlineMessageMediaAuto), typeof(InputBotInlineMessageText), typeof(InputBotInlineMessageMediaGeo), typeof(InputBotInlineMessageMediaVenue), typeof(InputBotInlineMessageMediaContact))]
	public partial interface IInputBotInlineMessage
	{
	}

	[TLType (typeof(InputBotInlineResult), typeof(InputBotInlineResultPhoto), typeof(InputBotInlineResultDocument))]
	public partial interface IInputBotInlineResult
	{
	}

	[TLType (typeof(BotInlineMessageMediaAuto), typeof(BotInlineMessageText), typeof(BotInlineMessageMediaGeo), typeof(BotInlineMessageMediaVenue), typeof(BotInlineMessageMediaContact))]
	public partial interface IBotInlineMessage
	{
	}

	[TLType (typeof(BotInlineResult), typeof(BotInlineMediaResult))]
	public partial interface IBotInlineResult
	{
	}

	[TLType (typeof(MessagesBotResults))]
	public partial interface IMessagesBotResults
	{
	}

	[TLType (typeof(InlineBotSwitchPM))]
	public partial interface IInlineBotSwitchPM
	{
	}

	[TLType (typeof(InputBotInlineMessageID))]
	public partial interface IInputBotInlineMessageID
	{
	}

	[TLType (typeof(ExportedMessageLink))]
	public partial interface IExportedMessageLink
	{
	}

	[TLType (typeof(MessagesBotCallbackAnswer))]
	public partial interface IMessagesBotCallbackAnswer
	{
	}

	[TLType (typeof(MessagesMessageEditData))]
	public partial interface IMessagesMessageEditData
	{
	}


	/// <summary>
	///     TL methods.
	/// </summary>
	public interface ITelegramMethods
	{
		System.Object InvokeAfterMsg (InvokeAfterMsgArgs args);

		System.Object InvokeAfterMsgs (InvokeAfterMsgsArgs args);

		IAuthCheckedPhone AuthCheckPhone (AuthCheckPhoneArgs args);

		IAuthSentCode AuthSendCode (AuthSendCodeArgs args);

		IAuthAuthorization AuthSignUp (AuthSignUpArgs args);

		IAuthAuthorization AuthSignIn (AuthSignInArgs args);

		System.Boolean AuthLogOut (AuthLogOutArgs args);

		System.Boolean AuthResetAuthorizations (AuthResetAuthorizationsArgs args);

		System.Boolean AuthSendInvites (AuthSendInvitesArgs args);

		IAuthExportedAuthorization AuthExportAuthorization (AuthExportAuthorizationArgs args);

		IAuthAuthorization AuthImportAuthorization (AuthImportAuthorizationArgs args);

		System.Boolean AuthBindTempAuthKey (AuthBindTempAuthKeyArgs args);

		System.Boolean AccountRegisterDevice (AccountRegisterDeviceArgs args);

		System.Boolean AccountUnregisterDevice (AccountUnregisterDeviceArgs args);

		System.Boolean AccountUpdateNotifySettings (AccountUpdateNotifySettingsArgs args);

		IPeerNotifySettings AccountGetNotifySettings (AccountGetNotifySettingsArgs args);

		System.Boolean AccountResetNotifySettings (AccountResetNotifySettingsArgs args);

		IUser AccountUpdateProfile (AccountUpdateProfileArgs args);

		System.Boolean AccountUpdateStatus (AccountUpdateStatusArgs args);

		System.Collections.Generic.List<IWallPaper> AccountGetWallPapers (AccountGetWallPapersArgs args);

		System.Boolean AccountReportPeer (AccountReportPeerArgs args);

		System.Collections.Generic.List<IUser> UsersGetUsers (UsersGetUsersArgs args);

		IUserFull UsersGetFullUser (UsersGetFullUserArgs args);

		System.Collections.Generic.List<IContactStatus> ContactsGetStatuses (ContactsGetStatusesArgs args);

		IContactsContacts ContactsGetContacts (ContactsGetContactsArgs args);

		IContactsImportedContacts ContactsImportContacts (ContactsImportContactsArgs args);

		IContactsLink ContactsDeleteContact (ContactsDeleteContactArgs args);

		System.Boolean ContactsDeleteContacts (ContactsDeleteContactsArgs args);

		System.Boolean ContactsBlock (ContactsBlockArgs args);

		System.Boolean ContactsUnblock (ContactsUnblockArgs args);

		IContactsBlocked ContactsGetBlocked (ContactsGetBlockedArgs args);

		System.Collections.Generic.List<System.UInt32> ContactsExportCard (ContactsExportCardArgs args);

		IUser ContactsImportCard (ContactsImportCardArgs args);

		IMessagesMessages MessagesGetMessages (MessagesGetMessagesArgs args);

		IMessagesDialogs MessagesGetDialogs (MessagesGetDialogsArgs args);

		IMessagesMessages MessagesGetHistory (MessagesGetHistoryArgs args);

		IMessagesMessages MessagesSearch (MessagesSearchArgs args);

		IMessagesAffectedMessages MessagesReadHistory (MessagesReadHistoryArgs args);

		IMessagesAffectedHistory MessagesDeleteHistory (MessagesDeleteHistoryArgs args);

		IMessagesAffectedMessages MessagesDeleteMessages (MessagesDeleteMessagesArgs args);

		System.Collections.Generic.List<IReceivedNotifyMessage> MessagesReceivedMessages (MessagesReceivedMessagesArgs args);

		System.Boolean MessagesSetTyping (MessagesSetTypingArgs args);

		IUpdates MessagesSendMessage (MessagesSendMessageArgs args);

		IUpdates MessagesSendMedia (MessagesSendMediaArgs args);

		IUpdates MessagesForwardMessages (MessagesForwardMessagesArgs args);

		System.Boolean MessagesReportSpam (MessagesReportSpamArgs args);

		System.Boolean MessagesHideReportSpam (MessagesHideReportSpamArgs args);

		IPeerSettings MessagesGetPeerSettings (MessagesGetPeerSettingsArgs args);

		IMessagesChats MessagesGetChats (MessagesGetChatsArgs args);

		IMessagesChatFull MessagesGetFullChat (MessagesGetFullChatArgs args);

		IUpdates MessagesEditChatTitle (MessagesEditChatTitleArgs args);

		IUpdates MessagesEditChatPhoto (MessagesEditChatPhotoArgs args);

		IUpdates MessagesAddChatUser (MessagesAddChatUserArgs args);

		IUpdates MessagesDeleteChatUser (MessagesDeleteChatUserArgs args);

		IUpdates MessagesCreateChat (MessagesCreateChatArgs args);

		IUpdatesState UpdatesGetState (UpdatesGetStateArgs args);

		IUpdatesDifference UpdatesGetDifference (UpdatesGetDifferenceArgs args);

		IUserProfilePhoto PhotosUpdateProfilePhoto (PhotosUpdateProfilePhotoArgs args);

		IPhotosPhoto PhotosUploadProfilePhoto (PhotosUploadProfilePhotoArgs args);

		System.Collections.Generic.List<System.UInt64> PhotosDeletePhotos (PhotosDeletePhotosArgs args);

		System.Boolean UploadSaveFilePart (UploadSaveFilePartArgs args);

		IUploadFile UploadGetFile (UploadGetFileArgs args);

		IConfig HelpGetConfig (HelpGetConfigArgs args);

		INearestDc HelpGetNearestDc (HelpGetNearestDcArgs args);

		IHelpAppUpdate HelpGetAppUpdate (HelpGetAppUpdateArgs args);

		System.Boolean HelpSaveAppLog (HelpSaveAppLogArgs args);

		IHelpInviteText HelpGetInviteText (HelpGetInviteTextArgs args);

		IPhotosPhotos PhotosGetUserPhotos (PhotosGetUserPhotosArgs args);

		IUpdates MessagesForwardMessage (MessagesForwardMessageArgs args);

		IUpdates MessagesSendBroadcast (MessagesSendBroadcastArgs args);

		IMessagesDhConfig MessagesGetDhConfig (MessagesGetDhConfigArgs args);

		IEncryptedChat MessagesRequestEncryption (MessagesRequestEncryptionArgs args);

		IEncryptedChat MessagesAcceptEncryption (MessagesAcceptEncryptionArgs args);

		System.Boolean MessagesDiscardEncryption (MessagesDiscardEncryptionArgs args);

		System.Boolean MessagesSetEncryptedTyping (MessagesSetEncryptedTypingArgs args);

		System.Boolean MessagesReadEncryptedHistory (MessagesReadEncryptedHistoryArgs args);

		IMessagesSentEncryptedMessage MessagesSendEncrypted (MessagesSendEncryptedArgs args);

		IMessagesSentEncryptedMessage MessagesSendEncryptedFile (MessagesSendEncryptedFileArgs args);

		IMessagesSentEncryptedMessage MessagesSendEncryptedService (MessagesSendEncryptedServiceArgs args);

		System.Collections.Generic.List<System.UInt64> MessagesReceivedQueue (MessagesReceivedQueueArgs args);

		System.Boolean UploadSaveBigFilePart (UploadSaveBigFilePartArgs args);

		System.Object InitConnection (InitConnectionArgs args);

		IHelpSupport HelpGetSupport (HelpGetSupportArgs args);

		IMessagesAffectedMessages MessagesReadMessageContents (MessagesReadMessageContentsArgs args);

		System.Boolean AccountCheckUsername (AccountCheckUsernameArgs args);

		IUser AccountUpdateUsername (AccountUpdateUsernameArgs args);

		IContactsFound ContactsSearch (ContactsSearchArgs args);

		IAccountPrivacyRules AccountGetPrivacy (AccountGetPrivacyArgs args);

		IAccountPrivacyRules AccountSetPrivacy (AccountSetPrivacyArgs args);

		System.Boolean AccountDeleteAccount (AccountDeleteAccountArgs args);

		IAccountDaysTTL AccountGetAccountTTL (AccountGetAccountTTLArgs args);

		System.Boolean AccountSetAccountTTL (AccountSetAccountTTLArgs args);

		System.Object InvokeWithLayer (InvokeWithLayerArgs args);

		IContactsResolvedPeer ContactsResolveUsername (ContactsResolveUsernameArgs args);

		IAuthSentCode AccountSendChangePhoneCode (AccountSendChangePhoneCodeArgs args);

		IUser AccountChangePhone (AccountChangePhoneArgs args);

		IMessagesStickers MessagesGetStickers (MessagesGetStickersArgs args);

		IMessagesAllStickers MessagesGetAllStickers (MessagesGetAllStickersArgs args);

		System.Boolean AccountUpdateDeviceLocked (AccountUpdateDeviceLockedArgs args);

		IAuthAuthorization AuthImportBotAuthorization (AuthImportBotAuthorizationArgs args);

		IMessageMedia MessagesGetWebPagePreview (MessagesGetWebPagePreviewArgs args);

		IAccountAuthorizations AccountGetAuthorizations (AccountGetAuthorizationsArgs args);

		System.Boolean AccountResetAuthorization (AccountResetAuthorizationArgs args);

		IAccountPassword AccountGetPassword (AccountGetPasswordArgs args);

		IAccountPasswordSettings AccountGetPasswordSettings (AccountGetPasswordSettingsArgs args);

		System.Boolean AccountUpdatePasswordSettings (AccountUpdatePasswordSettingsArgs args);

		IAuthAuthorization AuthCheckPassword (AuthCheckPasswordArgs args);

		IAuthPasswordRecovery AuthRequestPasswordRecovery (AuthRequestPasswordRecoveryArgs args);

		IAuthAuthorization AuthRecoverPassword (AuthRecoverPasswordArgs args);

		System.Object InvokeWithoutUpdates (InvokeWithoutUpdatesArgs args);

		IExportedChatInvite MessagesExportChatInvite (MessagesExportChatInviteArgs args);

		IChatInvite MessagesCheckChatInvite (MessagesCheckChatInviteArgs args);

		IUpdates MessagesImportChatInvite (MessagesImportChatInviteArgs args);

		IMessagesStickerSet MessagesGetStickerSet (MessagesGetStickerSetArgs args);

		System.Boolean MessagesInstallStickerSet (MessagesInstallStickerSetArgs args);

		System.Boolean MessagesUninstallStickerSet (MessagesUninstallStickerSetArgs args);

		IUpdates MessagesStartBot (MessagesStartBotArgs args);

		IHelpAppChangelog HelpGetAppChangelog (HelpGetAppChangelogArgs args);

		System.Collections.Generic.List<System.UInt32> MessagesGetMessagesViews (MessagesGetMessagesViewsArgs args);

		IMessagesDialogs ChannelsGetDialogs (ChannelsGetDialogsArgs args);

		IMessagesMessages ChannelsGetImportantHistory (ChannelsGetImportantHistoryArgs args);

		System.Boolean ChannelsReadHistory (ChannelsReadHistoryArgs args);

		IMessagesAffectedMessages ChannelsDeleteMessages (ChannelsDeleteMessagesArgs args);

		IMessagesAffectedHistory ChannelsDeleteUserHistory (ChannelsDeleteUserHistoryArgs args);

		System.Boolean ChannelsReportSpam (ChannelsReportSpamArgs args);

		IMessagesMessages ChannelsGetMessages (ChannelsGetMessagesArgs args);

		IChannelsChannelParticipants ChannelsGetParticipants (ChannelsGetParticipantsArgs args);

		IChannelsChannelParticipant ChannelsGetParticipant (ChannelsGetParticipantArgs args);

		IMessagesChats ChannelsGetChannels (ChannelsGetChannelsArgs args);

		IMessagesChatFull ChannelsGetFullChannel (ChannelsGetFullChannelArgs args);

		IUpdates ChannelsCreateChannel (ChannelsCreateChannelArgs args);

		System.Boolean ChannelsEditAbout (ChannelsEditAboutArgs args);

		IUpdates ChannelsEditAdmin (ChannelsEditAdminArgs args);

		IUpdates ChannelsEditTitle (ChannelsEditTitleArgs args);

		IUpdates ChannelsEditPhoto (ChannelsEditPhotoArgs args);

		IUpdates ChannelsToggleComments (ChannelsToggleCommentsArgs args);

		System.Boolean ChannelsCheckUsername (ChannelsCheckUsernameArgs args);

		System.Boolean ChannelsUpdateUsername (ChannelsUpdateUsernameArgs args);

		IUpdates ChannelsJoinChannel (ChannelsJoinChannelArgs args);

		IUpdates ChannelsLeaveChannel (ChannelsLeaveChannelArgs args);

		IUpdates ChannelsInviteToChannel (ChannelsInviteToChannelArgs args);

		IUpdates ChannelsKickFromChannel (ChannelsKickFromChannelArgs args);

		IExportedChatInvite ChannelsExportInvite (ChannelsExportInviteArgs args);

		IUpdates ChannelsDeleteChannel (ChannelsDeleteChannelArgs args);

		IUpdatesChannelDifference UpdatesGetChannelDifference (UpdatesGetChannelDifferenceArgs args);

		IUpdates MessagesToggleChatAdmins (MessagesToggleChatAdminsArgs args);

		System.Boolean MessagesEditChatAdmin (MessagesEditChatAdminArgs args);

		IUpdates MessagesMigrateChat (MessagesMigrateChatArgs args);

		IMessagesMessages MessagesSearchGlobal (MessagesSearchGlobalArgs args);

		IHelpTermsOfService HelpGetTermsOfService (HelpGetTermsOfServiceArgs args);

		System.Boolean MessagesReorderStickerSets (MessagesReorderStickerSetsArgs args);

		IDocument MessagesGetDocumentByHash (MessagesGetDocumentByHashArgs args);

		IMessagesFoundGifs MessagesSearchGifs (MessagesSearchGifsArgs args);

		IMessagesSavedGifs MessagesGetSavedGifs (MessagesGetSavedGifsArgs args);

		System.Boolean MessagesSaveGif (MessagesSaveGifArgs args);

		IMessagesBotResults MessagesGetInlineBotResults (MessagesGetInlineBotResultsArgs args);

		System.Boolean MessagesSetInlineBotResults (MessagesSetInlineBotResultsArgs args);

		IUpdates MessagesSendInlineBotResult (MessagesSendInlineBotResultArgs args);

		IUpdates ChannelsToggleInvites (ChannelsToggleInvitesArgs args);

		IExportedMessageLink ChannelsExportMessageLink (ChannelsExportMessageLinkArgs args);

		IUpdates ChannelsToggleSignatures (ChannelsToggleSignaturesArgs args);

		IUpdates ChannelsUpdatePinnedMessage (ChannelsUpdatePinnedMessageArgs args);

		IAuthSentCode AuthResendCode (AuthResendCodeArgs args);

		System.Boolean AuthCancelCode (AuthCancelCodeArgs args);

		IMessagesMessageEditData MessagesGetMessageEditData (MessagesGetMessageEditDataArgs args);

		IUpdates MessagesEditMessage (MessagesEditMessageArgs args);

		System.Boolean MessagesEditInlineBotMessage (MessagesEditInlineBotMessageArgs args);

		IMessagesBotCallbackAnswer MessagesGetBotCallbackAnswer (MessagesGetBotCallbackAnswerArgs args);

		System.Boolean MessagesSetBotCallbackAnswer (MessagesSetBotCallbackAnswerArgs args);
	}

	/// <summary>
	///     TL async methods.
	/// </summary>
	public interface ITelegramAsyncMethods
	{
		Task<System.Object> InvokeAfterMsgAsync (InvokeAfterMsgArgs args);

		Task<System.Object> InvokeAfterMsgsAsync (InvokeAfterMsgsArgs args);

		Task<IAuthCheckedPhone> AuthCheckPhoneAsync (AuthCheckPhoneArgs args);

		Task<IAuthSentCode> AuthSendCodeAsync (AuthSendCodeArgs args);

		Task<IAuthAuthorization> AuthSignUpAsync (AuthSignUpArgs args);

		Task<IAuthAuthorization> AuthSignInAsync (AuthSignInArgs args);

		Task<System.Boolean> AuthLogOutAsync (AuthLogOutArgs args);

		Task<System.Boolean> AuthResetAuthorizationsAsync (AuthResetAuthorizationsArgs args);

		Task<System.Boolean> AuthSendInvitesAsync (AuthSendInvitesArgs args);

		Task<IAuthExportedAuthorization> AuthExportAuthorizationAsync (AuthExportAuthorizationArgs args);

		Task<IAuthAuthorization> AuthImportAuthorizationAsync (AuthImportAuthorizationArgs args);

		Task<System.Boolean> AuthBindTempAuthKeyAsync (AuthBindTempAuthKeyArgs args);

		Task<System.Boolean> AccountRegisterDeviceAsync (AccountRegisterDeviceArgs args);

		Task<System.Boolean> AccountUnregisterDeviceAsync (AccountUnregisterDeviceArgs args);

		Task<System.Boolean> AccountUpdateNotifySettingsAsync (AccountUpdateNotifySettingsArgs args);

		Task<IPeerNotifySettings> AccountGetNotifySettingsAsync (AccountGetNotifySettingsArgs args);

		Task<System.Boolean> AccountResetNotifySettingsAsync (AccountResetNotifySettingsArgs args);

		Task<IUser> AccountUpdateProfileAsync (AccountUpdateProfileArgs args);

		Task<System.Boolean> AccountUpdateStatusAsync (AccountUpdateStatusArgs args);

		Task<System.Collections.Generic.List<IWallPaper>> AccountGetWallPapersAsync (AccountGetWallPapersArgs args);

		Task<System.Boolean> AccountReportPeerAsync (AccountReportPeerArgs args);

		Task<System.Collections.Generic.List<IUser>> UsersGetUsersAsync (UsersGetUsersArgs args);

		Task<IUserFull> UsersGetFullUserAsync (UsersGetFullUserArgs args);

		Task<System.Collections.Generic.List<IContactStatus>> ContactsGetStatusesAsync (ContactsGetStatusesArgs args);

		Task<IContactsContacts> ContactsGetContactsAsync (ContactsGetContactsArgs args);

		Task<IContactsImportedContacts> ContactsImportContactsAsync (ContactsImportContactsArgs args);

		Task<IContactsLink> ContactsDeleteContactAsync (ContactsDeleteContactArgs args);

		Task<System.Boolean> ContactsDeleteContactsAsync (ContactsDeleteContactsArgs args);

		Task<System.Boolean> ContactsBlockAsync (ContactsBlockArgs args);

		Task<System.Boolean> ContactsUnblockAsync (ContactsUnblockArgs args);

		Task<IContactsBlocked> ContactsGetBlockedAsync (ContactsGetBlockedArgs args);

		Task<System.Collections.Generic.List<System.UInt32>> ContactsExportCardAsync (ContactsExportCardArgs args);

		Task<IUser> ContactsImportCardAsync (ContactsImportCardArgs args);

		Task<IMessagesMessages> MessagesGetMessagesAsync (MessagesGetMessagesArgs args);

		Task<IMessagesDialogs> MessagesGetDialogsAsync (MessagesGetDialogsArgs args);

		Task<IMessagesMessages> MessagesGetHistoryAsync (MessagesGetHistoryArgs args);

		Task<IMessagesMessages> MessagesSearchAsync (MessagesSearchArgs args);

		Task<IMessagesAffectedMessages> MessagesReadHistoryAsync (MessagesReadHistoryArgs args);

		Task<IMessagesAffectedHistory> MessagesDeleteHistoryAsync (MessagesDeleteHistoryArgs args);

		Task<IMessagesAffectedMessages> MessagesDeleteMessagesAsync (MessagesDeleteMessagesArgs args);

		Task<System.Collections.Generic.List<IReceivedNotifyMessage>> MessagesReceivedMessagesAsync (MessagesReceivedMessagesArgs args);

		Task<System.Boolean> MessagesSetTypingAsync (MessagesSetTypingArgs args);

		Task<IUpdates> MessagesSendMessageAsync (MessagesSendMessageArgs args);

		Task<IUpdates> MessagesSendMediaAsync (MessagesSendMediaArgs args);

		Task<IUpdates> MessagesForwardMessagesAsync (MessagesForwardMessagesArgs args);

		Task<System.Boolean> MessagesReportSpamAsync (MessagesReportSpamArgs args);

		Task<System.Boolean> MessagesHideReportSpamAsync (MessagesHideReportSpamArgs args);

		Task<IPeerSettings> MessagesGetPeerSettingsAsync (MessagesGetPeerSettingsArgs args);

		Task<IMessagesChats> MessagesGetChatsAsync (MessagesGetChatsArgs args);

		Task<IMessagesChatFull> MessagesGetFullChatAsync (MessagesGetFullChatArgs args);

		Task<IUpdates> MessagesEditChatTitleAsync (MessagesEditChatTitleArgs args);

		Task<IUpdates> MessagesEditChatPhotoAsync (MessagesEditChatPhotoArgs args);

		Task<IUpdates> MessagesAddChatUserAsync (MessagesAddChatUserArgs args);

		Task<IUpdates> MessagesDeleteChatUserAsync (MessagesDeleteChatUserArgs args);

		Task<IUpdates> MessagesCreateChatAsync (MessagesCreateChatArgs args);

		Task<IUpdatesState> UpdatesGetStateAsync (UpdatesGetStateArgs args);

		Task<IUpdatesDifference> UpdatesGetDifferenceAsync (UpdatesGetDifferenceArgs args);

		Task<IUserProfilePhoto> PhotosUpdateProfilePhotoAsync (PhotosUpdateProfilePhotoArgs args);

		Task<IPhotosPhoto> PhotosUploadProfilePhotoAsync (PhotosUploadProfilePhotoArgs args);

		Task<System.Collections.Generic.List<System.UInt64>> PhotosDeletePhotosAsync (PhotosDeletePhotosArgs args);

		Task<System.Boolean> UploadSaveFilePartAsync (UploadSaveFilePartArgs args);

		Task<IUploadFile> UploadGetFileAsync (UploadGetFileArgs args);

		Task<IConfig> HelpGetConfigAsync (HelpGetConfigArgs args);

		Task<INearestDc> HelpGetNearestDcAsync (HelpGetNearestDcArgs args);

		Task<IHelpAppUpdate> HelpGetAppUpdateAsync (HelpGetAppUpdateArgs args);

		Task<System.Boolean> HelpSaveAppLogAsync (HelpSaveAppLogArgs args);

		Task<IHelpInviteText> HelpGetInviteTextAsync (HelpGetInviteTextArgs args);

		Task<IPhotosPhotos> PhotosGetUserPhotosAsync (PhotosGetUserPhotosArgs args);

		Task<IUpdates> MessagesForwardMessageAsync (MessagesForwardMessageArgs args);

		Task<IUpdates> MessagesSendBroadcastAsync (MessagesSendBroadcastArgs args);

		Task<IMessagesDhConfig> MessagesGetDhConfigAsync (MessagesGetDhConfigArgs args);

		Task<IEncryptedChat> MessagesRequestEncryptionAsync (MessagesRequestEncryptionArgs args);

		Task<IEncryptedChat> MessagesAcceptEncryptionAsync (MessagesAcceptEncryptionArgs args);

		Task<System.Boolean> MessagesDiscardEncryptionAsync (MessagesDiscardEncryptionArgs args);

		Task<System.Boolean> MessagesSetEncryptedTypingAsync (MessagesSetEncryptedTypingArgs args);

		Task<System.Boolean> MessagesReadEncryptedHistoryAsync (MessagesReadEncryptedHistoryArgs args);

		Task<IMessagesSentEncryptedMessage> MessagesSendEncryptedAsync (MessagesSendEncryptedArgs args);

		Task<IMessagesSentEncryptedMessage> MessagesSendEncryptedFileAsync (MessagesSendEncryptedFileArgs args);

		Task<IMessagesSentEncryptedMessage> MessagesSendEncryptedServiceAsync (MessagesSendEncryptedServiceArgs args);

		Task<System.Collections.Generic.List<System.UInt64>> MessagesReceivedQueueAsync (MessagesReceivedQueueArgs args);

		Task<System.Boolean> UploadSaveBigFilePartAsync (UploadSaveBigFilePartArgs args);

		Task<System.Object> InitConnectionAsync (InitConnectionArgs args);

		Task<IHelpSupport> HelpGetSupportAsync (HelpGetSupportArgs args);

		Task<IMessagesAffectedMessages> MessagesReadMessageContentsAsync (MessagesReadMessageContentsArgs args);

		Task<System.Boolean> AccountCheckUsernameAsync (AccountCheckUsernameArgs args);

		Task<IUser> AccountUpdateUsernameAsync (AccountUpdateUsernameArgs args);

		Task<IContactsFound> ContactsSearchAsync (ContactsSearchArgs args);

		Task<IAccountPrivacyRules> AccountGetPrivacyAsync (AccountGetPrivacyArgs args);

		Task<IAccountPrivacyRules> AccountSetPrivacyAsync (AccountSetPrivacyArgs args);

		Task<System.Boolean> AccountDeleteAccountAsync (AccountDeleteAccountArgs args);

		Task<IAccountDaysTTL> AccountGetAccountTTLAsync (AccountGetAccountTTLArgs args);

		Task<System.Boolean> AccountSetAccountTTLAsync (AccountSetAccountTTLArgs args);

		Task<System.Object> InvokeWithLayerAsync (InvokeWithLayerArgs args);

		Task<IContactsResolvedPeer> ContactsResolveUsernameAsync (ContactsResolveUsernameArgs args);

		Task<IAuthSentCode> AccountSendChangePhoneCodeAsync (AccountSendChangePhoneCodeArgs args);

		Task<IUser> AccountChangePhoneAsync (AccountChangePhoneArgs args);

		Task<IMessagesStickers> MessagesGetStickersAsync (MessagesGetStickersArgs args);

		Task<IMessagesAllStickers> MessagesGetAllStickersAsync (MessagesGetAllStickersArgs args);

		Task<System.Boolean> AccountUpdateDeviceLockedAsync (AccountUpdateDeviceLockedArgs args);

		Task<IAuthAuthorization> AuthImportBotAuthorizationAsync (AuthImportBotAuthorizationArgs args);

		Task<IMessageMedia> MessagesGetWebPagePreviewAsync (MessagesGetWebPagePreviewArgs args);

		Task<IAccountAuthorizations> AccountGetAuthorizationsAsync (AccountGetAuthorizationsArgs args);

		Task<System.Boolean> AccountResetAuthorizationAsync (AccountResetAuthorizationArgs args);

		Task<IAccountPassword> AccountGetPasswordAsync (AccountGetPasswordArgs args);

		Task<IAccountPasswordSettings> AccountGetPasswordSettingsAsync (AccountGetPasswordSettingsArgs args);

		Task<System.Boolean> AccountUpdatePasswordSettingsAsync (AccountUpdatePasswordSettingsArgs args);

		Task<IAuthAuthorization> AuthCheckPasswordAsync (AuthCheckPasswordArgs args);

		Task<IAuthPasswordRecovery> AuthRequestPasswordRecoveryAsync (AuthRequestPasswordRecoveryArgs args);

		Task<IAuthAuthorization> AuthRecoverPasswordAsync (AuthRecoverPasswordArgs args);

		Task<System.Object> InvokeWithoutUpdatesAsync (InvokeWithoutUpdatesArgs args);

		Task<IExportedChatInvite> MessagesExportChatInviteAsync (MessagesExportChatInviteArgs args);

		Task<IChatInvite> MessagesCheckChatInviteAsync (MessagesCheckChatInviteArgs args);

		Task<IUpdates> MessagesImportChatInviteAsync (MessagesImportChatInviteArgs args);

		Task<IMessagesStickerSet> MessagesGetStickerSetAsync (MessagesGetStickerSetArgs args);

		Task<System.Boolean> MessagesInstallStickerSetAsync (MessagesInstallStickerSetArgs args);

		Task<System.Boolean> MessagesUninstallStickerSetAsync (MessagesUninstallStickerSetArgs args);

		Task<IUpdates> MessagesStartBotAsync (MessagesStartBotArgs args);

		Task<IHelpAppChangelog> HelpGetAppChangelogAsync (HelpGetAppChangelogArgs args);

		Task<System.Collections.Generic.List<System.UInt32>> MessagesGetMessagesViewsAsync (MessagesGetMessagesViewsArgs args);

		Task<IMessagesDialogs> ChannelsGetDialogsAsync (ChannelsGetDialogsArgs args);

		Task<IMessagesMessages> ChannelsGetImportantHistoryAsync (ChannelsGetImportantHistoryArgs args);

		Task<System.Boolean> ChannelsReadHistoryAsync (ChannelsReadHistoryArgs args);

		Task<IMessagesAffectedMessages> ChannelsDeleteMessagesAsync (ChannelsDeleteMessagesArgs args);

		Task<IMessagesAffectedHistory> ChannelsDeleteUserHistoryAsync (ChannelsDeleteUserHistoryArgs args);

		Task<System.Boolean> ChannelsReportSpamAsync (ChannelsReportSpamArgs args);

		Task<IMessagesMessages> ChannelsGetMessagesAsync (ChannelsGetMessagesArgs args);

		Task<IChannelsChannelParticipants> ChannelsGetParticipantsAsync (ChannelsGetParticipantsArgs args);

		Task<IChannelsChannelParticipant> ChannelsGetParticipantAsync (ChannelsGetParticipantArgs args);

		Task<IMessagesChats> ChannelsGetChannelsAsync (ChannelsGetChannelsArgs args);

		Task<IMessagesChatFull> ChannelsGetFullChannelAsync (ChannelsGetFullChannelArgs args);

		Task<IUpdates> ChannelsCreateChannelAsync (ChannelsCreateChannelArgs args);

		Task<System.Boolean> ChannelsEditAboutAsync (ChannelsEditAboutArgs args);

		Task<IUpdates> ChannelsEditAdminAsync (ChannelsEditAdminArgs args);

		Task<IUpdates> ChannelsEditTitleAsync (ChannelsEditTitleArgs args);

		Task<IUpdates> ChannelsEditPhotoAsync (ChannelsEditPhotoArgs args);

		Task<IUpdates> ChannelsToggleCommentsAsync (ChannelsToggleCommentsArgs args);

		Task<System.Boolean> ChannelsCheckUsernameAsync (ChannelsCheckUsernameArgs args);

		Task<System.Boolean> ChannelsUpdateUsernameAsync (ChannelsUpdateUsernameArgs args);

		Task<IUpdates> ChannelsJoinChannelAsync (ChannelsJoinChannelArgs args);

		Task<IUpdates> ChannelsLeaveChannelAsync (ChannelsLeaveChannelArgs args);

		Task<IUpdates> ChannelsInviteToChannelAsync (ChannelsInviteToChannelArgs args);

		Task<IUpdates> ChannelsKickFromChannelAsync (ChannelsKickFromChannelArgs args);

		Task<IExportedChatInvite> ChannelsExportInviteAsync (ChannelsExportInviteArgs args);

		Task<IUpdates> ChannelsDeleteChannelAsync (ChannelsDeleteChannelArgs args);

		Task<IUpdatesChannelDifference> UpdatesGetChannelDifferenceAsync (UpdatesGetChannelDifferenceArgs args);

		Task<IUpdates> MessagesToggleChatAdminsAsync (MessagesToggleChatAdminsArgs args);

		Task<System.Boolean> MessagesEditChatAdminAsync (MessagesEditChatAdminArgs args);

		Task<IUpdates> MessagesMigrateChatAsync (MessagesMigrateChatArgs args);

		Task<IMessagesMessages> MessagesSearchGlobalAsync (MessagesSearchGlobalArgs args);

		Task<IHelpTermsOfService> HelpGetTermsOfServiceAsync (HelpGetTermsOfServiceArgs args);

		Task<System.Boolean> MessagesReorderStickerSetsAsync (MessagesReorderStickerSetsArgs args);

		Task<IDocument> MessagesGetDocumentByHashAsync (MessagesGetDocumentByHashArgs args);

		Task<IMessagesFoundGifs> MessagesSearchGifsAsync (MessagesSearchGifsArgs args);

		Task<IMessagesSavedGifs> MessagesGetSavedGifsAsync (MessagesGetSavedGifsArgs args);

		Task<System.Boolean> MessagesSaveGifAsync (MessagesSaveGifArgs args);

		Task<IMessagesBotResults> MessagesGetInlineBotResultsAsync (MessagesGetInlineBotResultsArgs args);

		Task<System.Boolean> MessagesSetInlineBotResultsAsync (MessagesSetInlineBotResultsArgs args);

		Task<IUpdates> MessagesSendInlineBotResultAsync (MessagesSendInlineBotResultArgs args);

		Task<IUpdates> ChannelsToggleInvitesAsync (ChannelsToggleInvitesArgs args);

		Task<IExportedMessageLink> ChannelsExportMessageLinkAsync (ChannelsExportMessageLinkArgs args);

		Task<IUpdates> ChannelsToggleSignaturesAsync (ChannelsToggleSignaturesArgs args);

		Task<IUpdates> ChannelsUpdatePinnedMessageAsync (ChannelsUpdatePinnedMessageArgs args);

		Task<IAuthSentCode> AuthResendCodeAsync (AuthResendCodeArgs args);

		Task<System.Boolean> AuthCancelCodeAsync (AuthCancelCodeArgs args);

		Task<IMessagesMessageEditData> MessagesGetMessageEditDataAsync (MessagesGetMessageEditDataArgs args);

		Task<IUpdates> MessagesEditMessageAsync (MessagesEditMessageArgs args);

		Task<System.Boolean> MessagesEditInlineBotMessageAsync (MessagesEditInlineBotMessageArgs args);

		Task<IMessagesBotCallbackAnswer> MessagesGetBotCallbackAnswerAsync (MessagesGetBotCallbackAnswerArgs args);

		Task<System.Boolean> MessagesSetBotCallbackAnswerAsync (MessagesSetBotCallbackAnswerArgs args);
	}
}
#pragma warning restore 1591
